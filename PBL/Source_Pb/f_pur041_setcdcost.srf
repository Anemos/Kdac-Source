$PBExportHeader$f_pur041_setcdcost.srf
$PBExportComments$CD기준단가등록및변경(PUR113)
global type f_pur041_setcdcost from function_object
end type

forward prototypes
global subroutine f_pur041_setcdcost (string as_vsrno, string as_itno, decimal ad_xcost)
end prototypes

global subroutine f_pur041_setcdcost (string as_vsrno, string as_itno, decimal ad_xcost);string  ls_xplant,ls_div,ls_cls,ls_pdcd,ls_xunit,ls_xyear,ls_yadjdt
long ll_rcnt
dec  {2} ld_ycost
ls_xyear = mid(g_s_date,1,4)

DECLARE cur_1 CURSOR FOR  
    SELECT "PBINV"."INV101"."XPLANT",   
           "PBINV"."INV101"."DIV",   
           "PBINV"."INV101"."CLS",   
           "PBINV"."INV101"."PDCD",   
           "PBINV"."INV101"."XUNIT"  
   FROM "PBINV"."INV101"  
   WHERE ( "PBINV"."INV101"."COMLTD" = '01' ) AND  
         ( "PBINV"."INV101"."ITNO" = :as_itno )   ;
OPEN CUR_1;
 DO WHILE TRUE
	FETCH CUR_1 INTO  :ls_xplant, :ls_div, :ls_cls, 
	                  :ls_pdcd,   :ls_xunit; 
	if sqlca.sqlcode <> 0  then
		exit
	end if
	//messagebox('','1')
	//사업계획단가
//	 SELECT coalesce("DEBPMO"."BPMDAQ"."YDATE",''),coalesce("DEBPMO"."BPMDAQ"."YCSTD0",0)    
//    INTO :ls_yadjdt, :ld_ycost  
//    FROM "DEBPMO"."BPMDAQ"  
//    WHERE ( "DEBPMO"."BPMDAQ"."YCCYY" = :ls_xyear ) AND  
//         ( "DEBPMO"."BPMDAQ"."YITNO"  = :as_itno ) AND  
//         ( "DEBPMO"."BPMDAQ"."YVNDSR" = :as_vsrno )   
//           ;

 //CD단가유무
	SELECT count(*)  
   INTO :ll_rcnt  
   FROM "PBPUR"."PUR113"  
   WHERE ( "PBPUR"."PUR113"."COMLTD" = '01' ) AND  
         ( "PBPUR"."PUR113"."XYEAR"  = :ls_xyear ) AND  
         ( "PBPUR"."PUR113"."XPLANT" = :ls_xplant ) AND  
         ( "PBPUR"."PUR113"."DIV"    = :ls_div ) AND  
         ( "PBPUR"."PUR113"."ITNO"   = :as_itno ) AND  
         ( "PBPUR"."PUR113"."VSRNO"  = :as_vsrno )   
           ;
	if ll_rcnt > 0 then  //수정
	      UPDATE "PBPUR"."PUR113"  
			SET "XCOST"  = :ad_xcost,   
				 "XADJDT" = :g_s_date,
				 updtdt = :g_s_datetime,
				 updtid = :g_s_empno
			WHERE ( "PBPUR"."PUR113"."COMLTD" = '01' ) AND  
					( "PBPUR"."PUR113"."XYEAR"  = :ls_xyear ) AND  
					( "PBPUR"."PUR113"."XPLANT" = :ls_xplant ) AND  
					( "PBPUR"."PUR113"."DIV"    = :ls_div ) AND  
					( "PBPUR"."PUR113"."ITNO"   = :as_itno ) AND  
					( "PBPUR"."PUR113"."VSRNO"  = :as_vsrno )   
					  ;
   else
		   INSERT INTO "PBPUR"."PUR113"  
         ( "COMLTD",   
           "XYEAR",   
           "XPLANT",   
           "DIV",   
           "ITNO",   
           "VSRNO",   
           "CLS",   
           "PDCD",   
           "XUNIT",   
           "CURR",   
           "YCOST",   
           "YADJDT",   
           "XCOST",   
           "XADJDT",   
           "XCAUSE",   
           "XSHEET",   
           "EXTD",   
           "INPTID",   
           "INPTDT",   
           "UPDTID",   
           "UPDTDT",   
           "IPADDR",   
           "MACADDR" )  
  VALUES ( '01',   
           :ls_xyear,   
           :ls_xplant,   
           :ls_div,   
           :as_itno,   
           :as_vsrno,   
           :ls_cls,   
           :ls_pdcd,   
           :ls_xunit,   
           ' ',   
           :ld_ycost,   
           :ls_yadjdt,   
           :ad_xcost,   
           :g_s_date,   
           ' ',   
           ' ',   
           ' ',   
           :g_s_empno,   
           :g_s_date,   
           :g_s_empno,   
           :g_s_date,   
           :g_s_ipaddr,   
           :g_s_macaddr )  ;
			//  messagebox('sqlca.sqlcode',sqlca.sqlcode)

   end if
	
	
LOOP
CLOSE CUR_1;
return

  
 
end subroutine

