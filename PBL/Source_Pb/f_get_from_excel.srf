$PBExportHeader$f_get_from_excel.srf
$PBExportComments$해당 DataWindow로 Excel UpLoad.
global type f_get_from_excel from function_object
end type

forward prototypes
global function integer f_get_from_excel (datawindow adw_target)
end prototypes

global function integer f_get_from_excel (datawindow adw_target);////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * Excel File 내용을 직접 읽어서 해당 DataWindow에 Import(UpLoad) *   << Excel Header 제외 >>
//
//                                                                              2003.02.26   박병주
//
// 사용시 주의법:  Excel DownLoad(f_Save_To_Excel)와는 달리 Excel UpLoad(f_Get_From_Excel)는
//                 사용시 주의할점이 있습니다.( UpLoad는 상당한 주의가 필요합니다. )
//
//                 1. Excel File의 내용을 순서대로 해당 DataWindow에 넣어주기 때문에 엑셀파일의 내용 순서와
//                 DataWindow Column의 순서가 같아야 합니다.
//                 ( 물론, DataWindow의 Column갯수와 엑셀시트의 가로열개수는 같아야 합니다. )
//                 2. DataWindow 각 Column의 Data Type이 Excel File의 내용을 담을수 있어야 합니다.
//                 3. 해당 DataWindow에 Import될 엑셀 파일의 내용(각 Cell)중 Null값이 있으면 안됩니다.
//
//                 위 조건을 만족시키지 않을시 UpLoad 도중 작업이 멈춰버릴수 있습니다.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////

String ls_PathName, ls_FileName
Int li_Rtn

li_Rtn = GetFileOpenName( "[Excel UpLoad]", ls_PathName, ls_FileName, "xls", &
								  "Excel Files (*.xls), *.xls" )
If li_Rtn = 0 Then Return -1


SetPointer( HourGlass! )

adw_Target.Reset( )

OleObject	OLE_Excel

OLE_Excel = Create OleObject

li_Rtn = OLE_Excel.ConnectToObject( ls_PathName )
If li_Rtn <> 0 Then
	Destroy OLE_Excel
	
	MessageBox("확인", "Excel Program이 설치되어있지 않습니다.", Exclamation!)
	Return -1
End If


SetPointer( HourGlass! )

OleObject	OLE_Sheet

OLE_Sheet = OLE_Excel.Application.WorkBooks(1).WorkSheets(1)

Long	Col = 1, Row = 1, ColCnt, RowCnt

ColCnt = Long( adw_Target.Object.DataWindow.Column.Count )


Do While True
	
	Row = adw_Target.InsertRow( 0 )
		
	For Col = 1 To ColCnt
		
		adw_Target.Object.data[Row, Col] = OLE_Sheet.Cells(Row + 1, Col).Value
																		// Excel Header 제외.
	Next
	
	If OLE_Sheet.Cells(Row + 2, 1).Value = "" Or IsNull( OLE_Sheet.Cells(Row + 2, 1).Value ) Then Exit
									// 다음 가로열의 첫번째 Cell내용이 아무것도 없으면 Import 종료. 
Loop

OLE_Excel.Application.Quit
OLE_Excel.DisConnectObject( )

Destroy	OLE_Excel
Destroy	OLE_Sheet


MessageBox( '확인!', 'Excel UpLoad가 완료됐습니다.' )

Return 0
end function

