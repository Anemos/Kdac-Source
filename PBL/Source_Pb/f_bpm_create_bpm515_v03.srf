$PBExportHeader$f_bpm_create_bpm515_v03.srf
$PBExportComments$제품별재료비 생성 ( 유상사급완성품 가공비 적용, 8888 포함)
global type f_bpm_create_bpm515_v03 from function_object
end type

forward prototypes
global function integer f_bpm_create_bpm515_v03 (string ag_cmcd, string ag_year, string ag_revno, string ag_divcode, ref string ag_message)
end prototypes

global function integer f_bpm_create_bpm515_v03 (string ag_cmcd, string ag_year, string ag_revno, string ag_divcode, ref string ag_message);// 제품별재료비 데이타생성
DELETE FROM PBBPM.BPM515
WHERE COMLTD = :ag_cmcd AND MYEAR = :ag_year AND
	MBREV = :ag_revno AND MGUBUN = :ag_divcode
using sqlca;

INSERT INTO PBBPM.BPM515
( comltd,myear,mbrev,mgubun,mplant,mdiv,mmdcd,mmdno,mseqgb,musge,mloss,
mdwon,mdusd,mdjpy,mddem,mdfrf,mdgbp,mdaud,mdesp,mdemu,mditl,
mdchf,mdbfr,mddkk,mdats,mdcad,mdsek,mdrmb,mdthb,mdetc,
miusd,mijpy,midem,mifrf,migbp,miaud,miesp,miemu,miitl,
michf,mibfr,midkk,miats,micad,misek,mirmb,mithb,mietc,
momat,molat,mcmcd )

SELECT TMP.COMLTD,TMP.AYEAR,TMP.AREV,TMP.ACODE,TMP.APLANT,TMP.ADIV,TMP.APDCD,TMP.AMDNO,TMP.SEQGB,TMP.ADECD,0,
// 내자 금액계산 
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '10' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDWON,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '11' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDUSD,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '12' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDJPY,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '13' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDDEM,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '14' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDFRF,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '15' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDGBP,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '16' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDAUD,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '17' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDESP,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '18' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDEMU,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '19' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDITL,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '20' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDCHF,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '21' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDBFR,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '22' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDDKK,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '23' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDATS,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '24' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDCAD,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '25' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDSEK,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '26' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDRMB,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '27' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDTHB,
SUM( DECIMAL(CASE WHEN TMP.SRCE <> '01' AND TMP.CLS <> '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '99' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MDETC,
//외자재료비 계산
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '11' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIUSD,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '12' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIJPY,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '13' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIDEM,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '14' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIFRF,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '15' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIGBP,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '16' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIAUD,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '17' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIESP,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '18' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIEUR,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '19' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIITL,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '20' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MICHF,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '21' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIBFR,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '22' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIDKK,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '23' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIATS,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '24' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MICAD,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '25' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MISEK,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '26' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIRMB,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '27' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MITHB,
SUM( DECIMAL(CASE WHEN TMP.SRCE = '01' THEN
			CASE WHEN TMP.CUR_SEQNO = '99' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MIETC,
SUM( DECIMAL(CASE WHEN TMP.CLS = '40' THEN
			CASE WHEN TMP.CUR_SEQNO = '10' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MOMAT,
TRUNCATE(SUM( DECIMAL(CASE WHEN TMP.CLS = '50' THEN
			CASE WHEN TMP.CUR_SEQNO = '10' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ),0) AS MOLAT,
SUM( DECIMAL(CASE WHEN TMP.CLS <> '50' THEN
			CASE WHEN TMP.YCMCD = 'Y' THEN 
				CASE WHEN TMP.ADECD = 'D' THEN TMP.CURDCST / TMP.CONV_FACTOR * TMP.BPRQT
 				ELSE TMP.CURECST / TMP.CONV_FACTOR * TMP.BPRQT END
			ELSE 0 END
		ELSE 0 END,15,6) ) AS MCMCD
FROM ( SELECT AA.COMLTD,AA.AREV,AA.ACODE,AA.AYEAR,AA.APLANT,AA.ADIV,
AA.APDCD,AA.AMDNO,AA.ADECD,AA.SEQGB,BB.BPLANT,BB.BDIV,
BB.BMDNO,BB.BSERNO,BB.BPRNO,BB.BCHNO,DD.CLS,BB.BCALC,
BB.BWOCT,BB.BYOU,BB.BPRQT,DD.SRCE,CC.YVNDSR,CC.YPLAN,CC.YCMCD,
CC.YCURR,CC.YCSTD1,CC.YCSTE1,
// 내자통화 적용
CC.YCURR AS CURD,
// 외자통화 적용
CC.YCURR AS CURE,
// 외자적용기준단가
CASE WHEN DD.CLS = '10' OR DD.CLS = '20' OR DD.CLS = '40' OR DD.CLS = '50' OR DD.CLS = '35' THEN
	CASE WHEN ( DD.SRCE = '05' OR DD.SRCE = '06' ) OR DD.CLS = '30' THEN 0
   ELSE 
		CASE WHEN DD.SRCE = '03' THEN 0
		ELSE
	     CASE WHEN DD.SRCE <> '01' THEN 
          CASE WHEN CC.YCSTE = 0 THEN 
			 	CASE WHEN BB.BYGCHK = 'Y' THEN // 유상사급완성품
					CC.YGCST
				ELSE
					CC.YCSTD 
				END
			 ELSE 
				CASE WHEN BB.BYGCHK = 'Y' THEN // 유상사급완성품
					CC.YGCST
				ELSE
					CC.YCSTE 
				END
		    END
        ELSE 
		  	 CASE WHEN BB.BYGCHK = 'Y' THEN // 유상사급완성품
				CC.YGCST
			 ELSE
				CC.YCSTE 
			 END
	     END
	   END
   END
ELSE 0 END AS CURECST,
// 내자적용기준단가
CASE WHEN DD.CLS = '10' OR DD.CLS = '20' OR DD.CLS = '40' OR DD.CLS = '50' OR DD.CLS = '35' THEN
	CASE WHEN ( DD.SRCE = '05' OR DD.SRCE = '06' ) OR DD.CLS = '30' THEN 0
   ELSE 
		CASE WHEN DD.SRCE = '03' THEN 0
		ELSE		
			CASE WHEN DD.SRCE <> '01' THEN 
          	CASE WHEN CC.YCSTD = 0 THEN 
					CASE WHEN BB.BYGCHK = 'Y' THEN // 유상사급완성품
						CC.YGCST
					ELSE
						CC.YCSTE
					END
				ELSE 
					CASE WHEN BB.BYGCHK = 'Y' THEN // 유상사급완성품
						CC.YGCST
					ELSE
						CC.YCSTD
					END
				END
        	ELSE 
				CASE WHEN BB.BYGCHK = 'Y' THEN // 유상사급완성품
					CC.YGCST
				ELSE
					CC.YCSTD 
				END
			END 
		END
   END
ELSE 0 END AS CURDCST,
// 변환계수
CC.CONVQTY AS CONV_FACTOR,
// 통화번호
IFNULL(EE.SEQNO,'99') AS CUR_SEQNO,
// 외자환율
CASE WHEN CC.YCURR <> '' AND CC.YCURR <> 'KRW' THEN
   ( SELECT IFNULL(EXCH,0) FROM PBBPM.BPM506 WHERE XYEAR = :ag_year AND REVNO = :ag_revno AND CURR = CC.YCURR )
ELSE 1 END AS WKEXCE,
// 내자환율
CASE WHEN CC.YCURR <> '' AND CC.YCURR <> 'KRW' THEN
   ( SELECT IFNULL(EXCH,0) FROM PBBPM.BPM506 WHERE XYEAR = :ag_year AND REVNO = :ag_revno AND CURR = CC.YCURR )
ELSE 1 END AS WKEXCD
FROM ( SELECT DISTINCT COMLTD,AYEAR,AREV,ACODE,APLANT,ADIV,APDCD,AMDNO,'D' AS ADECD,SEQGB FROM PBBPM.BPM501
WHERE COMLTD = '01' AND AYEAR = :ag_year AND AREV = :ag_revno AND ACODE = :ag_divcode AND SEQGB <> 'S'
UNION ALL
 SELECT DISTINCT COMLTD,AYEAR,AREV,ACODE,APLANT,ADIV,APDCD,AMDNO,'E' AS ADECD,SEQGB FROM PBBPM.BPM501
WHERE COMLTD = '01' AND AYEAR = :ag_year AND AREV = :ag_revno AND ACODE = :ag_divcode AND SEQGB <> 'S' ) AA
INNER JOIN PBBPM.BPM508 BB
ON AA.COMLTD = BB.COMLTD AND AA.APLANT = BB.BPLANT AND AA.ADIV = BB.BDIV AND
	AA.AMDNO = BB.BMDNO AND AA.AYEAR = BB.XYEAR AND AA.AREV = BB.BREV AND
	AA.ACODE = BB.BGUBUN
INNER JOIN PBBPM.BPM503 DD
ON BB.XYEAR = DD.XYEAR AND BB.BREV = DD.REVNO AND BB.BALCD = DD.XPLANT AND BB.BALDIV = DD.DIV AND BB.BCHNO = DD.ITNO
INNER JOIN PBBPM.BPM509 CC
ON BB.XYEAR = CC.YCCYY AND BB.BREV = CC.REVNO AND BB.BCHNO = CC.YITNO AND
   CC.YGUBUN = '10' AND CC.YGRAD = '1'
LEFT OUTER JOIN PBBPM.BPM520 EE
ON CC.YCURR = EE.CURUNIT
ORDER BY AA.APLANT,AA.ADIV,AA.AMDNO,AA.ADECD,BB.BSERNO ) TMP
GROUP BY TMP.COMLTD,TMP.AREV,TMP.ACODE,TMP.AYEAR,TMP.APLANT,TMP.ADIV,
TMP.APDCD,TMP.AMDNO,TMP.SEQGB,TMP.ADECD
ORDER BY TMP.COMLTD,TMP.AREV,TMP.ACODE,TMP.AYEAR,TMP.APLANT,TMP.ADIV,
TMP.APDCD,TMP.AMDNO,TMP.SEQGB,TMP.ADECD
using sqlca;

if sqlca.sqlcode <> 0 then
	ag_message = "제품별재료비(가공관리비) 생성시에 오류가 발생하였습니다. 오류내역: " + sqlca.sqlerrtext
	return -1
end if

//미등록 매출품번 강제생성
INSERT INTO PBBPM.BPM515
SELECT DISTINCT A.COMLTD,A.AYEAR,A.AREV,A.ACODE,A.APLANT,A.ADIV,A.APDCD,A.AMDNO,A.SEQGB,'D',   
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'',0 
FROM PBBPM.BPM501 A
WHERE A.COMLTD = :ag_cmcd AND A.AYEAR = :ag_year AND 
		A.AREV = :ag_revno AND A.ACODE = :ag_divcode and A.ATQTY <> 0 AND
	NOT EXISTS ( SELECT * FROM PBBPM.BPM515 B
	WHERE  A.COMLTD = B.COMLTD AND A.AYEAR = B.MYEAR AND A.AREV = B.MBREV AND 
	A.ACODE = B.MGUBUN AND A.APLANT = B.MPLANT AND A.ADIV = B.MDIV AND
	A.AMDNO = B.MMDNO AND A.SEQGB = B.MSEQGB AND A.ADECD = B.MUSGE) 
UNION
SELECT DISTINCT A.COMLTD,A.AYEAR,A.AREV,A.ACODE,A.APLANT,A.ADIV,A.APDCD,A.AMDNO,A.SEQGB,'E',   
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'',0 
FROM PBBPM.BPM501 A
WHERE A.COMLTD = :ag_cmcd AND A.AYEAR = :ag_year AND 
		A.AREV = :ag_revno AND A.ACODE = :ag_divcode and A.ATQTY <> 0 AND
	NOT EXISTS ( SELECT * FROM PBBPM.BPM515 B
	WHERE  A.COMLTD = B.COMLTD AND A.AYEAR = B.MYEAR AND A.AREV = B.MBREV AND 
	A.ACODE = B.MGUBUN AND A.APLANT = B.MPLANT AND A.ADIV = B.MDIV AND
	A.AMDNO = B.MMDNO AND A.SEQGB = B.MSEQGB AND A.ADECD = B.MUSGE)
using sqlca;

if sqlca.sqlcode <> 0 then
	ag_message = "미등록매출품번(가공관리비) 생성시에 오류가 발생하였습니다. 오류내역: " + sqlca.sqlerrtext
	return -1
end if

UPDATE PBBPM.BPM515
SET mtwon = mdwon,mtusd = mdusd + miusd,mtjpy = mdjpy + mijpy,
mtdem = mddem + midem,mtfrf = mdfrf + mifrf,mtgbp = mdgbp + migbp,
mtaud = mdaud + miaud,mtesp = mdesp + miesp,mtemu = mdemu + miemu,
mtitl = mditl + miitl,mtchf = mdchf + michf,mtbfr = mdbfr + mibfr,
mtdkk = mddkk + midkk,mtats = mdats + miats,mtcad = mdcad + micad,
mtsek = mdsek + misek,mtrmb = mdrmb + mirmb,mtthb = mdthb + mithb,
mtetc = mdetc + mietc
WHERE COMLTD = :ag_cmcd AND MYEAR = :ag_year AND
	MBREV = :ag_revno AND MGUBUN = :ag_divcode
using sqlca;

if sqlca.sqlnrows < 1 then
	ag_message =  "제품별재료비(가공관리비) 합계생성시에 오류가 발생하였습니다. 오류내역: " + sqlca.sqlerrtext
	return -1
else
	return 0
end if
end function

