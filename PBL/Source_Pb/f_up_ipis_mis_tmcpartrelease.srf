$PBExportHeader$f_up_ipis_mis_tmcpartrelease.srf
$PBExportComments$공무자재 불출
global type f_up_ipis_mis_tmcpartrelease from function_object
end type

forward prototypes
global function integer f_up_ipis_mis_tmcpartrelease (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[])
end prototypes

global function integer f_up_ipis_mis_tmcpartrelease (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[]);string ls_chgcd, ls_xplant, ls_div, ls_itno, ls_dept, ls_kbno, ls_tdte4, ls_tdte3, ls_tfill, ls_id, ls_invstcd
string ls_itnm, ls_spec, ls_xtype, ls_rvno
String ls_cls, ls_srce, ls_pdcd, ls_xplan, ls_mlan, ls_xunit, ls_orderno
String ls_ckey, ls_costdiv, ls_srno, ls_srno1, ls_srno2, ls_slno, ls_flag, ls_pjtno, ls_xuse, ls_mcno
String ls_vsrno, ls_vndr, ls_vndnm
dec{0} ld_saud, ld_ohamt, ld_amt
dec{1} ld_qty, ld_oriqty, ld_comqty, ld_ohuqty, ld_ohrqty, ld_ohsqty, ld_uqty, ld_rqty, ld_sqty, ld_exqty
dec{2} ld_costav, ld_costls
integer	li_cnt, li_index, li_Retcnt
Boolean lb_trachk = False

str_ipis_server lstr_ipis

//***AS400 접속여부 체크, 저녁8-아침8 인터페이스 저장
li_index = f_ipis_server_get_transaction(ag_str_ipis, 'X', 'Z')

If li_index = -1 then
//	li_index = f_ipis_server_get_transaction(ag_str_ipis, 'X', 'X')
//	If li_index = -1 then
		ag_message = "A/S400, INT 서버 연결에 실패하였습니다."
		return -1
//	Else
//		lb_trachk = False
//	End if
//Else
//	lb_trachk = True 
End if

lstr_ipis = ag_str_ipis[li_index]

//*** 업무로직 적용
for li_cnt = 1 to ag_dwo.rowcount()
	ls_chgcd  = trim(ag_dwo.getitemstring(li_cnt,"DataStatus"))
	ls_xplant = trim(ag_dwo.getitemstring(li_cnt,"AreaCode"))
	ls_div    = trim(ag_dwo.getitemstring(li_cnt,"DivisionCode"))
	ls_tdte4  = trim(ag_dwo.getitemstring(li_cnt,"ReleaseDate"))
	ls_tfill  = trim(ag_dwo.getitemstring(li_cnt,"SerialNo"))
	ls_itno   = trim(ag_dwo.getitemstring(li_cnt,"ItemCode"))
	ls_slno   = trim(ag_dwo.getitemstring(li_cnt,"SlipNo"))
	ls_orderno = trim(ag_dwo.getitemstring(li_cnt,"OrderNo"))
	ls_dept   = trim(ag_dwo.getitemstring(li_cnt,"DeptCode"))
	ls_xuse   = trim(ag_dwo.getitemstring(li_cnt,"Usage"))
	ls_mcno   = trim(ag_dwo.getitemstring(li_cnt,"McNo"))
	ls_invstcd = trim(ag_dwo.getitemstring(li_cnt,"StockStatus"))	
	ld_qty    = ag_dwo.getitemnumber(li_cnt,"ReleaseQty")
	ls_id     = trim(ag_dwo.getitemstring(li_cnt,"LastEmp"))
	
//	If lb_trachk = false then 
//		//*** Interface server insert
//		INSERT INTO TMCPARTRELEASE
//			( AreaCode, DivisionCode, ReleaseDate, SerialNo, ItemCode, SlipNo,
//			  OrderNo,  DeptCode, Usage, McNo, StockStatus, ReleaseQty, DataStatus,
//			  UploadFlag, LastEmp, LastDate )
//		Values ( :ls_xplant, :ls_div, :ls_tdte4, :ls_tfill, :ls_itno, :ls_slno,
//			      :ls_orderno, :ls_dept, :ls_xuse, :ls_mcno, :ls_invstcd, :ld_qty, :ls_chgcd
//			      'N',  :ls_id, getdate() )
//		using lstr_ipis.t_sqlpis;
//		
//		if lstr_ipis.t_sqlpis.sqlnrows < 1 then
//			ag_message = "Interface Server Insert Error"
//			f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tmcpartrelease',&
//			lstr_ipis.t_sqlpis.sqlerrtext,'Interface Server Insert Error', g_s_empno, g_s_ipaddr, g_s_macaddr)
//			return -1
//		end if		
//		Continue
//	End if


	//*** item Master Check                                                                                                                                              
   SELECT ITNM, SPEC, XTYPE, RVNO                                                
     INTO :ls_itnm, :ls_spec, :ls_xtype, :ls_rvno                                     
   FROM PBINV.INV002                                                             
   WHERE COMLTD = '01' AND ITNO   = :ls_itno Using lstr_ipis.t_sqlpis;
                                                                                
   If lstr_ipis.t_sqlpis.sqlcode <> 0 then                                                          
      ag_message = "품목기본정보 미존재"
		return -1                                                           
   End if
	
	//*** item Balance Check
	SELECT CLS, SRCE, PDCD, COSTDIV, XPLAN, MLAN, XUNIT, SAUD, OHUQTY, OHRQTY, OHSQTY, EXQTY, OHAMT, COSTAV, COSTLS                                          
     INTO :ls_cls, :ls_srce, :ls_pdcd, :ls_costdiv, :ls_xplan, :ls_mlan, :ls_xunit, :ld_saud, 
	       :ld_ohuqty, :ld_ohrqty, :ld_ohsqty, :ld_exqty, :ld_ohamt, :ld_costav, :ld_costls                       
   FROM PBINV.INV101                                                             
   WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;
   
	If lstr_ipis.t_sqlpis.sqlcode <> 0 then                                                          
      ag_message = "품목상세정보 미존재"
		return -1                                                           
   End if	
	
	//*** cls, srce Check
	If ls_cls <> '23' then                 
      ag_message = "계정 구입선 오류"
		return -1                                                                
   End if
	
	//*** 결산년월 Check
	If f_Get_Ctlchk( ls_tdte4, "" ) = -1 Then
		ag_message = "마감이후 작업 불가"
		return -1	
	End If
	
	//*** 재고상태 Check
	If Not(ls_invstcd = 'U' OR ls_invstcd = 'R' or ls_invstcd = 'S' OR ls_invstcd = 'X') then
		ag_message = "재고상태 Error"
		return -1
	End if
	
	//*** 라인 OR 반출 업체 check
	
	If ls_xuse = '04' or ls_xuse ='07' then
		if f_spacechk(ls_dept) = -1 Or Mid(ls_dept,1,1) <> 'D' then
			ag_message = "반출시 업체코드가 넘겨줘야 함."
			return -1
		End if
	End if
			
	
	choose case ls_chgcd
		case 'C'
			//*** Insert 시 error Check
			 If ld_costav = 0 Then                                                           
				 if Not(ls_invstcd = 'X' Or ls_srce ='03' Or ls_srce ='04') then                
				    ag_message = "이동평균단가 필수 입력사항"
					 return -1                                                             
				 End if                                                                    
			 End if				  
				  
			 Choose Case ls_invstcd
				 Case 'U'
					ld_ohuqty = ld_ohuqty - ld_qty
				 Case 'R'
					ld_ohrqty = ld_ohrqty - ld_qty
				 Case 'S'
					ld_ohsqty = ld_ohsqty - ld_qty
				 Case 'X'
					ld_exqty  = ld_exqty - ld_qty
			  End Choose
			  
			  if ld_ohuqty < 0 or ld_ohrqty < 0 or ld_ohsqty < 0 or ld_exqty < 0 then
					ag_message = "현재고보다 불출수량이 많을 수 없습니다!"
					return -1
			  End if
			  
			  
			  If ld_ohuqty + ld_ohrqty + ld_ohsqty = 0 then
				  ld_amt    = ld_ohamt
			  Else
				  ld_amt    = Truncate(ld_costav * ld_qty,0)
			  End if
			  
			  if ls_invstcd = 'X' then
				  ld_costav = 0
				  ld_amt    = 0
				  
				  UPDATE PBINV.INV101                                                       
					SET EXQTY = :ld_exqty,					                                                                                             
						 ILUDT  = :g_s_date,                                                     
						 UPDTID = :ls_id,                                                       
						 UPDTDT = :g_s_date                                                      
					WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;
			  else
				  UPDATE PBINV.INV101                                                       
					SET OUTQTY = OUTQTY + :ld_qty,                                             
						 OUTAMT = OUTAMT + :ld_amt,                                             
						 OHUQTY = :ld_ohuqty,
						 OHRQTY = :ld_ohrqty,
						 OHSQTY = :ld_ohsqty,					 
						 OHAMT  = OHAMT  - :ld_amt,                                                                                              
						 ILUDT  = :g_s_date,                                                     
						 UPDTID = :ls_id,                                                       
						 UPDTDT = :g_s_date                                                      
					WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;					
				End if
				
				if lstr_ipis.t_sqlpis.sqlnrows < 1 then
					ag_message = "Balance DB 업데이트 error invoke"
					f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tmcpartrelease',&
					lstr_ipis.t_sqlpis.sqlerrtext,'Balance DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
					return -1
				end if
				
				ls_ckey    = 'IS'+ ls_xplant + ls_div + ls_cls + Mid(ls_tdte4, 4, 3)
				
				//*** 제품입고 전산번호 체계 확인 
				ls_srno    = f_get_ctlno(ls_ckey) 
				ls_srno1   = ls_xplant + ls_div
				
				If ls_xuse = '04' or ls_xuse ='07' then
					ls_vsrno = ls_dept
					ls_vndr  = f_vndr_pur(ls_vsrno,'S','D')
					ls_vndnm = f_vdnm_pur(ls_vsrno,'S','D')
					ls_dept  = ''
				else
					ls_vsrno = ''
					ls_vndr  = ''
					ls_vndnm = ''
					ls_dept  = ls_dept					
				End if
				
				INSERT INTO PBINV.INV401 (                                                      
						  COMLTD, SLIPTYPE, SRNO, SRNO1, SRNO2, XPLANT, DIV,                            
						  COSTDIV,    SLNO, ITNO,  RVNO,  ITNM,  SPEC,  XTYPE,                          
						  XUNIT,       CLS, SRCE,  PDCD, XPLAN,  MLAN,  RQNO,                           
						  NQC,        KBCD, DUDT, PURNO, VSRNO,  VNDR,  VNDNM,                          
						  XPAY,      OTXCD, LCNO,  LCDT,  DEPT, RTNGUB,  XUSE,                          
						  RSVSRNO,    ORNO, MCHNO, EXFR,  EXTO,  RQDIV,  BLNO,                          
						  EXCH,       CURR, FOBAMT,TDTE1,TDTE2,  TDTE3, TDTE4,                          
						  TDTE5,     TDTE6,  TQTY1,TQTY2,TQTY3,   TQTY4, XCOST,                          
						  TRAMT,     TSHSL,  RTCOM,RTQTY,SSSRNO,  SSCOM,RFCD,                           
						  CHKCD,     TSAMT,  TFILL,TCTTL,  DSAG,  MAKER,PJTNO,                          
						  INVSTCD,  INVEST,   EXTD,INPTID,  INPTDT,UPDTID, UPDTDT,                      
						  IPADDR,   MACADDR )                                                           
				VALUES                                                                       
						  ('01','IS',  :ls_srno, :ls_srno1, :ls_cls,  :ls_xplant, :ls_div,                     
						  :ls_costdiv, :ls_slno, :ls_itno,  :ls_rvno, :ls_itnm,   :ls_spec, :ls_xtype,            
						  :ls_xunit,   :ls_cls,  :ls_srce, ' ',       :ls_xplan,  :ls_mlan,   ' ',             
						  ' ',         ' ',      ' ',      ' ',       :ls_vsrno,  :ls_vndr, :ls_vndnm,              
						  ' ',         ' ',      ' ',      ' ',   :ls_dept,            ' ',  :ls_xuse,             
						  ' ', :ls_orderno, :ls_mcno,      ' ',        ' ',            ' ',   ' ',              
							 0,         ' ',        0,      ' ',        ' ',            ' ', :ls_tdte4,              
						  ' ',         ' ',        0,        0,          0,        :ld_qty, :ld_costav,               
						 :ld_amt,      ' ',      ' ',        0,        ' ',            ' ',      ' ',              
						  ' ',           0, :ls_tfill,       0,        ' ',            ' ',      ' ',               
						 :ls_invstcd,  ' ',      ' ',   :ls_id,  :g_s_date, :ls_id, :g_s_datetime,                 
						  ' ',        ' ' ) Using lstr_ipis.t_sqlpis;	
						  
			  if lstr_ipis.t_sqlpis.sqlcode <> 0 then
				  ag_message = "Trans 데이터 생성에 실패하였습니다."
				  f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tmcpartrelease',&
				  lstr_ipis.t_sqlpis.sqlerrtext,'Trans 데이터 생성에 실패', g_s_empno, g_s_ipaddr, g_s_macaddr)
				  return -1
			  end if
			  
			  
			  
		case 'U'
			//*** 공무자재 불출정보 수정 *** //
			SELECT SRNO, SRNO1, SRNO2, TQTY4
			 INTO :ls_srno, :ls_srno1, :ls_srno2, :ld_oriqty
		   FROM PBINV.INV401
		   WHERE COMLTD ='01'       AND SLIPTYPE = 'IS'        AND XPLANT = :ls_xplant AND DIV= :ls_div  AND 
			      ITNO   = :ls_itno  AND ORNO     = :ls_orderno AND TFILL = :ls_tfill   AND
				   TDTE4  = :ls_tdte4 AND SLNO     = :ls_slno    Using lstr_ipis.t_sqlpis; 
		  
		   If lstr_ipis.t_sqlpis.sqlcode <> 0 Then
			   ag_message = "불출정보 수정데이타 조회 오류"
			   return -1
		   End if
			
			//*** Insert 시 error Check
			 If ld_costav = 0 Then                                                           
				 if Not(ls_invstcd = 'X' Or ls_srce ='03' Or ls_srce ='04') then               
				    ag_message = "이동평균단가 필수 입력사항"
					 return -1                                                             
				  End if                                                                    
			 End if	
			 
			 //*** 차이수량
			 ld_comqty = ld_qty - ld_oriqty
				  
			 Choose Case ls_invstcd
				 Case 'U'
					ld_ohuqty = ld_ohuqty - ld_comqty
				 Case 'R'
					ld_ohrqty = ld_ohrqty - ld_comqty
				 Case 'S'
					ld_ohsqty = ld_ohsqty - ld_comqty
				 Case 'X'
					ld_exqty  = ld_exqty  - ld_comqty
			  End Choose
			  
			  If ld_ohuqty + ld_ohrqty + ld_ohsqty = 0 then
				  ld_amt    = ld_ohamt
			  Else
				  ld_amt    = Truncate(ld_costav * ld_comqty,0)
			  End if
			  
			  if ls_invstcd = 'X' then
				  ld_costav = 0
				  ld_amt    = 0
				  
				  UPDATE PBINV.INV101                                                       
					SET EXQTY = :ld_exqty,					                                                                                             
						 ILUDT  = :g_s_date,                                                     
						 UPDTID = :ls_id,                                                       
						 UPDTDT = :g_s_date                                                      
					WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;
			  else
				  UPDATE PBINV.INV101                                                       
					SET OUTQTY = OUTQTY + :ld_comqty,                                             
						 OUTAMT = OUTAMT + :ld_amt,                                             
						 OHUQTY = :ld_ohuqty,
						 OHRQTY = :ld_ohrqty,
						 OHSQTY = :ld_ohsqty,					 
						 OHAMT  = OHAMT  - :ld_amt,                                                                                              
						 ILUDT  = :g_s_date,                                                     
						 UPDTID = :ls_id,                                                       
						 UPDTDT = :g_s_date                                                      
					WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;					
				End if
				
				if lstr_ipis.t_sqlpis.sqlnrows < 1 then
					ag_message = "Balance DB 업데이트 error invoke"
					f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tmcpartrelease',&
					lstr_ipis.t_sqlpis.sqlerrtext,'Balance DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
					return -1
				end if
				
				UPDATE PBINV.INV401                                                       
					SET TQTY4 = :ld_qty,
					    TRAMT = TRAMT + :ld_amt,
						 UPDTID = :ls_id,                                                       
						 UPDTDT = :g_s_date                                                      
					WHERE COMLTD = '01'      AND SLIPTYPE = 'IS' AND SRNO = :ls_srno AND 
					      SRNO1  = :ls_srno1 AND SRNO2    = :ls_srno2  Using lstr_ipis.t_sqlpis;					
				
				if lstr_ipis.t_sqlpis.sqlnrows < 1 then
					ag_message = "Trance DB 업데이트 error invoke"
					f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tmcpartrelease',&
					lstr_ipis.t_sqlpis.sqlerrtext,'Trance DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
					return -1
				end if			
	
		case 'D'
			//*** 공무자재불출정보 삭제 ***
			SELECT SRNO, SRNO1, SRNO2, TQTY4, TRAMT
			 INTO :ls_srno, :ls_srno1, :ls_srno2, :ld_qty, :ld_amt
		   FROM PBINV.INV401
		   WHERE COMLTD ='01'       AND SLIPTYPE = 'IS'        AND XPLANT = :ls_xplant AND DIV= :ls_div  AND 
			      ITNO   = :ls_itno  AND ORNO     = :ls_orderno AND TFILL = :ls_tfill   AND
				   TDTE4  = :ls_tdte4 AND SLNO     = :ls_slno    Using lstr_ipis.t_sqlpis; 
		  
		   If lstr_ipis.t_sqlpis.sqlcode <> 0 Then
			   ag_message = "불출정보 수정데이타 조회 오류"
			   return -1
		   End if
	  
			 Choose Case ls_invstcd
				 Case 'U'
					ld_ohuqty = ld_ohuqty + ld_qty
				 Case 'R'
					ld_ohrqty = ld_ohrqty + ld_qty
				 Case 'S'
					ld_ohsqty = ld_ohsqty + ld_qty
				 Case 'X'
					ld_exqty  = ld_exqty  + ld_qty
			  End Choose
			  
			  if ls_invstcd = 'X' then
				  ld_costav = 0
				  ld_amt    = 0
				  
				  UPDATE PBINV.INV101                                                       
					SET EXQTY = :ld_exqty,					                                                                                             
						 ILUDT  = :g_s_date,                                                     
						 UPDTID = :ls_id,                                                       
						 UPDTDT = :g_s_date                                                      
					WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;
			  else
				  UPDATE PBINV.INV101                                                       
					SET OUTQTY = OUTQTY - :ld_comqty,                                             
						 OUTAMT = OUTAMT - :ld_amt,                                             
						 OHUQTY = :ld_ohuqty,
						 OHRQTY = :ld_ohrqty,
						 OHSQTY = :ld_ohsqty,					 
						 OHAMT  = OHAMT  + :ld_amt,                                                                                              
						 ILUDT  = :g_s_date,                                                     
						 UPDTID = :ls_id,                                                       
						 UPDTDT = :g_s_date                                                      
					WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;					
				End if
				
				if lstr_ipis.t_sqlpis.sqlnrows < 1 then
					ag_message = "Balance DB 업데이트 error invoke"
					f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tmcpartrelease',&
					lstr_ipis.t_sqlpis.sqlerrtext,'Balance DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
					return -1
				end if
					
				DELETE FROM PBINV.INV401
				WHERE	COMLTD	= '01'      AND SLIPTYPE ='IS'     AND SRNO = :ls_srno AND	
						SRNO1		= :ls_srno1 AND SRNO2 = :ls_srno2
				using lstr_ipis.t_sqlpis; 
				
				if lstr_ipis.t_sqlpis.sqlcode <> 0 then
					ag_message = "공무불출정보 삭제에 실패하였습니다."
					f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tmcpartrelease',&
						lstr_ipis.t_sqlpis.sqlerrtext,'공무불출정보 정보 삭제 에러', g_s_empno, g_s_ipaddr, g_s_macaddr)
					return -1
				end if			
				
		case else
			
			  ag_message = "데이타구분 CUD에 해당하지 않습니다."
			  return -1
	end choose
next

return 0
end function

