$PBExportHeader$f_wip_option_post_summary.srf
$PBExportComments$Option Summary Main Function (이월후)
global type f_wip_option_post_summary from function_object
end type

forward prototypes
global function boolean f_wip_option_post_summary (string a_cmcd, string a_plant, string a_dvsn, string a_adjdate, datawindow arg_dw)
end prototypes

global function boolean f_wip_option_post_summary (string a_cmcd, string a_plant, string a_dvsn, string a_adjdate, datawindow arg_dw);//***************************************************************************************
// 호환주,부품번 사용량 SUMMARY 작업 => 한품번으로 일괄 취합
// 1. 기준품번(호환주품번) => 불출수량과 이동평균단가가 0이 아닌 품번
// 2. 기준품번에 투입수량이 없고 호환품번중에서 투입수량이 있을경우 품번이 빠른경우 적용
// 예외사항 : A,B품목 둘다 사용실적이 없을경우 조정 불가능
//***************************************************************************************
integer li_sqlcode,li_currow,li_findrow, li_findrow2
long ll_cntx,ll_cnty,ll_rowcnt,ll_rowcnt2
string ls_adjdate,ls_itno,ls_orct,ls_prno,ls_prdpt,ls_usge, ls_mitno, ls_sitno,ls_yymmdd,ls_iocd
dec{4} lc_usqtsum1, lc_usqtsum2, lc_outqty, lc_costav, lc_temp_qty, lc_ohqt, lc_ohqt1, lc_ohqt2
dec{4} lc_usqt1,lc_usqt2,lc_usqt3,lc_convqty
datastore ds_option_main, ds_option_sub, ds_option_arrange, ds_option_wip004

SetPointer(HourGlass!)

//재공 TRANS에 존재하는 호환주품번을 조회한 데이터스토어
ds_option_main = create datastore
ds_option_main.dataobject = "d_wip_option_post_main"
ds_option_main.settransobject(sqlca)

//호환주품번에 대한 호환부품번을 조회한 데이터스토어
ds_option_sub = create datastore
ds_option_sub.dataobject = "d_wip_option_post_sub"
ds_option_sub.settransobject(sqlca)

//우선순위로 재정열된 데이터스토어
ds_option_arrange = create datastore
ds_option_arrange.dataobject = "d_wip_option_post_arrange"
ds_option_arrange.settransobject(sqlca)

//재공 TRANS에 재공사용전표를 추가하기위한 데이터스토어
//ds_option_wip004 = create datastore
//ds_option_wip004.dataobject = "d_wip_option_wip004"
//ds_option_wip004.settransobject(sqlca)

ds_option_main.reset()
ds_option_sub.reset()
ds_option_arrange.reset()
//ds_option_wip004.reset()

ls_adjdate = left(a_adjdate,6)
ls_yymmdd = f_relativedate(uf_wip_addmonth(ls_adjdate, 1) + '01',-1)
ll_rowcnt = ds_option_main.retrieve(a_cmcd,a_plant,a_dvsn,ls_adjdate,ls_yymmdd)

for ll_cntx = 1 to ll_rowcnt
	// 기준품번이 사용수량이 있으면 사용수량품번 No Check, 없으면 사용수량품번 Check
	ls_itno = trim(ds_option_main.getitemstring(ll_cntx,"bom003_opitn"))  
	ls_orct = trim(ds_option_main.getitemstring(ll_cntx,"wip002_wborct"))
	ls_iocd = trim(ds_option_main.getitemstring(ll_cntx,"wip002_wbiocd"))
	lc_convqty = ds_option_main.getitemnumber(ll_cntx,"inv101_convqty")
	
	SELECT "PBWIP"."WIP002"."WBUSQT1" + "PBWIP"."WIP002"."WBUSQT2" + "PBWIP"."WIP002"."WBUSQT3" as com_usqt,
   		 "PBWIP"."WIP002"."WBUSQT1",
			 "PBWIP"."WIP002"."WBUSQT2",
			 "PBWIP"."WIP002"."WBUSQT3",
			 ("PBWIP"."WIP002"."WBBGQT" + "PBWIP"."WIP002"."WBINQT" - ("PBWIP"."WIP002"."WBUSQT1" + "PBWIP"."WIP002"."WBUSQT2" 
				+ "PBWIP"."WIP002"."WBUSQT3" + "PBWIP"."WIP002"."WBUSQT4" + "PBWIP"."WIP002"."WBUSQT5" + "PBWIP"."WIP002"."WBUSQT6" 
				+ "PBWIP"."WIP002"."WBUSQT7" + "PBWIP"."WIP002"."WBUSQT8" + "PBWIP"."WIP002"."WBUSQTA" )),
          "PBINV"."INV101"."OUTQTY",
			 pbcommon.f_if("PBINV"."INV101"."CLS",'10',"PBINV"."INV101"."COSTAV","PBINV"."INV101"."COSTLS") com_cost  
    INTO :lc_usqtsum1,
	 		:lc_usqt1,
			:lc_usqt2,
			:lc_usqt3,
			:lc_ohqt1,
         :lc_outqty,   
         :lc_costav  
    FROM "PBWIP"."WIP002",   
         "PBINV"."INV101"  
   WHERE ( "PBWIP"."WIP002"."WBCMCD" = "PBINV"."INV101"."COMLTD" ) and  
         ( "PBWIP"."WIP002"."WBPLANT" = "PBINV"."INV101"."XPLANT" ) and  
         ( "PBWIP"."WIP002"."WBDVSN" = "PBINV"."INV101"."DIV" ) and  
         ( "PBWIP"."WIP002"."WBITNO" = "PBINV"."INV101"."ITNO" ) and  
         ( ( "PBWIP"."WIP002"."WBCMCD" = :a_cmcd ) AND  
         ( "PBWIP"."WIP002"."WBPLANT" = :a_plant ) AND  
         ( "PBWIP"."WIP002"."WBDVSN" = :a_dvsn ) AND  
         ( "PBWIP"."WIP002"."WBORCT" = :ls_orct ) AND  
         ( "PBWIP"."WIP002"."WBITNO" = :ls_itno ) AND
			( "PBWIP"."WIP002"."WBIOCD" = :ls_iocd ) AND
			( "PBWIP"."WIP002"."WBYEAR"||"PBWIP"."WIP002"."WBMONTH" = :ls_adjdate ))   using sqlca;

	if sqlca.sqlcode <> 0 then
		lc_usqtsum1 = 0
		lc_ohqt1 = 0
		lc_usqt1 = 0
		lc_usqt2 = 0
		lc_usqt3 = 0
		lc_outqty = 0
		lc_costav = 0
	end if
	ds_option_main.setitem(ll_cntx,"com_ohqt",lc_ohqt1)
	ds_option_main.setitem(ll_cntx,"com_usqt1",lc_usqt1)
	ds_option_main.setitem(ll_cntx,"com_usqt2",lc_usqt2)
	ds_option_main.setitem(ll_cntx,"com_usqt3",lc_usqt3)
	ds_option_main.setitem(ll_cntx,"com_usqtsum",lc_usqtsum1)
	
	ds_option_sub.reset()
	ds_option_arrange.reset()
	//ds_option_wip004.reset()
	
	ll_rowcnt2 = ds_option_sub.retrieve(a_cmcd,a_plant,a_dvsn,ls_itno,ls_adjdate,ls_orct,lc_convqty,ls_yymmdd,ls_iocd)
	if ll_rowcnt2 < 1 then
		continue
	end if
	lc_usqtsum2 = ds_option_sub.getitemdecimal(1,"comp_sum")											//호환품번의 총사용합계

	//기준품번및 사용수량이 있는 품번을 찾는 루틴
	if lc_outqty <> 0 and lc_costav <> 0 then
		f_wip_option_post_rowcopy(ds_option_main,ds_option_arrange,ll_cntx,'main')
		if lc_usqtsum1 <> 0 then
			for ll_cnty = 1 to ll_rowcnt2 
				if ds_option_sub.getitemdecimal(ll_cnty,"ohqt") <> 0 then
					f_wip_option_post_rowcopy(ds_option_sub,ds_option_arrange,ll_cnty,'sub')
				end if
			next
		else                                    													
			li_findrow2 = ds_option_sub.find("com_usqtsum <> 0",1,ll_rowcnt2)
			if li_findrow2 > 0 then
				f_wip_option_post_rowcopy(ds_option_sub,ds_option_arrange, li_findrow2,'sub')
				for ll_cnty = 1 to ll_rowcnt2
					if ll_cnty <> li_findrow2 then
						if ds_option_sub.getitemdecimal(ll_cnty,"ohqt") <> 0 then
							f_wip_option_post_rowcopy(ds_option_sub,ds_option_arrange,ll_cnty,'sub')
						end if
					end if
				next
			else
				//현재공량이 모두 0이므로 호환조정 불필요
				continue
			end if
		end if
	else                                       													
		li_findrow = ds_option_sub.find("inv101_outqty <> 0 and com_cost <> 0",1,ll_rowcnt2)     //호환부품번
		if li_findrow > 0 then
			ls_prno = ds_option_sub.getitemstring(li_findrow,"wip002_wbitno")
			f_wip_option_post_rowcopy(ds_option_sub,ds_option_arrange,li_findrow,'sub')
			if lc_usqtsum1 <> 0 then
				f_wip_option_post_rowcopy(ds_option_main,ds_option_arrange,ll_cntx,'main')
				for ll_cnty = 1 to ll_rowcnt2
					if ll_cnty <> li_findrow then
						if ds_option_sub.getitemdecimal(ll_cnty,"ohqt") <> 0 then
							f_wip_option_post_rowcopy(ds_option_sub,ds_option_arrange,ll_cnty,'sub')
						end if
					end if
				next
			else
				//호환부품번에서 사용내역이 존제하는 품번찾기 ( 기준품번 제외 )
				li_findrow2 = ds_option_sub.find("wip002_wbitno <> '" + ls_prno + "' and com_usqtsum <> 0",1,ll_rowcnt2)
				if li_findrow2 > 0 then
					f_wip_option_post_rowcopy(ds_option_sub,ds_option_arrange,li_findrow2,'sub')
					if lc_ohqt1 <> 0 then
						f_wip_option_post_rowcopy(ds_option_main,ds_option_arrange,ll_cntx,'main')
					end if
					for ll_cnty = 1 to ll_rowcnt2
						if ll_cnty <> li_findrow and ll_cnty <> li_findrow2 then
							if ds_option_sub.getitemdecimal(ll_cnty,"ohqt") <> 0 then
								f_wip_option_post_rowcopy(ds_option_sub,ds_option_arrange,ll_cnty,'sub')
							end if
						end if
					next
				else
					continue
				end if
			end if
		else
			f_wip_option_post_rowcopy(ds_option_main,ds_option_arrange,ll_cntx,'main')
			if lc_usqtsum1 <> 0 then
				for ll_cnty = 1 to ll_rowcnt2 
					if ds_option_sub.getitemdecimal(ll_cnty,"ohqt") <> 0 then
						f_wip_option_post_rowcopy(ds_option_sub,ds_option_arrange,ll_cnty,'sub')
					end if
				next
			else                                    													
				li_findrow2 = ds_option_sub.find("com_usqtsum <> 0",1,ll_rowcnt2)
				if li_findrow2 > 0 then
					f_wip_option_post_rowcopy(ds_option_sub,ds_option_arrange, li_findrow2,'sub')
					for ll_cnty = 1 to ll_rowcnt2
						if ll_cnty <> li_findrow2 then
							if ds_option_sub.getitemdecimal(ll_cnty,"ohqt") <> 0 then
								f_wip_option_post_rowcopy(ds_option_sub,ds_option_arrange,ll_cnty,'sub')
							end if
						end if
					next
				else
					continue
				end if
			end if
		end if
	end if
	
	//현재공수량을 0으로 만들고 그수량만큼 사용에 더해주고 더해준 사용수량을 재공히스토리에 남긴다.
	//기준품번의 현재공에 사용수량을 더해주고 사용내역에서는 그 만큼 빼준다.
	//빼준수량에 대한 재공히스토리를 생성한다.
	
	ll_rowcnt2 = ds_option_arrange.rowcount()
	if ll_rowcnt2 < 2 then
		continue
	end if
	if ds_option_arrange.getitemdecimal(1,"com_usqtsum") <> 0 then   //사용조정을 위한 ls_prno(모품번), ls_pdpt(사용처) 찾기
		ls_itno = trim(ds_option_arrange.getitemstring(1,"wbitno"))
		ls_orct = trim(ds_option_arrange.getitemstring(1,"wborct"))
	else
		ls_itno = trim(ds_option_arrange.getitemstring(2,"wbitno"))
		ls_orct = trim(ds_option_arrange.getitemstring(2,"wborct"))
	end if
	
	SELECT "PBWIP"."WIP004"."WDPRNO", "PBWIP"."WIP004"."WDPRDPT", "PBWIP"."WIP004"."WDUSGE" 
		INTO :ls_prno, :ls_prdpt, :ls_usge
		FROM "PBWIP"."WIP004"  
		WHERE ( "PBWIP"."WIP004"."WDSLTY" = 'WC' ) AND
				( "PBWIP"."WIP004"."WDCMCD" = :a_cmcd ) AND  
				( "PBWIP"."WIP004"."WDPLANT" = :a_plant ) AND  
				( "PBWIP"."WIP004"."WDDVSN" = :a_dvsn ) AND  
				( "PBWIP"."WIP004"."WDITNO" = :ls_itno ) AND
				( "PBWIP"."WIP004"."WDCHDPT" = :ls_orct ) AND
				( "PBWIP"."WIP004"."WDIOCD" IN ('1','2') ) AND
				( {fn substring("PBWIP"."WIP004"."WDDATE",1,6)} = :a_adjdate )
		ORDER BY "PBWIP"."WIP004"."WDUSGE"
		FETCH FIRST 1 ROW ONLY
				using sqlca;
	
	ls_mitno = trim(ds_option_arrange.getitemstring(1,"wbitno"))      //호환조정에서 기준되는 품번
	for ll_cnty = 2 to ll_rowcnt2
		//기준품번(사용이 있는 경우) 또는 사용품번을 가지고 재공히스토리를 읽어 prno,pdpt을 가져온다.
		ls_sitno = trim(ds_option_arrange.getitemstring(ll_cnty,"wbitno"))
		lc_ohqt = ds_option_arrange.getitemdecimal(ll_cnty,"ohqt")
		//ls_orct = trim(ds_option_arrange.getitemstring(ll_cnty,"waorct"))
		if lc_ohqt = 0 then
			continue
		end if
		ds_option_arrange.setitem(ll_cnty,"ohqt",0)
		ds_option_arrange.setitem(1, "ohqt", ds_option_arrange.getitemdecimal(1,"ohqt") + lc_ohqt)
		choose case ls_usge
			case '01'     //정상사용
				lc_temp_qty = ds_option_arrange.getitemdecimal(ll_cnty,"wbusqt1") + lc_ohqt
				ds_option_arrange.setitem(ll_cnty,"wbusqt1",lc_temp_qty)
				li_sqlcode = f_wip_option_post_wip004(arg_dw,ds_option_arrange,ls_prno,ls_prdpt,ls_usge,ls_yymmdd,ll_cnty,lc_ohqt)
				if li_sqlcode <> 0 then
					//ROLLBACK USING SQLCA;
					messagebox("chk","1")
					return false
				end if 
				lc_temp_qty = ds_option_arrange.getitemdecimal(1,"wbusqt1") - lc_ohqt
				ds_option_arrange.setitem(1,"wbusqt1",lc_temp_qty)
				lc_ohqt = - (lc_ohqt)
				li_sqlcode = f_wip_option_post_wip004(arg_dw,ds_option_arrange,ls_prno,ls_prdpt,ls_usge,ls_yymmdd,1,lc_ohqt)
				if li_sqlcode <> 0 then
					//ROLLBACK USING SQLCA;
					messagebox("chk","2")
					return false
				end if	
			case '02'     //반출사용
				lc_temp_qty = ds_option_arrange.getitemdecimal(ll_cnty,"wbusqt2") + lc_ohqt
				ds_option_arrange.setitem(ll_cnty,"wbusqt2",lc_temp_qty)
				li_sqlcode = f_wip_option_post_wip004(arg_dw,ds_option_arrange,ls_prno,ls_prdpt,ls_usge,ls_yymmdd,ll_cnty,lc_ohqt)
				if li_sqlcode <> 0 then
					//ROLLBACK USING SQLCA;
					messagebox("chk","3")
					return false
				end if
				lc_temp_qty = ds_option_arrange.getitemdecimal(1,"wbusqt2") - lc_ohqt
				ds_option_arrange.setitem(1,"wbusqt2",lc_temp_qty)
				lc_ohqt = - (lc_ohqt)
				li_sqlcode = f_wip_option_post_wip004(arg_dw,ds_option_arrange,ls_prno,ls_prdpt,ls_usge,ls_yymmdd,1,lc_ohqt)
				if li_sqlcode <> 0 then
					//ROLLBACK USING SQLCA;
					messagebox("chk","4")
					return false
				end if
			case '03'     //유상반출사용
				lc_temp_qty = ds_option_arrange.getitemdecimal(ll_cnty,"wbusqt3") + lc_ohqt
				ds_option_arrange.setitem(ll_cnty,"wbusqt3",lc_temp_qty)
				li_sqlcode = f_wip_option_post_wip004(arg_dw,ds_option_arrange,ls_prno,ls_prdpt,ls_usge,ls_yymmdd,ll_cnty,lc_ohqt)
				if li_sqlcode <> 0 then
					//ROLLBACK USING SQLCA;
					messagebox("chk","5")
					return false
				end if
				lc_temp_qty = ds_option_arrange.getitemdecimal(1,"wbusqt3") - lc_ohqt
				ds_option_arrange.setitem(1,"wbusqt3",lc_temp_qty)
				lc_ohqt = - (lc_ohqt)
				li_sqlcode = f_wip_option_post_wip004(arg_dw,ds_option_arrange,ls_prno,ls_prdpt,ls_usge,ls_yymmdd,1,lc_ohqt)
				if li_sqlcode <> 0 then
					//ROLLBACK USING SQLCA;
					messagebox("chk","6")
					return false
				end if
		end choose
	next
	//NULL CHECK
	f_wip_null_chk2(ds_option_arrange)
	//기본정보 셋팅
	f_wip_inptid2(ds_option_arrange)
	//Option 수량 Update
	if ds_option_arrange.update() = 1 then
		//pass
	else
		messagebox("chk","17" + string(sqlca.sqldbcode) + sqlca.sqlerrtext)
		destroy ds_option_main
		destroy ds_option_sub
		destroy ds_option_arrange
		return false
	end if	
next
//COMMIT USING SQLCA;
destroy ds_option_main
destroy ds_option_sub
destroy ds_option_arrange
//destroy ds_option_wip004
return true
end function

