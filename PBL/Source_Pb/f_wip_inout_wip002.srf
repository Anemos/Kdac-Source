$PBExportHeader$f_wip_inout_wip002.srf
$PBExportComments$이월후 재공수불체크 Main Function
global type f_wip_inout_wip002 from function_object
end type

forward prototypes
global function boolean f_wip_inout_wip002 (string a_cmcd, string a_plant, string a_dvsn, string a_adjdt, datawindow a_dw)
end prototypes

global function boolean f_wip_inout_wip002 (string a_cmcd, string a_plant, string a_dvsn, string a_adjdt, datawindow a_dw);//***********************************************************************************
//
// 이월후 수불확인
// WIP002 과 WIP004, INV401 을 상호비교하여 재공밸런스(WIP002)와 불일치하는 데이타를 찾는다.
// 인수 : 회사, 지역, 공장, 적용년월, 에러데이타윈도우
// 반환값 : TRUE, FALSE
//
//***********************************************************************************
long ll_rowcnt,ll_rowcnt1,ll_rowcnt2, ll_rowcnt3, ll_cnt,ll_cntx, ll_findrow, ll_currow, ll_cnty
string ls_check, ls_cttp, ls_slty, ls_xuse, ls_rtngub, ls_cls, ls_srce
string ls_itno, ls_orct, ls_orct2, ls_year, ls_month, ls_fromdt, ls_todt, ls_nuse, ls_iocd
string ls_nextdt, ls_nextyear, ls_nextmonth
long ll_totcnt, ll_totsum, ll_totcur
dec{4} lc_qty[1 to 13], lc_chkqty, lc_convqty
dec{5} lc_costav, lc_waavrg
dec{0} lc_amt[1 to 13], lc_chkamt
datastore ds_inout_line, ds_inout_vndr, ds_inout_vndr07, ds_inout_wip002

//***********************************************************************************
// 라인 수불확인 : d_wip_inout_line
// 조회데이타 : 지역, 공장, 품번, 계정, 구입선, 부서, 전표타입, 불출용도, 반납구분, 수량합, 금액합
// INV401 => 계정(10,40,50), 전표타입(IS,RS,SA,SR),VSRNO가 업체가 아닌것
//        => SA,SR이면서 10/03이 아닌것
// UNION
// WIP004 => 재공구분:라인, 전표구분(IE,WR,WC)
// 정열 : 품번 ASC, 전표타입 ASC
//***********************************************************************************
ds_inout_line = create datastore									
ds_inout_line.dataobject = "d_wip_inout_line_002"
ds_inout_line.settransobject(sqlca)
//***********************************************************************************
// 무상업체 수불확인 : d_wip_inout_vndr
// 조회데이타 : 지역, 공장,품번,계정,구입선,부서,전표타입,불출용도,반납구분,수량합,금액합
// INV401 => 계정(10,40,50), 전표타입(IS,RS,SA,SR),VSRNO가 업체인것
//        => SA,SR이면서 10/03이 아닌것
// UNION
// WIP004 => 재공구분:업체, 전표구분(IE,WR,WC,WX)
// 정열 : 품번 ASC, 전표타입 ASC
//***********************************************************************************
ds_inout_vndr = create datastore
ds_inout_vndr.dataobject = "d_wip_inout_vndr_002"
ds_inout_vndr.settransobject(sqlca)
//***********************************************************************************
// 유상업체 수불확인 : d_wip_inout_vndr07
// 조회데이타 : 지역, 공장,품번,계정,구입선,부서,전표타입,불출용도,반납구분,수량합,금액합
// INV401 => 계정(10,40,50), 전표타입(IS,RS,SA,SR),VSRNO가 업체인것
//        => SA,SR이면서 10/03이 아닌것
// UNION
// WIP004 => 재공구분:업체, 전표구분(IE,WR,WC,WX)
// 정열 : 품번 ASC, 전표타입 ASC
//***********************************************************************************
ds_inout_vndr07 = create datastore
ds_inout_vndr07.dataobject = "d_wip_inout_vndr07_002"
ds_inout_vndr07.settransobject(sqlca)

ds_inout_wip002 = create datastore
ds_inout_wip002.dataobject = "d_wip_inout_wip002"											//정열 : 제품군 Asc, 품번 Asc
ds_inout_wip002.settransobject(sqlca)

ls_year = mid(a_adjdt,1,4)
ls_month = mid(a_adjdt,5,2)
ls_fromdt = a_adjdt + '01'
ls_todt = f_relativedate( uf_wip_addmonth(a_adjdt,1) + '01', -1)

ds_inout_line.retrieve(a_cmcd,a_plant,a_dvsn,ls_fromdt, ls_todt,ls_year,ls_month)
ll_rowcnt = ds_inout_line.rowcount()
ds_inout_vndr.retrieve(a_cmcd,a_plant,a_dvsn,ls_fromdt, ls_todt,ls_year,ls_month)
ll_rowcnt2 = ds_inout_vndr.rowcount()
ds_inout_vndr07.retrieve(a_cmcd,a_plant,a_dvsn,ls_fromdt, ls_todt,ls_year,ls_month)
ll_rowcnt3 = ds_inout_vndr07.rowcount()

ds_inout_wip002.retrieve(a_cmcd,a_plant,a_dvsn,ls_year,ls_month,'1')										
ll_rowcnt1 = ds_inout_wip002.rowcount()

ls_orct = '9999'
//기초(1),투입(2),정상(3),반출(4),유상(5),출하(6),타계정(7),타부서(8),불량(9),조정(10),실사(11),현재공(12)
lc_qty[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
//기초(1),투입1(2),투입2(3),정상(4),반출(5),유상(6),출하(7),타계정(8),타부서(9),불량(10),조정(11),실사(12),현재공(13)
lc_amt[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
ll_findrow = 1
ll_totcnt = 0
ll_totsum = ll_rowcnt + ll_rowcnt2

If ll_rowcnt > 0 Then
	ls_check = trim(ds_inout_line.getitemstring(1,"itno"))
	SELECT "PBINV"."INV101"."CONVQTY","PBINV"."INV402"."COSTAV","PBINV"."INV101"."NUSE"
				INTO :lc_convqty, :lc_costav, :ls_nuse
				FROM "PBINV"."INV101", "PBINV"."INV402"
				WHERE ( "PBINV"."INV101"."COMLTD" = "PBINV"."INV402"."COMLTD" ) AND
						( "PBINV"."INV101"."XPLANT" = "PBINV"."INV402"."XPLANT" ) AND
						( "PBINV"."INV101"."DIV" = "PBINV"."INV402"."DIV" ) AND
						( "PBINV"."INV101"."ITNO" = "PBINV"."INV402"."ITNO" ) AND
						( "PBINV"."INV402"."COMLTD" = :a_cmcd ) AND
						( "PBINV"."INV402"."XPLANT" = :a_plant ) AND
						( "PBINV"."INV402"."DIV" = :a_dvsn ) AND
						( "PBINV"."INV402"."ITNO" = :ls_check ) AND
						( "PBINV"."INV402"."XYEAR" = :a_adjdt ) 
						using sqlca;
	If sqlca.sqlcode <> 0 Then
		lc_convqty = 1
		lc_costav = 0
	End If
End If

if a_plant = 'Y' then
	ll_rowcnt = 0
end if
//재공라인품번 수불체크루틴
ls_iocd = '1'
for ll_cnt = 1 to ll_rowcnt	
	ll_totcnt = ll_totcnt + 1
	ls_itno = trim(ds_inout_line.getitemstring(ll_cnt,"itno"))
	
	//최종루틴 처리
	if ll_cnt = ll_rowcnt then
		if ls_check <> ls_itno then
			ll_findrow = ds_inout_wip002.find("wip002_wborct = '9999' and wip002_wbitno = '" + ls_check + "'",1,ll_rowcnt1)
			if ll_findrow > 0 then
				lc_qty[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgqt")
				lc_amt[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgat1")
				lc_waavrg = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbavrg1")
				if lc_waavrg <> 0 then
					for ll_cnty = 3 to 11
						lc_amt[ll_cnty + 1] = lc_qty[ll_cnty] * lc_waavrg
					next
				end if
			end if
			lc_qty[12] = lc_qty[1] + lc_qty[2] - ( lc_qty[3] + lc_qty[4] + lc_qty[5] + lc_qty[6] + lc_qty[7] &
								+ lc_qty[8] + lc_qty[9] + lc_qty[10] + lc_qty[11])					
			lc_amt[13] = lc_amt[1] + lc_amt[2] + lc_amt[3] - ( lc_amt[4] + lc_amt[5] + lc_amt[6] + lc_amt[7] &
								+ lc_amt[8] + lc_amt[9] + lc_amt[10] + lc_amt[11] + lc_amt[12])
			f_wip_inout_seterr002(a_adjdt,a_cmcd,a_plant,a_dvsn,ls_orct,ls_check,ds_inout_wip002,a_dw,ll_findrow &
											,lc_qty,lc_amt,ls_iocd)
											
			lc_qty[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
			lc_amt[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
			
			ls_check = ls_itno
			SELECT "PBINV"."INV101"."CONVQTY","PBINV"."INV402"."COSTAV","PBINV"."INV101"."NUSE"
				INTO :lc_convqty, :lc_costav, :ls_nuse
				FROM "PBINV"."INV101", "PBINV"."INV402"
				WHERE ( "PBINV"."INV101"."COMLTD" = "PBINV"."INV402"."COMLTD" ) AND
						( "PBINV"."INV101"."XPLANT" = "PBINV"."INV402"."XPLANT" ) AND
						( "PBINV"."INV101"."DIV" = "PBINV"."INV402"."DIV" ) AND
						( "PBINV"."INV101"."ITNO" = "PBINV"."INV402"."ITNO" ) AND
						( "PBINV"."INV402"."COMLTD" = :a_cmcd ) AND
						( "PBINV"."INV402"."XPLANT" = :a_plant ) AND
						( "PBINV"."INV402"."DIV" = :a_dvsn ) AND
						( "PBINV"."INV402"."ITNO" = :ls_check ) AND
						( "PBINV"."INV402"."XYEAR" = :a_adjdt ) 
						using sqlca;
			If sqlca.sqlcode <> 0 Then
				lc_convqty = 1
				lc_costav = 0
			End If
		end if

		ls_slty = ds_inout_line.getitemstring(ll_cnt,"sliptype")
		ls_xuse = ds_inout_line.getitemstring(ll_cnt,"xuse")
		ls_rtngub = trim(ds_inout_line.getitemstring(ll_cnt,"rtngub"))
		ls_cls = ds_inout_line.getitemstring(ll_cnt,"cls")
		ls_srce = ds_inout_line.getitemstring(ll_cnt,"srce")
		
		choose case ls_slty
			case 'RP'
				if (a_plant = 'D' and (a_dvsn = 'A' or a_dvsn = 'V')) then
					//전장에서 50/04품번이 입고되면 사급완성품창고로 이동한다.
				else
					//전장을 제외한 공장인경우, 라인에 투입된다.
					if (ls_cls = '50' and ls_srce = '04') then						
						if ( a_plant = 'B' or a_plant = 'K' ) then
							if ls_nuse <> 'Y' then
								//라인으로 바로 투입되는 품번
								lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							end if
						else
							//라인으로 바로 투입되는 품번
							lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						end if
					end if
				end if
			case 'SS'
				if (a_plant = 'D' and (a_dvsn = 'A' or a_dvsn = 'V')) then
					//전장에서 50/04품번이 입고되면 사급완성품창고로 이동한다.
				else
					//전장을 제외한 공장인경우, 라인에 투입된다.
					if (ls_cls = '50' and ls_srce = '04') then						
						if ( a_plant = 'B' or a_plant = 'K' ) then
							if ls_nuse <> 'Y' then
								//라인으로 바로 투입되는 품번
								lc_qty[2] = lc_qty[2] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							end if
						else
							//라인으로 바로 투입되는 품번
							lc_qty[2] = lc_qty[2] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						end if
					end if
				end if
			case 'IS'
				if (ls_xuse = '04' or ls_xuse = '07' or ls_xuse = '06') then
					//라인재공과 무관한 불출용도 임
//					if ls_xuse = '07' then
//						lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//						lc_amt[2] = lc_amt[2] + ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
//						lc_qty[5] = lc_qty[5] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//						lc_amt[6] = lc_qty[6] + ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
//					end if
				else
					//불출용도가 '03','05'인 경우와 금액만 투입된 경우에 투입과 동시에 타계정사용으로 처리
					if ls_cls <> '10' and ls_srce = '04' then
						lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					else
						lc_chkqty = ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
						lc_chkamt = ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
						if (lc_chkqty = 0 and lc_chkamt <> 0) then
							lc_amt[3] = lc_amt[3] + lc_chkamt
						else
							lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							lc_amt[2] = lc_amt[2] + ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
							if (ls_xuse = '03' or ls_xuse = '05') then
								lc_qty[7] = lc_qty[7] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
								lc_amt[8] = lc_qty[7] * (lc_costav / lc_convqty)
							end if
						end if
					end if
				end if
			case 'RS'
				if (ls_xuse = '04' or ls_xuse = '07' or ls_xuse = '06') then
					//라인재공과 무관한 불출용도임
				else
					if ls_rtngub <> '02' then
						//소재불량 반납
						lc_chkqty = ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
						lc_chkamt = ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
						if (lc_chkqty = 0 and lc_chkamt <> 0) then
							lc_amt[3] = lc_amt[3] - lc_chkamt
						else
							lc_qty[2] = lc_qty[2] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							lc_amt[2] = lc_amt[2] - ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
						end if
						
						if (ls_xuse = '03' or ls_xuse = '05') then
							lc_qty[7] = lc_qty[7] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							lc_amt[8] = lc_qty[7] * (lc_costav / lc_convqty)
						end if
					else
						//작업불량에 반납
						if ls_srce <> '03' then
							lc_qty[9] = lc_qty[9] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							lc_amt[10] = lc_qty[9] * (lc_costav / lc_convqty)
						end if
					end if
				end if
			case 'SA'
				if (ls_srce <> '04') or (ls_cls = '10' and ls_srce = '04') then
					lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					lc_amt[2] = lc_amt[2] + ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
					lc_qty[6] = lc_qty[6] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					lc_amt[7] = lc_qty[6] * (lc_costav / lc_convqty)
				end if
			case 'SR'
				if (ls_srce <> '04') or (ls_cls = '10' and ls_srce = '04') then
					lc_qty[2] = lc_qty[2] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					lc_amt[2] = lc_amt[2] - ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
					lc_qty[6] = lc_qty[6] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					lc_amt[7] = lc_qty[6] * ( lc_costav / lc_convqty )
				end if
			case 'WC','WR','IE','WX'
				choose case ls_xuse
					case '01'	//정상사용
						lc_qty[3] = lc_qty[3] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[4] = lc_qty[3] * (lc_costav / lc_convqty)
					case '02'	//반출사용
						lc_qty[4] = lc_qty[4] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[5] = lc_qty[4] * (lc_costav / lc_convqty)
					case '03'	//유상반출사용
						lc_qty[5] = lc_qty[5] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[6] = lc_qty[5] * (lc_costav / lc_convqty)
					case '06'	//타부서불출사용
						lc_qty[8] = lc_qty[8] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[9] = lc_qty[8] * (lc_costav / lc_convqty)
					case '07'	//불량 사용
						lc_qty[9] = lc_qty[9] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[10] = lc_qty[9] * (lc_costav / lc_convqty)
					case '08'   //조정수량
						lc_qty[10] = lc_qty[10] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[11] = lc_qty[10] * (lc_costav / lc_convqty)
					case '09'   //실사차이
						lc_qty[11] = lc_qty[11] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[12] = lc_qty[11] * (lc_costav / lc_convqty)
					case else
						messagebox("재공사용용도", ls_itno + ":" + ls_orct2 + " 에러")
				end choose
		end choose
		
		ll_findrow = ds_inout_wip002.find("wip002_wborct = '9999' and wip002_wbitno = '" + ls_check + "'",1,ll_rowcnt1)
		if ll_findrow > 0 then
			lc_qty[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgqt")
			lc_amt[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgat1")
			lc_waavrg = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbavrg1")
			if lc_waavrg <> 0 then
				for ll_cnty = 3 to 11
					lc_amt[ll_cnty + 1] = lc_qty[ll_cnty] * lc_waavrg
				next
			end if
		end if
		lc_qty[12] = lc_qty[1] + lc_qty[2] - ( lc_qty[3] + lc_qty[4] + lc_qty[5] + lc_qty[6] + lc_qty[7] &
							+ lc_qty[8] + lc_qty[9] + lc_qty[10] + lc_qty[11])	
		lc_amt[13] = lc_amt[1] + lc_amt[2] + lc_amt[3] - ( lc_amt[4] + lc_amt[5] + lc_amt[6] + lc_amt[7] &
							+ lc_amt[8] + lc_amt[9] + lc_amt[10] + lc_amt[11] + lc_amt[12])
		f_wip_inout_seterr002(a_adjdt,a_cmcd,a_plant,a_dvsn,ls_orct,ls_check,ds_inout_wip002,a_dw,ll_findrow &
										,lc_qty,lc_amt,ls_iocd)
		exit
	end if
	
	if ls_check <> ls_itno then			//투입수량,투입금액,사용수량을 비교
		ll_findrow = ds_inout_wip002.find("wip002_wborct = '9999' and wip002_wbitno = '" + ls_check + "'",1,ll_rowcnt1)
		if ll_findrow > 0 then
			lc_qty[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgqt")
			lc_amt[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgat1")
			lc_waavrg = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbavrg1")
			if lc_waavrg <> 0 then
				for ll_cnty = 3 to 11
					lc_amt[ll_cnty + 1] = lc_qty[ll_cnty] * lc_waavrg
				next
			end if
		end if
		lc_qty[12] = lc_qty[1] + lc_qty[2] - ( lc_qty[3] + lc_qty[4] + lc_qty[5] + lc_qty[6] + lc_qty[7] &
							+ lc_qty[8] + lc_qty[9] + lc_qty[10] + lc_qty[11])					
		lc_amt[13] = lc_amt[1] + lc_amt[2] + lc_amt[3] - ( lc_amt[4] + lc_amt[5] + lc_amt[6] + lc_amt[7] &
							+ lc_amt[8] + lc_amt[9] + lc_amt[10] + lc_amt[11] + lc_amt[12])
		f_wip_inout_seterr002(a_adjdt,a_cmcd,a_plant,a_dvsn,ls_orct,ls_check,ds_inout_wip002,a_dw,ll_findrow &
										,lc_qty,lc_amt,ls_iocd)
		lc_qty[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
		lc_amt[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
		ls_check = ls_itno
		
		SELECT "PBINV"."INV101"."CONVQTY","PBINV"."INV402"."COSTAV","PBINV"."INV101"."NUSE"
			INTO :lc_convqty, :lc_costav, :ls_nuse
			FROM "PBINV"."INV101", "PBINV"."INV402"
			WHERE ( "PBINV"."INV101"."COMLTD" = "PBINV"."INV402"."COMLTD" ) AND
					( "PBINV"."INV101"."XPLANT" = "PBINV"."INV402"."XPLANT" ) AND
					( "PBINV"."INV101"."DIV" = "PBINV"."INV402"."DIV" ) AND
					( "PBINV"."INV101"."ITNO" = "PBINV"."INV402"."ITNO" ) AND
					( "PBINV"."INV402"."COMLTD" = :a_cmcd ) AND
					( "PBINV"."INV402"."XPLANT" = :a_plant ) AND
					( "PBINV"."INV402"."DIV" = :a_dvsn ) AND
					( "PBINV"."INV402"."ITNO" = :ls_check ) AND
					( "PBINV"."INV402"."XYEAR" = :a_adjdt ) 
					using sqlca;
		If sqlca.sqlcode <> 0 Then
			lc_convqty = 1
			lc_costav = 0
		End If
	end if
	ls_slty = ds_inout_line.getitemstring(ll_cnt,"sliptype")
	ls_xuse = ds_inout_line.getitemstring(ll_cnt,"xuse")
	ls_rtngub = trim(ds_inout_line.getitemstring(ll_cnt,"rtngub"))
	ls_cls = ds_inout_line.getitemstring(ll_cnt,"cls")
	ls_srce = ds_inout_line.getitemstring(ll_cnt,"srce")
	
	choose case ls_slty
		case 'RP'
			if (a_plant = 'D' and (a_dvsn = 'A' or a_dvsn = 'V')) then
				//전장에서 50/04품번이 입고되면 사급완성품창고로 이동한다.
			else
				//전장을 제외한 공장인경우, 라인에 투입된다.
				if (ls_cls = '50' and ls_srce = '04') then
					if ( a_plant = 'B' or a_plant = 'K' ) then
							if ls_nuse <> 'Y' then
								//라인으로 바로 투입되는 품번
								lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							end if
						else
							//라인으로 바로 투입되는 품번
							lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						end if
				end if
			end if
		case 'SS'
			if (a_plant = 'D' and (a_dvsn = 'A' or a_dvsn = 'V')) then
				//전장에서 50/04품번이 입고되면 사급완성품창고로 이동한다.
			else
				//전장을 제외한 공장인경우, 라인에 투입된다.
				if (ls_cls = '50' and ls_srce = '04') then
					if ( a_plant = 'B' or a_plant = 'K' ) then
							if ls_nuse <> 'Y' then
								//라인으로 바로 투입되는 품번
								lc_qty[2] = lc_qty[2] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							end if
						else
							//라인으로 바로 투입되는 품번
							lc_qty[2] = lc_qty[2] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						end if
				end if
			end if
		case 'IS'
			if (ls_xuse = '04' or ls_xuse = '07' or ls_xuse = '06') then
				//라인재공과 무관한 불출용도 임
//				if ls_xuse = '07' then
//					lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//					lc_amt[2] = lc_amt[2] + ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
//					lc_qty[5] = lc_qty[5] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//					lc_amt[6] = lc_qty[6] + ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
//				end if
			else
				//불출용도가 '03','05'인 경우와 금액만 투입된 경우에 투입과 동시에 타계정사용으로 처리
				if ls_cls <> '10' and ls_srce = '04' then
					lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
				else
					lc_chkqty = ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
					lc_chkamt = ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
					if (lc_chkqty = 0 and lc_chkamt <> 0) then
						lc_amt[3] = lc_amt[3] + lc_chkamt
					else
						lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						lc_amt[2] = lc_amt[2] + ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
						if (ls_xuse = '03' or ls_xuse = '05') then
							lc_qty[7] = lc_qty[7] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							lc_amt[8] = lc_qty[7] * (lc_costav / lc_convqty)
						end if
					end if
				end if
			end if
		case 'RS'
			if (ls_xuse = '04' or ls_xuse = '07' or ls_xuse = '06') then
				//라인재공과 무관한 불출용도임
			else
				if ls_rtngub <> '02' then
					//소재불량 반납
					lc_chkqty = ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
					lc_chkamt = ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
					if (lc_chkqty = 0 and lc_chkamt <> 0) then
						lc_amt[3] = lc_amt[3] - lc_chkamt
					else
						lc_qty[2] = lc_qty[2] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						lc_amt[2] = lc_amt[2] - ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
					end if
					
					if (ls_xuse = '03' or ls_xuse = '05') then
						lc_qty[7] = lc_qty[7] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						lc_amt[8] = lc_qty[7] * (lc_costav / lc_convqty)
					end if
				else
					//작업불량에 반납
					if ls_srce <> '03' then
						lc_qty[9] = lc_qty[9] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						lc_amt[10] = lc_qty[9] * (lc_costav / lc_convqty)
					end if
				end if
			end if
		case 'SA'
			if ls_srce <> '04' or (ls_cls = '10' and ls_srce = '04') then
				lc_qty[2] = lc_qty[2] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
				lc_amt[2] = lc_amt[2] + ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
				lc_qty[6] = lc_qty[6] + (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
				lc_amt[7] = lc_qty[6] * (lc_costav / lc_convqty)
			end if
		case 'SR'
			if ls_srce <> '04' or (ls_cls = '10' and ls_srce = '04') then
				lc_qty[2] = lc_qty[2] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
				lc_amt[2] = lc_amt[2] - ds_inout_line.getitemdecimal(ll_cnt,"com_amt")
				lc_qty[6] = lc_qty[6] - (ds_inout_line.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
				lc_amt[7] = lc_qty[6] * ( lc_costav / lc_convqty )
			end if
		case 'WC','WR','IE','WX'
			choose case ls_xuse
				case '01'	//정상사용
					lc_qty[3] = lc_qty[3] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[4] = lc_qty[3] * (lc_costav / lc_convqty)
				case '02'	//반출사용
					lc_qty[4] = lc_qty[4] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[5] = lc_qty[4] * (lc_costav / lc_convqty)
				case '03'	//유상반출사용
					lc_qty[5] = lc_qty[5] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[6] = lc_qty[5] * (lc_costav / lc_convqty)
				case '06'	//타부서불출사용
					lc_qty[8] = lc_qty[8] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[9] = lc_qty[8] * (lc_costav / lc_convqty)
				case '07'	//불량 사용
					lc_qty[9] = lc_qty[9] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[10] = lc_qty[9] * (lc_costav / lc_convqty)
				case '08'   //조정수량
					lc_qty[10] = lc_qty[10] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[11] = lc_qty[10] * (lc_costav / lc_convqty)
				case '09'   //실사차이
					lc_qty[11] = lc_qty[11] + ds_inout_line.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[12] = lc_qty[11] * (lc_costav / lc_convqty)
				case else
					messagebox("재공사용용도", ls_itno + ":" + ls_orct2 + " 에러")
			end choose
	end choose
next

//무상업체 재공수불 체크
ls_iocd = '2'
ds_inout_wip002.retrieve(a_cmcd,a_plant,a_dvsn,ls_year,ls_month,'2')										
ll_rowcnt1 = ds_inout_wip002.rowcount()

lc_qty[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
lc_amt[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
ll_findrow = 1
ll_totcnt = ll_totcnt + 1

if ll_rowcnt1 = 0 then
	return true
end if
if ll_rowcnt2 > 0 then
	ls_check = trim(ds_inout_vndr.getitemstring(1,"itno"))
	ls_orct = trim(ds_inout_vndr.getitemstring(1,"vsrno"))
	
	SELECT "PBINV"."INV101"."CONVQTY","PBINV"."INV402"."COSTAV","PBINV"."INV101"."NUSE"
		INTO :lc_convqty, :lc_costav, :ls_nuse
		FROM "PBINV"."INV101", "PBINV"."INV402"
		WHERE ( "PBINV"."INV101"."COMLTD" = "PBINV"."INV402"."COMLTD" ) AND
				( "PBINV"."INV101"."XPLANT" = "PBINV"."INV402"."XPLANT" ) AND
				( "PBINV"."INV101"."DIV" = "PBINV"."INV402"."DIV" ) AND
				( "PBINV"."INV101"."ITNO" = "PBINV"."INV402"."ITNO" ) AND
				( "PBINV"."INV402"."COMLTD" = :a_cmcd ) AND
				( "PBINV"."INV402"."XPLANT" = :a_plant ) AND
				( "PBINV"."INV402"."DIV" = :a_dvsn ) AND
				( "PBINV"."INV402"."ITNO" = :ls_check ) AND
				( "PBINV"."INV402"."XYEAR" = :a_adjdt ) 
				using sqlca;
	If sqlca.sqlcode <> 0 Then
		lc_convqty = 1
		lc_costav = 0
	End If
end if

if a_plant = 'Y' then
	ll_rowcnt2 = 0
end if
for ll_cnt = 1 to ll_rowcnt2
	ll_totcnt = ll_totcnt + 1
	
	ls_itno = trim(ds_inout_vndr.getitemstring(ll_cnt,"itno"))
	ls_orct2 = trim(ds_inout_vndr.getitemstring(ll_cnt,"vsrno"))
	//최종루틴 처리
	if ll_cnt = ll_rowcnt2 then
		if (ls_check <> ls_itno) or (ls_orct <> ls_orct2) then
			ll_findrow = ds_inout_wip002.find("wip002_wborct = '" + ls_orct + "' and wip002_wbitno = '" &
														+ ls_check + "'",1,ll_rowcnt1)
			if ll_findrow > 0 then
				lc_qty[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgqt")
				lc_amt[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgat1")
				lc_waavrg = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbavrg1")
				if lc_waavrg <> 0 then
					for ll_cnty = 3 to 11
						lc_amt[ll_cnty + 1] = lc_qty[ll_cnty] * lc_waavrg
					next
				end if
			end if
			lc_qty[12] = lc_qty[1] + lc_qty[2] - ( lc_qty[3] + lc_qty[4] + lc_qty[5] + lc_qty[6] + lc_qty[7] &
								+ lc_qty[8] + lc_qty[9] + lc_qty[10] + lc_qty[11])					
			lc_amt[13] = lc_amt[1] + lc_amt[2] + lc_amt[3] - ( lc_amt[4] + lc_amt[5] + lc_amt[6] + lc_amt[7] &
								+ lc_amt[8] + lc_amt[9] + lc_amt[10] + lc_amt[11] + lc_amt[12])
			f_wip_inout_seterr002(a_adjdt,a_cmcd,a_plant,a_dvsn,ls_orct,ls_check,ds_inout_wip002,a_dw,ll_findrow &
											,lc_qty,lc_amt,ls_iocd)
			lc_qty[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
			lc_amt[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
			ls_check = trim(ls_itno)
			ls_orct = ls_orct2
			SELECT "PBINV"."INV101"."CONVQTY","PBINV"."INV402"."COSTAV", "PBINV"."INV101"."NUSE"
					INTO :lc_convqty, :lc_costav, :ls_nuse
					FROM "PBINV"."INV101", "PBINV"."INV402"
					WHERE ( "PBINV"."INV101"."COMLTD" = "PBINV"."INV402"."COMLTD" ) AND
							( "PBINV"."INV101"."XPLANT" = "PBINV"."INV402"."XPLANT" ) AND
							( "PBINV"."INV101"."DIV" = "PBINV"."INV402"."DIV" ) AND
							( "PBINV"."INV101"."ITNO" = "PBINV"."INV402"."ITNO" ) AND
							( "PBINV"."INV402"."COMLTD" = :a_cmcd ) AND
							( "PBINV"."INV402"."XPLANT" = :a_plant ) AND
							( "PBINV"."INV402"."DIV" = :a_dvsn ) AND
							( "PBINV"."INV402"."ITNO" = :ls_check ) AND
							( "PBINV"."INV402"."XYEAR" = :a_adjdt ) 
							using sqlca;
			If sqlca.sqlcode <> 0 Then
				lc_convqty = 1
				lc_costav = 0
			End If	
		end if
		ls_slty = ds_inout_vndr.getitemstring(ll_cnt,"sliptype")
		ls_xuse = ds_inout_vndr.getitemstring(ll_cnt,"xuse")
		ls_rtngub = ds_inout_vndr.getitemstring(ll_cnt,"rtngub")
		ls_cls = ds_inout_vndr.getitemstring(ll_cnt,"cls")
		ls_srce = ds_inout_vndr.getitemstring(ll_cnt,"srce")
		choose case ls_slty
			case 'IS'
				if ls_xuse = '04' then
					lc_chkqty = ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
					lc_chkamt = ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
					if (lc_chkqty = 0 and lc_chkamt <> 0) then
						lc_amt[3] = lc_amt[3] + lc_chkamt
					else
						lc_qty[2] = lc_qty[2] + (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						lc_amt[2] = lc_amt[2] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
					end if
				elseif ls_xuse = '07' then
//				   lc_qty[2] = lc_qty[2] + (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//					lc_amt[2] = lc_amt[2] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
//					lc_qty[5] = lc_qty[5] + (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//					lc_amt[6] = lc_amt[6] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
				end if
			case 'RS'
				if ls_xuse = '04' then
					if ls_rtngub = '02' then	
						//작업불량에 반납
						lc_qty[9] = lc_qty[9] + (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						lc_amt[10] = lc_qty[9] * (lc_costav / lc_convqty)
					else
						//소재불량 반납
						lc_chkqty = ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
						lc_chkamt = ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
						if (lc_chkqty = 0 and lc_chkamt <> 0) then
							lc_amt[3] = lc_amt[3] - lc_chkamt
						else
							lc_qty[2] = lc_qty[2] - (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							lc_amt[2] = lc_amt[2] - ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
						end if
					end if
				else
//					lc_qty[2] = lc_qty[2] - (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//					lc_amt[2] = lc_amt[2] - ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
//					lc_qty[5] = lc_qty[5] - (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//					lc_amt[6] = lc_amt[6] - ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
				end if
			case 'WC','WR','IE','WX'
				choose case ls_xuse
					case '01'	//정상사용
						lc_qty[3] = lc_qty[3] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[4] = lc_qty[3] * (lc_costav / lc_convqty)
					case '02'	//반출사용
						lc_qty[4] = lc_qty[4] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[5] = lc_qty[4] * (lc_costav / lc_convqty)
					case '03'	//유상반출사용
//						lc_qty[5] = lc_qty[5] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
//						lc_amt[6] = lc_qty[5] * (lc_costav / lc_convqty)
					case '06'	//타부서불출사용
						lc_qty[8] = lc_qty[8] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[9] = lc_qty[8] * (lc_costav / lc_convqty)
					case '07'	//불량 사용
						lc_qty[9] = lc_qty[9] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[10] = lc_qty[9] * (lc_costav / lc_convqty)
					case '08'   //조정수량
						lc_qty[10] = lc_qty[10] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[11] = lc_qty[10] * (lc_costav / lc_convqty)
					case '09'   //실사차이
						lc_qty[11] = lc_qty[11] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
						lc_qty[12] = lc_qty[11] * (lc_costav / lc_convqty)
					case else
						messagebox("재공사용용도", ls_itno + ":" + ls_orct2 + " 에러")
				end choose
		end choose
		
		ll_findrow = ds_inout_wip002.find("wip002_wborct = '" + ls_orct + "' and wip002_wbitno = '" &
													+ ls_check + "'",1,ll_rowcnt1)
		if ll_findrow > 0 then
			lc_qty[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgqt")
			lc_amt[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgat1")
			lc_waavrg = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbavrg1")
			if lc_waavrg <> 0 then
				for ll_cnty = 3 to 11
					lc_amt[ll_cnty + 1] = lc_qty[ll_cnty] * lc_waavrg
				next
			end if
		end if
		lc_qty[12] = lc_qty[1] + lc_qty[2] - ( lc_qty[3] + lc_qty[4] + lc_qty[5] + lc_qty[6] + lc_qty[7] &
							+ lc_qty[8] + lc_qty[9] + lc_qty[10] + lc_qty[11])
		lc_amt[13] = lc_amt[1] + lc_amt[2] + lc_amt[3] - ( lc_amt[4] + lc_amt[5] + lc_amt[6] + lc_amt[7] &
							+ lc_amt[8] + lc_amt[9] + lc_amt[10] + lc_amt[11] + lc_amt[12])
		f_wip_inout_seterr002(a_adjdt,a_cmcd,a_plant,a_dvsn,ls_orct,ls_check,ds_inout_wip002,a_dw,ll_findrow &
									,lc_qty,lc_amt,ls_iocd)
		exit
	end if
	
	if (ls_check <> ls_itno) or (ls_orct <> ls_orct2) then	//투입수량,투입금액,사용수량을 비교
		ll_findrow = ds_inout_wip002.find("wip002_wborct = '" + ls_orct + "' and wip002_wbitno = '" &
														+ ls_check + "'",1,ll_rowcnt1)
		if ll_findrow > 0 then
			lc_qty[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgqt")
			lc_amt[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgat1")
			lc_waavrg = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbavrg1")
			if lc_waavrg <> 0 then
				for ll_cnty = 3 to 11
					lc_amt[ll_cnty + 1] = lc_qty[ll_cnty] * lc_waavrg
				next
			end if
		end if
		lc_qty[12] = lc_qty[1] + lc_qty[2] - ( lc_qty[3] + lc_qty[4] + lc_qty[5] + lc_qty[6] + lc_qty[7] &
							+ lc_qty[8] + lc_qty[9] + lc_qty[10] + lc_qty[11])					
		lc_amt[13] = lc_amt[1] + lc_amt[2] + lc_amt[3] - ( lc_amt[4] + lc_amt[5] + lc_amt[6] + lc_amt[7] &
							+ lc_amt[8] + lc_amt[9] + lc_amt[10] + lc_amt[11] + lc_amt[12])
		f_wip_inout_seterr002(a_adjdt,a_cmcd,a_plant,a_dvsn,ls_orct,ls_check,ds_inout_wip002,a_dw,ll_findrow &
										,lc_qty,lc_amt,ls_iocd)
		lc_qty[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
		lc_amt[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
		ls_check = trim(ls_itno)
		ls_orct = ls_orct2
		SELECT "PBINV"."INV101"."CONVQTY","PBINV"."INV402"."COSTAV", "PBINV"."INV101"."NUSE"
				INTO :lc_convqty, :lc_costav, :ls_nuse
				FROM "PBINV"."INV101", "PBINV"."INV402"
				WHERE ( "PBINV"."INV101"."COMLTD" = "PBINV"."INV402"."COMLTD" ) AND
						( "PBINV"."INV101"."XPLANT" = "PBINV"."INV402"."XPLANT" ) AND
						( "PBINV"."INV101"."DIV" = "PBINV"."INV402"."DIV" ) AND
						( "PBINV"."INV101"."ITNO" = "PBINV"."INV402"."ITNO" ) AND
						( "PBINV"."INV402"."COMLTD" = :a_cmcd ) AND
						( "PBINV"."INV402"."XPLANT" = :a_plant ) AND
						( "PBINV"."INV402"."DIV" = :a_dvsn ) AND
						( "PBINV"."INV402"."ITNO" = :ls_check ) AND
						( "PBINV"."INV402"."XYEAR" = :a_adjdt ) 
						using sqlca;
		If sqlca.sqlcode <> 0 Then
			lc_convqty = 1
			lc_costav = 0
		End If
	end if
	ls_slty = ds_inout_vndr.getitemstring(ll_cnt,"sliptype")
	ls_xuse = ds_inout_vndr.getitemstring(ll_cnt,"xuse")
	ls_rtngub = ds_inout_vndr.getitemstring(ll_cnt,"rtngub")
	ls_cls = ds_inout_vndr.getitemstring(ll_cnt,"cls")
	ls_srce = ds_inout_vndr.getitemstring(ll_cnt,"srce")
	
	choose case ls_slty
		case 'IS'
			if ls_xuse = '04' then
				//무상사급인 경우만 업체재공에 적용
				lc_chkqty = ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
				lc_chkamt = ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
				if (lc_chkqty = 0 and lc_chkamt <> 0) then
					lc_amt[3] = lc_amt[3] + lc_chkamt
				else
					lc_qty[2] = lc_qty[2] + (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					lc_amt[2] = lc_amt[2] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
				end if
			elseif ls_xuse = '07' then
//				lc_qty[2] = lc_qty[2] + (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//				lc_amt[2] = lc_amt[2] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
//				lc_qty[5] = lc_qty[5] + (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//				lc_amt[6] = lc_amt[6] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
			end if
		case 'RS'
			if ls_xuse = '04' then
				if ls_rtngub = '02' then	
					//작업불량에 반납
					lc_qty[9] = lc_qty[9] + (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					lc_amt[10] = lc_qty[9] * (lc_costav / lc_convqty)
				else
					//소재불량 반납
					lc_chkqty = ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
					lc_chkamt = ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
					if (lc_chkqty = 0 and lc_chkamt <> 0) then
						lc_amt[3] = lc_amt[3] - lc_chkamt
					else
						lc_qty[2] = lc_qty[2] - (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						lc_amt[2] = lc_amt[2] - ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
					end if
				end if
			else
//				lc_qty[2] = lc_qty[2] - (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//				lc_amt[2] = lc_amt[2] - ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
//				lc_qty[5] = lc_qty[5] - (ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
//				lc_amt[6] = lc_amt[6] - ds_inout_vndr.getitemdecimal(ll_cnt,"com_amt")
			end if
		case 'WC','WR','IE','WX'
			choose case ls_xuse
				case '01'	//정상사용
					lc_qty[3] = lc_qty[3] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[4] = lc_qty[3] * (lc_costav / lc_convqty)
				case '02'	//반출사용
					lc_qty[4] = lc_qty[4] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[5] = lc_qty[4] * (lc_costav / lc_convqty)
				case '03'	//유상반출사용
//					lc_qty[5] = lc_qty[5] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
//					lc_amt[6] = lc_qty[5] * (lc_costav / lc_convqty)
				case '06'	//타부서불출사용
					lc_qty[8] = lc_qty[8] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[9] = lc_qty[8] * (lc_costav / lc_convqty)
				case '07'	//불량 사용
					lc_qty[9] = lc_qty[9] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[10] = lc_qty[9] * (lc_costav / lc_convqty)
				case '08'   //조정수량
					lc_qty[10] = lc_qty[10] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[11] = lc_qty[10] * (lc_costav / lc_convqty)
				case '09'   //실사차이
					lc_qty[11] = lc_qty[11] + ds_inout_vndr.getitemdecimal(ll_cnt,"com_qty")
					lc_qty[12] = lc_qty[11] * (lc_costav / lc_convqty)
				case else
					messagebox("재공사용용도", ls_itno + ":" + ls_orct2 + " 에러")
			end choose
	end choose
next

//*****************************************************
// 유상업체 재공수불 체크 ( 결산월 )
// 1. 이동평균단가는 결산월의 말일자 유상사급단가 적용  pbinv.f_xcost1( 지역, 공장, 품번, 업체, 적용년월일)
// 2. 월말재공금액 관리 wbbgat2
//*****************************************************
ls_iocd = '3'
ds_inout_wip002.retrieve(a_cmcd,a_plant,a_dvsn,ls_year,ls_month,'3')										
ll_rowcnt1 = ds_inout_wip002.rowcount()
if ll_rowcnt1 < 1 or ll_rowcnt3 < 1 then
	return true
end if

//이월기초수량,금액 초기화
ls_nextdt = uf_wip_addmonth(a_adjdt,1)
ls_nextyear = mid(ls_nextdt,1,4)
ls_nextmonth = mid(ls_nextdt,5,2)

UPDATE PBWIP.WIP002
	SET WBBGQT  = 0, WBBGAT1 = 0
WHERE WBCMCD = '01' AND WBPLANT = :a_plant AND WBDVSN = :a_dvsn AND 
	WBYEAR = :ls_nextyear AND WBMONTH = :ls_nextmonth AND WBIOCD = :ls_iocd
using sqlca;
		
UPDATE PBWIP.WIP001
	SET WABGQT  = 0, WABGAT1 = 0, WAOHQT = 0
WHERE WACMCD = '01' AND WAPLANT = :a_plant AND WADVSN = :a_dvsn AND WAIOCD = :ls_iocd
using sqlca;

ls_check = trim(ds_inout_vndr07.getitemstring(1,"itno"))
ls_orct = trim(ds_inout_vndr07.getitemstring(1,"vsrno"))
lc_qty[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
lc_amt[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
ll_findrow = 1
ll_totcnt = ll_totcnt + 1

SELECT "PBINV"."INV101"."CONVQTY","PBINV"."INV402"."COSTAV","PBINV"."INV101"."NUSE"
	INTO :lc_convqty, :lc_costav, :ls_nuse
	FROM "PBINV"."INV101", "PBINV"."INV402"
	WHERE ( "PBINV"."INV101"."COMLTD" = "PBINV"."INV402"."COMLTD" ) AND
			( "PBINV"."INV101"."XPLANT" = "PBINV"."INV402"."XPLANT" ) AND
			( "PBINV"."INV101"."DIV" = "PBINV"."INV402"."DIV" ) AND
			( "PBINV"."INV101"."ITNO" = "PBINV"."INV402"."ITNO" ) AND
			( "PBINV"."INV402"."COMLTD" = :a_cmcd ) AND
			( "PBINV"."INV402"."XPLANT" = :a_plant ) AND
			( "PBINV"."INV402"."DIV" = :a_dvsn ) AND
			( "PBINV"."INV402"."ITNO" = :ls_check ) AND
			( "PBINV"."INV402"."XYEAR" = :a_adjdt ) 
			using sqlca;
If sqlca.sqlcode <> 0 Then
	lc_convqty = 1
	lc_costav = 0
End If
					
for ll_cnt = 1 to ll_rowcnt3
	ll_totcnt = ll_totcnt + 1
	
	ls_itno = trim(ds_inout_vndr07.getitemstring(ll_cnt,"itno"))
	ls_orct2 = trim(ds_inout_vndr07.getitemstring(ll_cnt,"vsrno"))
	//최종루틴 처리
	if ll_cnt = ll_rowcnt3 then
		if (ls_check <> ls_itno) or (ls_orct <> ls_orct2) then
			ll_findrow = ds_inout_wip002.find("wip002_wborct = '" + ls_orct + "' and wip002_wbitno = '" &
													+ ls_check + "'",1,ll_rowcnt1)
			
			SELECT PBINV.F_XCOST1(:a_plant, :a_dvsn, :ls_check, :ls_orct, :ls_todt) INTO :lc_costav
			FROM PBCOMMON.COMM000
			using sqlca;
			
			// 유무상 체크
			if isnull(lc_costav) or f_wip_inout_check07(a_plant, a_dvsn, ls_orct, ls_check, ls_todt) then lc_costav = 0
			lc_waavrg = lc_costav  / lc_convqty
			if ll_findrow > 0 then
				lc_qty[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgqt")
				lc_amt[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgat1")
				ds_inout_wip002.setitem(ll_findrow,"wip002_wbavrg1",lc_waavrg)
			end if
			for ll_cnty = 3 to 11
				lc_amt[ll_cnty + 1] = lc_qty[ll_cnty] * lc_waavrg
			next
			lc_qty[12] = lc_qty[1] + lc_qty[2] - ( lc_qty[3] + lc_qty[4] + lc_qty[5] + lc_qty[6] + lc_qty[7] &
								+ lc_qty[8] + lc_qty[9] + lc_qty[10] + lc_qty[11])					
			lc_amt[13] = lc_qty[12] * lc_waavrg
			
			f_wip_inout_seterr002(a_adjdt,a_cmcd,a_plant,a_dvsn,ls_orct,ls_check,ds_inout_wip002,a_dw,ll_findrow &
											,lc_qty,lc_amt,ls_iocd)
			lc_qty[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
			lc_amt[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
			ls_check = trim(ls_itno)
			ls_orct = ls_orct2
			SELECT "PBINV"."INV101"."CONVQTY","PBINV"."INV402"."COSTAV", "PBINV"."INV101"."NUSE"
					INTO :lc_convqty, :lc_costav, :ls_nuse
					FROM "PBINV"."INV101", "PBINV"."INV402"
					WHERE ( "PBINV"."INV101"."COMLTD" = "PBINV"."INV402"."COMLTD" ) AND
							( "PBINV"."INV101"."XPLANT" = "PBINV"."INV402"."XPLANT" ) AND
							( "PBINV"."INV101"."DIV" = "PBINV"."INV402"."DIV" ) AND
							( "PBINV"."INV101"."ITNO" = "PBINV"."INV402"."ITNO" ) AND
							( "PBINV"."INV402"."COMLTD" = :a_cmcd ) AND
							( "PBINV"."INV402"."XPLANT" = :a_plant ) AND
							( "PBINV"."INV402"."DIV" = :a_dvsn ) AND
							( "PBINV"."INV402"."ITNO" = :ls_check ) AND
							( "PBINV"."INV402"."XYEAR" = :a_adjdt ) 
							using sqlca;
			If sqlca.sqlcode <> 0 Then
				lc_convqty = 1
				lc_costav = 0
			End If	
		end if
		ls_slty = ds_inout_vndr07.getitemstring(ll_cnt,"sliptype")
		ls_xuse = ds_inout_vndr07.getitemstring(ll_cnt,"xuse")
		ls_rtngub = ds_inout_vndr07.getitemstring(ll_cnt,"rtngub")
		ls_cls = ds_inout_vndr07.getitemstring(ll_cnt,"cls")
		ls_srce = ds_inout_vndr07.getitemstring(ll_cnt,"srce")
		choose case ls_slty
			case 'IS'
				if ls_xuse = '04' then
					lc_chkqty = ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
					lc_chkamt = ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
					if (lc_chkqty = 0 and lc_chkamt <> 0) then
						lc_amt[3] = lc_amt[3] + lc_chkamt
					else
						lc_qty[2] = lc_qty[2] + (ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						lc_amt[2] = lc_amt[2] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
					end if
				elseif ls_xuse = '07' then
				   lc_qty[2] = lc_qty[2] + (ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					lc_amt[2] = lc_amt[2] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
				end if
			case 'RS'
				if ls_xuse = '04' then
					if ls_rtngub = '02' then	
						//작업불량에 반납
						lc_qty[9] = lc_qty[9] + (ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						lc_amt[10] = 0
					else
						//소재불량 반납
						lc_chkqty = ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
						lc_chkamt = ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
						if (lc_chkqty = 0 and lc_chkamt <> 0) then
							lc_amt[3] = lc_amt[3] - lc_chkamt
						else
							lc_qty[2] = lc_qty[2] - (ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
							lc_amt[2] = lc_amt[2] - ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
						end if
					end if
				else
					lc_qty[2] = lc_qty[2] - (ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					lc_amt[2] = lc_amt[2] - ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
				end if
			case 'WC','WR','IE','WX'
				choose case ls_xuse
					case '01'	//정상사용
						lc_qty[3] = lc_qty[3] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[4] = 0
					case '02'	//반출사용
						lc_qty[4] = lc_qty[4] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[5] = 0
					case '03'	//유상반출사용
						lc_qty[5] = lc_qty[5] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[6] = 0
					case '06'	//타부서불출사용
						lc_qty[8] = lc_qty[8] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[9] = 0
					case '07'	//불량 사용
						lc_qty[9] = lc_qty[9] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[10] = 0
					case '08'   //조정수량
						lc_qty[10] = lc_qty[10] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
						lc_amt[11] = 0
					case '09'   //실사차이
						lc_qty[11] = lc_qty[11] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
						lc_qty[12] = 0
					case else
						messagebox("재공사용용도", ls_itno + ":" + ls_orct2 + " 에러")
				end choose
		end choose
		
		ll_findrow = ds_inout_wip002.find("wip002_wborct = '" + ls_orct + "' and wip002_wbitno = '" &
													+ ls_check + "'",1,ll_rowcnt1)
		
		SELECT PBINV.F_XCOST1(:a_plant, :a_dvsn, :ls_check, :ls_orct, :ls_todt) INTO :lc_costav
		FROM PBCOMMON.COMM000
		using sqlca;
		
		// 유무상 체크
		if isnull(lc_costav) or f_wip_inout_check07(a_plant, a_dvsn, ls_orct, ls_check, ls_todt) then lc_costav = 0
		lc_waavrg = lc_costav / lc_convqty
		if ll_findrow > 0 then
			lc_qty[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgqt")
			lc_amt[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgat1")
			ds_inout_wip002.setitem(ll_findrow,"wip002_wbavrg1",lc_waavrg)
		end if
		for ll_cnty = 3 to 11
			lc_amt[ll_cnty + 1] = lc_qty[ll_cnty] * lc_waavrg
		next
		lc_qty[12] = lc_qty[1] + lc_qty[2] - ( lc_qty[3] + lc_qty[4] + lc_qty[5] + lc_qty[6] + lc_qty[7] &
							+ lc_qty[8] + lc_qty[9] + lc_qty[10] + lc_qty[11])					
		lc_amt[13] = lc_qty[12] * lc_waavrg
			
		f_wip_inout_seterr002(a_adjdt,a_cmcd,a_plant,a_dvsn,ls_orct,ls_check,ds_inout_wip002,a_dw,ll_findrow &
									,lc_qty,lc_amt,ls_iocd)
		exit
	end if
	
	if (ls_check <> ls_itno) or (ls_orct <> ls_orct2) then	//투입수량,투입금액,사용수량을 비교
		ll_findrow = ds_inout_wip002.find("wip002_wborct = '" + ls_orct + "' and wip002_wbitno = '" &
														+ ls_check + "'",1,ll_rowcnt1)
		
		SELECT PBINV.F_XCOST1(:a_plant, :a_dvsn, :ls_check, :ls_orct, :ls_todt) INTO :lc_costav
		FROM PBCOMMON.COMM000
		using sqlca;
		
		// 유무상 체크
		if isnull(lc_costav) or f_wip_inout_check07(a_plant, a_dvsn, ls_orct, ls_check, ls_todt) then lc_costav = 0
		lc_waavrg = lc_costav / lc_convqty
		if ll_findrow > 0 then
			lc_qty[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgqt")
			lc_amt[1] = ds_inout_wip002.getitemdecimal(ll_findrow,"wip002_wbbgat1")
			ds_inout_wip002.setitem(ll_findrow,"wip002_wbavrg1",lc_waavrg)
		end if
		for ll_cnty = 3 to 11
			lc_amt[ll_cnty + 1] = lc_qty[ll_cnty] * lc_waavrg
		next
		lc_qty[12] = lc_qty[1] + lc_qty[2] - ( lc_qty[3] + lc_qty[4] + lc_qty[5] + lc_qty[6] + lc_qty[7] &
							+ lc_qty[8] + lc_qty[9] + lc_qty[10] + lc_qty[11])					
		lc_amt[13] = lc_qty[12] * lc_waavrg
			
		f_wip_inout_seterr002(a_adjdt,a_cmcd,a_plant,a_dvsn,ls_orct,ls_check,ds_inout_wip002,a_dw,ll_findrow &
										,lc_qty,lc_amt,ls_iocd)
		lc_qty[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
		lc_amt[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
		ls_check = trim(ls_itno)
		ls_orct = ls_orct2
		SELECT "PBINV"."INV101"."CONVQTY","PBINV"."INV402"."COSTAV", "PBINV"."INV101"."NUSE"
				INTO :lc_convqty, :lc_costav, :ls_nuse
				FROM "PBINV"."INV101", "PBINV"."INV402"
				WHERE ( "PBINV"."INV101"."COMLTD" = "PBINV"."INV402"."COMLTD" ) AND
						( "PBINV"."INV101"."XPLANT" = "PBINV"."INV402"."XPLANT" ) AND
						( "PBINV"."INV101"."DIV" = "PBINV"."INV402"."DIV" ) AND
						( "PBINV"."INV101"."ITNO" = "PBINV"."INV402"."ITNO" ) AND
						( "PBINV"."INV402"."COMLTD" = :a_cmcd ) AND
						( "PBINV"."INV402"."XPLANT" = :a_plant ) AND
						( "PBINV"."INV402"."DIV" = :a_dvsn ) AND
						( "PBINV"."INV402"."ITNO" = :ls_check ) AND
						( "PBINV"."INV402"."XYEAR" = :a_adjdt ) 
						using sqlca;
		If sqlca.sqlcode <> 0 Then
			lc_convqty = 1
			lc_costav = 0
		End If
	end if
	ls_slty = ds_inout_vndr07.getitemstring(ll_cnt,"sliptype")
	ls_xuse = ds_inout_vndr07.getitemstring(ll_cnt,"xuse")
	ls_rtngub = ds_inout_vndr07.getitemstring(ll_cnt,"rtngub")
	ls_cls = ds_inout_vndr07.getitemstring(ll_cnt,"cls")
	ls_srce = ds_inout_vndr07.getitemstring(ll_cnt,"srce")
	
	choose case ls_slty
		case 'IS'
			if ls_xuse = '04' then
				//무상사급인 경우만 업체재공에 적용
				lc_chkqty = ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
				lc_chkamt = ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
				if (lc_chkqty = 0 and lc_chkamt <> 0) then
					lc_amt[3] = lc_amt[3] + lc_chkamt
				else
					lc_qty[2] = lc_qty[2] + (ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					lc_amt[2] = lc_amt[2] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
				end if
			elseif ls_xuse = '07' then
				lc_qty[2] = lc_qty[2] + (ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
				lc_amt[2] = lc_amt[2] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
			end if
		case 'RS'
			if ls_xuse = '04' then
				if ls_rtngub = '02' then	
					//작업불량에 반납
					lc_qty[9] = lc_qty[9] + (ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
					lc_amt[10] = 0
				else
					//소재불량 반납
					lc_chkqty = ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
					lc_chkamt = ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
					if (lc_chkqty = 0 and lc_chkamt <> 0) then
						lc_amt[3] = lc_amt[3] - lc_chkamt
					else
						lc_qty[2] = lc_qty[2] - (ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
						lc_amt[2] = lc_amt[2] - ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
					end if
				end if
			else
				lc_qty[2] = lc_qty[2] - (ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty") * lc_convqty)
				lc_amt[2] = lc_amt[2] - ds_inout_vndr07.getitemdecimal(ll_cnt,"com_amt")
			end if
		case 'WC','WR','IE','WX'
			choose case ls_xuse
				case '01'	//정상사용
					lc_qty[3] = lc_qty[3] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[4] = 0
				case '02'	//반출사용
					lc_qty[4] = lc_qty[4] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[5] = 0
				case '03'	//유상반출사용
					lc_qty[5] = lc_qty[5] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[6] = 0
				case '06'	//타부서불출사용
					lc_qty[8] = lc_qty[8] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[9] = 0
				case '07'	//불량 사용
					lc_qty[9] = lc_qty[9] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[10] = 0
				case '08'   //조정수량
					lc_qty[10] = lc_qty[10] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
					lc_amt[11] = 0
				case '09'   //실사차이
					lc_qty[11] = lc_qty[11] + ds_inout_vndr07.getitemdecimal(ll_cnt,"com_qty")
					lc_qty[12] = 0
				case else
					messagebox("재공사용용도", ls_itno + ":" + ls_orct2 + " 에러")
			end choose
	end choose
next

return true
end function

