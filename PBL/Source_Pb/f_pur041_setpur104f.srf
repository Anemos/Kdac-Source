$PBExportHeader$f_pur041_setpur104f.srf
$PBExportComments$결재용 품목단가hitory(구분,dw)
global type f_pur041_setpur104f from function_object
end type

forward prototypes
global function integer f_pur041_setpur104f (string as_gubun, string as_wsrno, datawindow adw_1, ref string as_msg)
end prototypes

global function integer f_pur041_setpur104f (string as_gubun, string as_wsrno, datawindow adw_1, ref string as_msg);////구분별로 업체품목단가정보 pur104구조를 pur104f에 기록처리
long ll_row, ll_rcnt
//string ls_wsrno

dec {2} ld_dcost
dec {5} ld_ecost
string  ls_COMLTD, ls_VSRC,ls_DEPT,ls_VSRNO,ls_ITNO,ls_ADJDT,ls_CHGDT,ls_WSRNO
string  ls_DCURR,ls_DSHEET,ls_XCAUSE1,ls_ECURR,ls_ESHEET,ls_XCAUSE2,ls_XPAY
string  ls_EXTD, ls_STOPDT, ls_STOPDESC
//2009.04.29
String ls_pmul, ls_mul, ls_cmul, ls_sogubdt
Dec{4} ld_pcost1, ld_pcost2, ld_ingot
//2009.06.18
String ls_pmul2, ls_mul2, ls_cmul2
Dec{4} ld_pcost3, ld_pcost4
String ls_pxunit1, ls_pxunit2, ls_pbxunit1, ls_pbxunit2	//2009.07.09
//  
//COMLTD,       VSRC,          DEPT,        VSRNO,            ITNO,            ADJDT,        CHGDT,   
//WSRNO,        DCOST,         DCURR,       DSHEET,           XCAUSE1,         ECOST,        ECURR,   
//ESHEET,       XCAUSE2,       XPAY,        EXTD,            INPTID,          INPTDT,       UPDTID,   
//UPDTDT,       IPADDR,        MACADDR,     STOPDT,           STOPDESC  


for ll_row = 1 to adw_1.rowcount() 
	//ls_COMLTD =  adw_1.object.COMLTD[ll_row]
	ls_VSRC =  adw_1.object.VSRC[ll_row]
	ls_DEPT =  adw_1.object.DEPT[ll_row]
	ls_VSRNO =  adw_1.object.VSRNO[ll_row]
	ls_ITNO =  adw_1.object.ITNO[ll_row]
	ls_ADJDT =  adw_1.object.ADJDT[ll_row]
	//ls_CHGDT =  adw_1.object.CHGDT[ll_row]
	//ls_WSRNO =  adw_1.object.WSRNO[ll_row]
	ld_DCOST =  adw_1.object.DCOST[ll_row]
	ls_DCURR =  adw_1.object.DCURR[ll_row]
	ls_DSHEET =  adw_1.object.DSHEET[ll_row]
	ls_XCAUSE1 =  adw_1.object.XCAUSE1[ll_row]
	ld_ECOST =  adw_1.object.ECOST[ll_row]
	ls_ECURR =  adw_1.object.ECURR[ll_row]
	ls_ESHEET =  adw_1.object.ESHEET[ll_row]
	ls_XCAUSE2 =  adw_1.object.XCAUSE2[ll_row]
	ls_XPAY =  adw_1.object.XPAY[ll_row]
	ls_EXTD =  adw_1.object.EXTD[ll_row]
	//ls_INPTID =  adw_1.object.INPTID[ll_row]
	//ls_INPTDT =  adw_1.object.INPTDt[ll_row]
	//ls_UPDTID =  adw_1.object.UPDTID[ll_row]
	//ls_UPDTDT =  adw_1.object.UPDTDT[ll_row]
	//ls_IPADDR =  adw_1.object.IPADDR[ll_row]
	//ls_MACADDR =  adw_1.object.MACADDR[ll_row]
	ls_STOPDT =  adw_1.object.STOPDT[ll_row]
	ls_STOPDESC =  adw_1.object.STOPDESC[ll_row]
 
 	//2009.04.29
	ls_pmul  	=  adw_1.object.pmul[ll_row]
	ls_mul  		=  adw_1.object.mul[ll_row]
	ls_cmul  	=  adw_1.object.cmul[ll_row]
	ld_pcost1  	=  adw_1.object.pcost1[ll_row]
	ld_pcost2  	=  adw_1.object.pcost2[ll_row]
	ld_ingot  	=  adw_1.object.ingot[ll_row]
	ls_sogubdt  =  adw_1.object.sogubdt[ll_row]
	//end : 2009.04.29
	
	//2009.06.18
	ls_pmul2  	=  adw_1.object.pmul2[ll_row]
	ls_mul2  	=  adw_1.object.mul2[ll_row]
	ls_cmul2  	=  adw_1.object.cmul2[ll_row]
	ld_pcost3  	=  adw_1.object.pcost3[ll_row]
	ld_pcost4  	=  adw_1.object.pcost4[ll_row]
	//end : 2009.06.18
	
	//2009.07.09
	ls_pxunit1 	=  adw_1.object.pxunit1[ll_row]
	ls_pxunit2  =  adw_1.object.pxunit2[ll_row]
	ls_pbxunit1 =  adw_1.object.pbxunit1[ll_row]
	ls_pbxunit2 =  adw_1.object.pbxunit2[ll_row]
	//end : 2009.07.09
	
//	select coalesce(max(wsrno),'00000')
//	into :ls_wsrno
//	from pbpur.pur103f
//	where comltd = '01'
//	and  vsrc = :ls_vsrc
//	and  dept = :ls_dept
//	and  vsrno = :ls_vsrno
//	and  itno  = :ls_itno
//	and  chgdt = :g_s_date;
	//pur103f 그대로 넣기
	//ls_wsrno = string(long(ls_wsrno) + 1,'00000')
	  INSERT INTO PBPUR.PUR104F  
         (    COMLTD,       VSRC,          DEPT,        VSRNO,            ITNO,            ADJDT,        CHGDT,   
              WSRNO,        DCOST,         DCURR,       DSHEET,           XCAUSE1,         ECOST,        ECURR,   
              ESHEET,       XCAUSE2,       XPAY,        EXTD,             INPTID,          INPTDT,       UPDTID,   
              UPDTDT,       IPADDR,        MACADDR,     STOPDT,           STOPDESC,        gubun,
				  PMUL,			 MUL,				 CMUL,		  PCOST1,			  PCOST2,			 INGOT,			SOGUBDT,
				  PMUL2,			 MUL2,			 CMUL2,		  PCOST3,			  PCOST4,
				  PXUNIT1,		 PXUNIT2,		 PBXUNIT1,	  PBXUNIT2
			 )  
     values
         (    '01',         :ls_VSRC,       :ls_DEPT,        :ls_VSRNO,       :ls_ITNO,            :ls_ADJDT,          :g_s_date,   
              :as_WSRNO,    :ld_DCOST,      :ls_DCURR,       :ls_DSHEET,      :ls_XCAUSE1,         :ld_ECOST,        :ls_ECURR,   
              :ls_ESHEET,   :ls_XCAUSE2,    :ls_XPAY,        :ls_EXTD,        :g_s_empno,          :g_s_date,       '',         
				   '',         :g_s_IPADDR,     :g_s_MACADDR,    :ls_STOPDT,      :ls_STOPDESC,  		:as_gubun,
				  :ls_pmul,		:ls_mul,			  :ls_cmul,	 		 :ld_pcost1,		:ld_pcost2,			   :ld_ingot,			:ls_sogubdt	,
				  :ls_pmul2,	:ls_mul2,		  :ls_cmul2,		 :ld_pcost3,		:ld_pcost4,
				  :ls_pxunit1,	:ls_pxunit2,     :ls_pbxunit1,    :ls_pbxunit2
				  
			)    using sqlca;
			
	if SQLCA.SQLCODE <> 0  OR SQLCA.SQLNROWS <= 0 then
		messagebox('확인','승인요청용 품목단가History정보(PUR104F) 등록중, 오류발생! 급히 연락바랍니다!  ~r~n' + string(sqlca.sqlerrtext) ,Exclamation!)
		as_msg = '승인요청용 품목단가History정보(PUR104F) 등록중, 오류발생! [오류코드: ' + string(sqlca.sqlerrtext) +' ]'
		return -1
	end if
	////MESSAGEBOX('SQLCOCE',STRING(SQLCA.SQLCODE))		  
	//
next

return 0


end function

