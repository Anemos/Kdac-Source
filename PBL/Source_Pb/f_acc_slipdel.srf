$PBExportHeader$f_acc_slipdel.srf
$PBExportComments$전표삭제
global type f_acc_slipdel from function_object
end type

forward prototypes
global function integer f_acc_slipdel (string ag_company, string ag_area, string ag_dt, decimal ag_slipno)
end prototypes

global function integer f_acc_slipdel (string ag_company, string ag_area, string ag_dt, decimal ag_slipno);// return value 0 -> 기전표삭제후 재작업  1 -> 삭제완료,   2->삭제불가(시스템연락)     
// argument   지역 ('1'대구 '2'서울) , 전표일자, 전표번호
string  l_s_decision, l_s_dt
dec     l_n_rcnt
	  
// 전표update여부 check 	  
select count(*) into :l_n_rcnt	 
from   "PBACC"."ACC100"
where  "PBACC"."ACC100"."COMLTD "  = :ag_company and 
       "PBACC"."ACC100"."SLAREA"   = :ag_area    and
		 "PBACC"."ACC100"."SLACDATE" = :ag_dt      and
		 "PBACC"."ACC100"."SLSLIPNO" = :ag_slipno  and
		 "PBACC"."ACC100"."SLDECISION" = '*' using sqlca;
if isnull(l_n_rcnt) then
	l_n_rcnt = 0
end if
if l_n_rcnt > 0 then
	return 2
end if
	  
// 전표삭제 	  
delete from "PBACC"."ACC100"
where  "PBACC"."ACC100"."COMLTD"   = :g_s_company and
       "PBACC"."ACC100"."SLAREA"   = :g_s_wkcd    and
		 "PBACC"."ACC100"."SLACDATE" = :ag_dt       and
		 "PBACC"."ACC100"."SLSLIPNO" = :ag_slipno   using sqlca;
if sqlca.sqlcode = 0 then
   commit using sqlca;
   return 1
else
   rollback using sqlca;
	return 2
end if 
end function

