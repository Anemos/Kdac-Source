$PBExportHeader$f_wip002_crud_logic.srf
$PBExportComments$[이월재공]자재-재공 데이타 인터페이스
global type f_wip002_crud_logic from function_object
end type

forward prototypes
global function integer f_wip002_crud_logic (ref string ag_message, string ag_check, string ag_gubun, string ag_todate, datawindow ag_dw, transaction ag_transaction)
end prototypes

global function integer f_wip002_crud_logic (ref string ag_message, string ag_check, string ag_gubun, string ag_todate, datawindow ag_dw, transaction ag_transaction);//*********************************************************************
//* Function Description : 재공 자재 이월후 인터페이스
//* ag_check      :  'C' = 에러체크, 'A' = 적용
//* ag_gubun 		:  'B' = 소급, 'F' = 이월, 'D' = 삭제
//* ag_todate 		: 소급적용일자
//* ag_dw 	      : INV401 데이타
//* ag_message	   : 에러메시지
//* Return '0' : 성공, '-1' : 실패
//*********************************************************************

string ls_cmcd, ls_sliptype, ls_srno, ls_srno1, ls_srno2
string ls_plant, ls_dvsn, ls_itno, ls_vsrno, ls_cls, ls_srce, ls_dept,ls_nuse,ls_gubun
string ls_xuse, ls_rtngub, ls_slno, ls_tdte4, ls_adjdate, ls_nextdt, ls_stscd, ls_wzcttp
dec{1} lc_tqty4
dec{4} lc_convqty
dec{0} lc_tramt
integer li_index, li_rtn

//***AS400 접속여부 체크, 저녁8-아침8 인터페이스 저장
//li_index = f_ipis_server_get_transaction(ag_str_ipis, 'X', 'Z')
//
//If li_index = -1 then
//	ag_message = "A/S400, INT 서버 연결에 실패하였습니다."
//	return -1
//End if
//
//lstr_ipis = ag_str_ipis[li_index]

if ag_dw.rowcount() <> 1 then
	ag_message = "처리해야될 데이타가 데이타윈도우에 존재하지 않습니다."
	return -1
end if
ls_cmcd = ag_dw.getitemstring(1,"comltd")
ls_sliptype = ag_dw.getitemstring(1,"sliptype")
ls_srno = ag_dw.getitemstring(1,"srno")
ls_srno1 = ag_dw.getitemstring(1,"srno1")
ls_srno2 = ag_dw.getitemstring(1,"srno2")
ls_plant = ag_dw.getitemstring(1,"xplant")
ls_dvsn = ag_dw.getitemstring(1,"div")
ls_itno = ag_dw.getitemstring(1,"itno")
ls_dept = ag_dw.getitemstring(1,"dept")
ls_vsrno = ag_dw.getitemstring(1,"vsrno")
ls_cls = ag_dw.getitemstring(1,"cls")
ls_srce = ag_dw.getitemstring(1,"srce")
ls_xuse = ag_dw.getitemstring(1,"xuse")
ls_rtngub = ag_dw.getitemstring(1,"rtngub")
ls_slno = ag_dw.getitemstring(1,"slno")
ls_tdte4 = ag_dw.getitemstring(1,"tdte4")
lc_tqty4 = ag_dw.getitemnumber(1,"tqty4")
lc_tramt = ag_dw.getitemnumber(1,"tramt")

if ag_check = 'C' then
	return 0
end if

if ls_xuse = '06' then //용도가 기타인 경우
	return 0
end if

SELECT cls,srce,convqty INTO :ls_cls, :ls_srce, :lc_convqty
FROM PBINV.INV101
WHERE comltd = :ls_cmcd AND xplant = :ls_plant AND
		div = :ls_dvsn AND itno = :ls_itno
using ag_transaction;

if ls_cls = '10' or ls_cls = '30' or ls_cls = '40' or ls_cls = '50' then
	//pass
else
	return 0
end if

if mid(ls_tdte4,1,6) = mid(ag_todate,1,6) then
	if ag_gubun = 'B' or ag_gubun = 'F' then
		ls_gubun = 'U'
	else
		ls_gubun = ag_gubun
	end if
	// 당월중간마감 수정 또는 삭제
	return f_wip001_crud_logic(ls_gubun,ls_cmcd,ls_sliptype,ls_srno,ls_srno1,ls_srno2,ls_plant,ls_dvsn,ls_itno, &
				ls_cls,ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,lc_tqty4,lc_tqty4,ls_tdte4,ag_todate, &
				lc_tramt,ag_transaction,ag_message)
end if

ls_wzcttp = 'WIP' + ls_dvsn + '080'
SELECT wzeddt,wzstscd INTO :ls_adjdate, :ls_stscd
FROM PBWIP.WIP090
WHERE wzcmcd = :ls_cmcd AND wzplant = :ls_plant AND wzcttp = :ls_wzcttp
using ag_transaction;

if sqlca.sqlcode <> 0 or f_dateedit(ls_adjdate + '01') = space(8) then
	ag_message = "재공 : 재공마감일자를 가져올수 없습니다."
	return -1
end if
if ls_stscd = 'C' then
	ag_message = "재공 : 재공마감이 확정되어 소급작업을 할수 없습니다."
	return -1
end if

if (ag_gubun = 'B' or ag_gubun = 'D') and (mid(ag_todate,1,6) <> mid(ls_adjdate,1,6)) then
	ag_message = "재공 : 전표발생일자가 소급,삭제에 해당하지 않습니다."
	return -1
end if

if (ag_gubun = 'F') and (mid(ls_tdte4,1,6) <> mid(ls_adjdate,1,6)) then
	ag_message = "재공 : 전표발생일자가 이월에 해당하지 않습니다."
	return -1
end if

ls_nextdt = uf_wip_addmonth(ls_adjdate,1)
li_rtn = 0
Choose Case ag_gubun
	Case 'B','F' // 소급,이월
		choose case ls_sliptype
			case 'IS','IP','RS'
				if ls_xuse = '04' or ls_xuse = '07' then
					if ls_cls = '10' and ls_srce = '03' and ls_sliptype = 'RS' and ls_rtngub = '02' then
						return 0
					end if
					if ls_srce = '03' then
						li_rtn = f_wip002_use_update(ls_cmcd,ls_adjdate,ls_sliptype,ls_srno,ls_srno1,ls_srno2,ls_plant,ls_dvsn , &
								ls_slno, ls_itno, ls_xuse, ls_rtngub, ls_vsrno, ls_tdte4, ag_todate, lc_tqty4, lc_tqty4, ag_transaction, ag_message)
						if li_rtn <> 0 then return li_rtn
					end if
					li_rtn = f_wip002_input_update(ls_cmcd,ls_adjdate,ls_sliptype,ls_plant,ls_dvsn, ls_itno,ls_cls, &
						ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,ag_todate,lc_tqty4,lc_tramt,ag_transaction,ag_message)
				else
					if ls_srce = '03' then
						li_rtn = f_wip002_use_update(ls_cmcd,ls_adjdate,ls_sliptype,ls_srno,ls_srno1,ls_srno2,ls_plant,ls_dvsn , &
								ls_slno, ls_itno, ls_xuse, ls_rtngub, ls_vsrno, ls_tdte4, ag_todate, lc_tqty4, lc_tqty4, ag_transaction, ag_message)
						if li_rtn <> 0 then return li_rtn
					end if
					li_rtn = f_wip002_input_update(ls_cmcd,ls_adjdate,ls_sliptype,ls_plant,ls_dvsn, ls_itno,ls_cls, &
						ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,ag_todate,lc_tqty4,lc_tramt,ag_transaction,ag_message)
				end if
			case 'RM','SM'
				li_rtn = f_wip002_use_update(ls_cmcd,ls_adjdate,ls_sliptype,ls_srno,ls_srno1,ls_srno2,ls_plant,ls_dvsn , &
								ls_slno, ls_itno, ls_xuse, ls_rtngub, ls_vsrno, ls_tdte4, ag_todate, lc_tqty4, lc_tqty4, ag_transaction, ag_message)
			case 'SA','SR'
				if ls_cls = '10' and ( ls_srce = '01' or ls_srce = '02' ) then
					li_rtn = f_wip002_input_update(ls_cmcd,ls_adjdate,ls_sliptype,ls_plant,ls_dvsn, ls_itno,ls_cls, &
						ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,ag_todate,lc_tqty4,lc_tramt,ag_transaction,ag_message)
				else
					return 0
				end if
			case 'RP'
				if mid(ls_vsrno,1,1) <> 'D' then
					return 0
				end if
				if ls_cls = '50' then
					if ls_plant = 'D' and (ls_dvsn = 'A' or ls_dvsn = 'V') then
						//pass
					else
						if ls_plant = 'B' or ls_plant = 'K' then
							SELECT NUSE INTO :ls_nuse
							FROM PBINV.INV101
							WHERE Comltd = '01' AND XPLANT = :ls_plant AND 
									DIV = :ls_dvsn AND ITNO = :ls_itno
							using ag_transaction;
							
							if ls_nuse <> 'Y' then
								li_rtn = f_wip002_input_update(ls_cmcd,ls_adjdate,ls_sliptype,ls_plant,ls_dvsn, ls_itno,ls_cls, &
									ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,ag_todate,lc_tqty4,lc_tramt,ag_transaction,ag_message)
							end if
						else
							li_rtn = f_wip002_input_update(ls_cmcd,ls_adjdate,ls_sliptype,ls_plant,ls_dvsn, ls_itno,ls_cls, &
								ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,ag_todate,lc_tqty4,lc_tramt,ag_transaction,ag_message)
						end if
					end if
				end if
				if ls_srce = '04' then
					if li_rtn <> 0 then return li_rtn
					li_rtn = f_wip002_use_update(ls_cmcd,ls_adjdate,ls_sliptype,ls_srno,ls_srno1,ls_srno2,ls_plant,ls_dvsn , &
								ls_slno, ls_itno, ls_xuse, ls_rtngub, ls_vsrno, ls_tdte4, ag_todate, lc_tqty4, lc_tqty4, ag_transaction, ag_message)
				end if
			case else
				return 0
		end choose
	Case 'D'
		choose case ls_sliptype
			case 'IS','IP','RS'
				if ls_xuse = '04' or ls_xuse = '07' then
					if ls_cls = '10' and ls_srce = '03' and ls_sliptype = 'RS' and ls_rtngub = '02' then
						return 0
					end if
					if ls_srce = '03' then
						li_rtn = f_wip002_use_delete(ls_cmcd,ls_adjdate,ls_sliptype,ls_srno,ls_srno1,ls_srno2,ls_plant,ls_dvsn , &
								ls_slno, ls_itno, ls_xuse, ls_rtngub, ls_vsrno, ls_tdte4, ag_todate, lc_tqty4, lc_tqty4, ag_transaction, ag_message)
						if li_rtn <> 0 then return li_rtn
					end if
					li_rtn = f_wip002_input_delete(ls_cmcd,ls_adjdate,ls_sliptype,ls_plant,ls_dvsn, ls_itno,ls_cls, &
						ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,ag_todate,lc_tqty4,lc_tramt,ag_transaction,ag_message)
				else
					if ls_srce = '03' then
						li_rtn = f_wip002_use_delete(ls_cmcd,ls_adjdate,ls_sliptype,ls_srno,ls_srno1,ls_srno2,ls_plant,ls_dvsn , &
								ls_slno, ls_itno, ls_xuse, ls_rtngub, ls_vsrno, ls_tdte4, ag_todate, lc_tqty4, lc_tqty4, ag_transaction, ag_message)
						if li_rtn <> 0 then return li_rtn
					end if
					li_rtn = f_wip002_input_delete(ls_cmcd,ls_adjdate,ls_sliptype,ls_plant,ls_dvsn, ls_itno,ls_cls, &
						ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,ag_todate,lc_tqty4,lc_tramt,ag_transaction,ag_message)
				end if
			case 'RM','SM'
				li_rtn = f_wip002_use_delete(ls_cmcd,ls_adjdate,ls_sliptype,ls_srno,ls_srno1,ls_srno2,ls_plant,ls_dvsn , &
								ls_slno, ls_itno, ls_xuse, ls_rtngub, ls_vsrno, ls_tdte4, ag_todate, lc_tqty4, lc_tqty4, ag_transaction, ag_message)
			case 'SA','SR'
				if ls_cls = '10' and ( ls_srce = '01' or ls_srce = '02' ) then
					li_rtn = f_wip002_input_delete(ls_cmcd,ls_adjdate,ls_sliptype,ls_plant,ls_dvsn, ls_itno,ls_cls, &
						ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,ag_todate,lc_tqty4,lc_tramt,ag_transaction,ag_message)
				else
					return 0
				end if
			case 'RP'
				if mid(ls_vsrno,1,1) <> 'D' then
					return 0
				end if
				if ls_cls = '50' then
					if ls_plant = 'D' and (ls_dvsn = 'A' or ls_dvsn = 'V') then
						//pass
					else
						if ls_plant = 'B' or ls_plant = 'K' then
							SELECT NUSE INTO :ls_nuse
							FROM PBINV.INV101
							WHERE Comltd = '01' AND XPLANT = :ls_plant AND 
									DIV = :ls_dvsn AND ITNO = :ls_itno
							using ag_transaction;
							
							if ls_nuse <> 'Y' then
								li_rtn = f_wip002_input_delete(ls_cmcd,ls_adjdate,ls_sliptype,ls_plant,ls_dvsn, ls_itno,ls_cls, &
									ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,ag_todate,lc_tqty4,lc_tramt,ag_transaction,ag_message)
							end if
						else
							li_rtn = f_wip002_input_delete(ls_cmcd,ls_adjdate,ls_sliptype,ls_plant,ls_dvsn, ls_itno,ls_cls, &
								ls_srce,lc_convqty,ls_xuse,ls_rtngub,ls_dept,ls_vsrno,ag_todate,lc_tqty4,lc_tramt,ag_transaction,ag_message)
						end if
					end if
				end if
				if ls_srce = '04' then
					if li_rtn <> 0 then return li_rtn
					li_rtn = f_wip002_use_delete(ls_cmcd,ls_adjdate,ls_sliptype,ls_srno,ls_srno1,ls_srno2,ls_plant,ls_dvsn , &
								ls_slno, ls_itno, ls_xuse, ls_rtngub, ls_vsrno, ls_tdte4, ag_todate, lc_tqty4, lc_tqty4, ag_transaction, ag_message)
				end if
			case else
				return 0
		end choose
End Choose

return li_rtn
end function

