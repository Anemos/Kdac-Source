$PBExportHeader$f_pur041_setpur102f.srf
$PBExportComments$결재용 업체상세(구분,dw)
global type f_pur041_setpur102f from function_object
end type

forward prototypes
global function integer f_pur041_setpur102f (string as_gubun, datawindow adw_1, ref string as_msg)
end prototypes

global function integer f_pur041_setpur102f (string as_gubun, datawindow adw_1, ref string as_msg);////구분별로 업체상세정보 pur102를 pur102f에 기록처리
long ll_row, ll_rcnt
string ls_wsrno
string ls_dept, ls_vsrno, ls_xpay1, ls_xpay2, ls_jscd, ls_jscd1, ls_vzero, ls_curr, ls_royalty
string ls_email, ls_hpage, ls_gris, ls_grdt, ls_grqc, ls_grct, ls_grtl, ls_stdt, ls_xkind
string ls_grup1, ls_scal, ls_plac, ls_vdate, ls_vtype, ls_vdl, ls_prtcd, ls_inside, ls_crcd, ls_vancd
string ls_kbcd, ls_bank, ls_mitem, ls_xplan1,  ls_xplan2, ls_sect1, ls_xstop, ls_extd
dec {0} ld_shlt, ld_damt, ld_man, ld_vsamt, ld_vbent, ld_vempr, ld_vndno, ld_depd, ld_rrat, ld_itcnt
dec {2} ld_vdrat
//  
//  
//

for ll_row = 1 to adw_1.rowcount()         
//	ls_gubun = adw_1.object.gubun[ll_row]  
	ls_DEPT = adw_1.object.dept[ll_row]  
	ls_VSRNO   = adw_1.object.vsrno[ll_row]
//	ls_CHGDT   = adw_1.object.chgdt[ll_row]
	ls_XPAY1   = adw_1.object.xpay1[ll_row]
	ls_XPAY2   = adw_1.object.xpay2[ll_row]
	ls_JSCD    = adw_1.object.jscd[ll_row]
	ls_JSCD1   = adw_1.object.jscd1[ll_row]
	ls_VZERO   = adw_1.object.vzero[ll_row]
	ld_VDRAT   = adw_1.object.vdrat[ll_row]
	ls_CURR   = adw_1.object.curr[ll_row]
	ls_ROYALTY   = adw_1.object.royalty[ll_row]
	ld_SHLT   = adw_1.object.shlt[ll_row]
	ls_EMAIL   = adw_1.object.email[ll_row]
	ls_HPAGE   = adw_1.object.hpage[ll_row]
	ls_GRIS   = adw_1.object.gris[ll_row]
	ls_GRDT   = adw_1.object.grdt[ll_row]
	ls_GRQC   = adw_1.object.grqc[ll_row]
	ls_GRCT   = adw_1.object.grct[ll_row]
	ls_GRTL   = adw_1.object.grtl[ll_row]
	ls_STDT   = adw_1.object.stdt[ll_row]
	ld_DAMT   = adw_1.object.damt[ll_row]
	ld_MAN   = adw_1.object.man[ll_row]
	ls_XKIND   = adw_1.object.xkind[ll_row]
	ls_GRUP1   = adw_1.object.grup1[ll_row]
	ls_SCAL   = adw_1.object.scal[ll_row]
	ls_PLAC   = adw_1.object.plac[ll_row]
	ld_VSAMT   = adw_1.object.vsamt[ll_row]
	ld_VBENT   = adw_1.object.vbent[ll_row]
	ld_VEMPR   = adw_1.object.vempr[ll_row]
	ls_VDATE   = adw_1.object.vdate[ll_row]
	ls_VTYPE   = adw_1.object.vtype[ll_row]
	ls_VDL   = adw_1.object.vdl[ll_row]
	ls_PRTCD   = adw_1.object.prtcd[ll_row]
	ls_INSIDE   = adw_1.object.inside[ll_row]
	ls_CRCD   = adw_1.object.crcd[ll_row]
	ls_VANCD   = adw_1.object.vancd[ll_row]
	ls_KBCD   = adw_1.object.kbcd[ll_row]
	ld_VNDNO   = adw_1.object.vndno[ll_row]
	ls_BANK   = adw_1.object.bank[ll_row]
	ld_DEPD   = adw_1.object.depd[ll_row]
	ld_RRAT   = adw_1.object.rrat[ll_row]
	ls_MITEM   = adw_1.object.mitem[ll_row]
	ld_ITCNT   = adw_1.object.itcnt[ll_row]
	ls_XPLAN1   = adw_1.object.xplan1[ll_row]
	ls_XPLAN2   = adw_1.object.xplan2[ll_row]
	ls_SECT1   = adw_1.object.sect1[ll_row]
	ls_XSTOP   = adw_1.object.xstop[ll_row]
	ls_EXTD   = adw_1.object.extd[ll_row]
	
	select coalesce(max(wsrno),'00000')
	into :ls_wsrno
	from pbpur.pur101f
	where comltd = '01'
	and  vsrno = :ls_vsrno
	and  chgdt = :g_s_date;
	//전산시리얼 pur101f 맞춤.
	//ls_wsrno = string(long(ls_wsrno) + 1,"00000")
	
	INSERT INTO PBpur.pur102f  
				(COMLTD,  DEPT,      VSRNO,    CHGDT,    wsrno, XPAY1,      XPAY2,     JSCD,     JSCD1,    VZERO,    VDRAT,   
				 CURR,    ROYALTY,   SHLT,     EMAIL,    HPAGE,      GRIS,      GRDT,     GRQC,     GRCT,     GRTL,   
				 STDT,    DAMT,      MAN,      XKIND,    GRUP1,      SCAL,      PLAC,     VSAMT,    VBENT,    VEMPR,   
				 VDATE,   VTYPE,     VDL,      PRTCD,    INSIDE,     CRCD,      VANCD,    KBCD,     VNDNO,    BANK,   
				 DEPD,    RRAT,      MITEM,    ITCNT,    XPLAN1,     XPLAN2,    SECT1,    XSTOP,    EXTD,     INPTID,   
				 INPTDT,  UPDTID,    UPDTDT,   IPADDR,   MACADDR,   
				 GUBUN,   STCD,      DESC)  
	  VALUES ('01',  :ls_DEPT,    :ls_VSRNO, :g_s_date, :ls_wsrno, :ls_XPAY1,   :ls_XPAY2,       :ls_JSCD,      :ls_JSCD1,    :ls_VZERO,   :ld_VDRAT,   
				 :ls_CURR,    :ls_ROYALTY,   :ld_SHLT,     :ls_EMAIL,    :ls_HPAGE,      :ls_GRIS,      :ls_GRDT,     :ls_GRQC,     :ls_GRCT,     :ls_GRTL,   
				 :ls_STDT,    :ld_DAMT,      :ld_MAN,      :ls_XKIND,    :ls_GRUP1,      :ls_SCAL,      :ls_PLAC,     :ld_VSAMT,    :ld_VBENT,    :ld_VEMPR,   
				 :ls_VDATE,   :ls_VTYPE,     :ls_VDL,      :ls_PRTCD,    :ls_INSIDE,     :ls_CRCD,      :ls_VANCD,    :ls_KBCD,     :ld_VNDNO,    :ls_BANK,   
				 :ld_DEPD,    :ld_RRAT,      :ls_MITEM,    :ld_ITCNT,    :ls_XPLAN1,     :ls_XPLAN2,    :ls_SECT1,    :ls_XSTOP,    :ls_EXTD,     :g_s_empno,   
				 :g_s_date,  '',    '',   :g_s_IPADDR,   :g_s_MACADDR,   
				 :as_GUBUN,   'A',   ''
				  ) USING SQLCA ;
	if SQLCA.SQLCODE <> 0  OR SQLCA.SQLNROWS <= 0 then
		messagebox('확인','승인요청용 업체상세정보 등록중, 오류발생! 급히 연락바랍니다!  ~r~n' + string(sqlca.sqlerrtext) ,Exclamation!)
		as_msg = '승인요청용 업체상세정보 등록중, 오류발생! [오류코드: ' + string(sqlca.sqlerrtext) +' ]'
		return -1
	end if
	////MESSAGEBOX('SQLCOCE',STRING(SQLCA.SQLCODE))		  
	//
next

return 0
end function

