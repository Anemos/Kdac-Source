$PBExportHeader$f_max_min_of_dw.srf
$PBExportComments$dw의 최대, 최소값을 구한다.
global type f_max_min_of_dw from function_object
end type

forward prototypes
global function boolean f_max_min_of_dw (datawindow adw_1, ref double adb_max, ref double adb_min)
end prototypes

global function boolean f_max_min_of_dw (datawindow adw_1, ref double adb_max, ref double adb_min);///////////////////////////////////////////////////////////////////////////////
//
//  Function : f_max_min_of_dw
//
//   Purpose : 전체 datawindow의 column값중 
//					상수값중에서 maximum과 minimum 값을 구한다.
//					이 함수는 Datawindow의 값으로 그래프를 그릴때
//					Y축의 상한값과 하한값을 표시하고자 할때 주로 사용한다.
//					
// Arguments : 
//					adb_max: 각 data의 maximum
//					adb_min: 각 data의 minimum
//
//   Returns : false ; Error시
//					true  ; max,min값을 찾은 경우
//   Caveats : 
//
///////////////////////////////////////////////////////////////////////////////
INTEGER		li_row	
INTEGER		li_col					//Column의 수만큼 For-Next를 하기위한 temp var.
DOUBLE		ldb_return_max
DOUBLE		ldb_return_min
LONG			ll_rowcount				//전체 row수 
LONG			ll_columns				//전체 column object수 
STRING		ls_columns[]			//column object name array('column name' + '~n' + 'column type')
STRING		ls_columns_id[]		//column object id array('column name' + '~n' + 'column id')
STRING		ls_column				//column name
STRING		ls_type					//column type
STRING		ls_id						//column id
STRING		ls_temp				
STRING		ls_short_type			//column type중에서 'char(10)'같은 경우에 '(10)'부분을 
											//제거한 column type
BOOLEAN		lb_return = FALSE	

//Get RowCount
ll_rowcount = adw_1.RowCount()

//Data가 한나도 없는 datawindow라면 당연히 빠짐
IF ll_rowcount < 1 THEN RETURN FALSE

//Source Datawindow의 column name & column data type
ll_columns = f_dw_get_objects_attrib( adw_1, ls_columns, "column","*","coltype" )

//Source Datawindow의 column name & column ID
ll_columns = f_dw_get_objects_attrib( adw_1, ls_columns_id, "column","*","ID" )

FOR li_col = 1 TO ll_columns
	ls_column = f_get_token( ls_columns[li_col],"~n")
	ls_type = ls_columns[li_col]
	//Short Data Type
	IF Pos(ls_type,"(",1) > 0 THEN
		ls_short_type = Left( ls_type , Pos(ls_type,"(",1) - 1 )
	ELSE
		ls_short_type = ls_type
	END IF	

	CHOOSE CASE ls_short_type
			CASE "char","datetime","time"
				//상수가 아니므로 SKIP
			CASE "long","integer","real","dec","decimal","number"
				//비교
				IF lb_return = FALSE THEN
					//초기값을 설정하기 위하여 
					//맨처음 나온값을 Max,Min으로 설정한다
					lb_return = TRUE
					ldb_return_max = adw_1.GetItemNumber(1, ls_column)
					ldb_return_min = ldb_return_max
				END IF
				//전체 Row에 대해서 비교
				FOR li_row = 1 TO ll_rowcount
					//Max값 비교 
					ldb_return_max = Max( ldb_return_max, &
													adw_1.GetItemNumber(li_row, ls_column) )
					//Min값 비교
					ldb_return_min = Min( ldb_return_min, &
													adw_1.GetItemNumber(li_row, ls_column) )
								
				NEXT				
	END CHOOSE	
NEXT

//한번이라도 상수 column이 있었다면 
IF lb_return THEN
	//Max,Min설정
	adb_max = ldb_return_max
	adb_min = ldb_return_min
END IF

RETURN lb_return
end function

