$PBExportHeader$f_pur041_setpur105f.srf
$PBExportComments$결재용 장기품목단가(구분,dw)
global type f_pur041_setpur105f from function_object
end type

forward prototypes
global function integer f_pur041_setpur105f (string as_gubun, string as_wsrno, datawindow adw_1, ref string as_msg)
end prototypes

global function integer f_pur041_setpur105f (string as_gubun, string as_wsrno, datawindow adw_1, ref string as_msg);////구분별로 업체품목단가정보 pur105구조를 pur105f에 기록처리
long ll_row, ll_rcnt
string ls_wsrno, ls_desc

dec {2} ld_xcost, ld_wcost, ld_wacost, ld_xcost1, ld_wcost1, ld_wacost1
dec {2} ld_xcost2, ld_wcost2, ld_wacost2, ld_xcost3, ld_wcost3, ld_wacost3, ld_xcost4, ld_wcost4, ld_wacost4
STRING  ls_COMLTD, ls_DEPT,ls_VSRNO,ls_ITNO,ls_WDATE
string  ls_CHGDT,ls_ADJDT1
string  ls_ADJDT2,ls_CODE2,ls_ADJDT3,ls_CODE3
string  ls_ADJDT4,ls_CODE4,ls_UPDTDT,ls_EXTD

//2008.09.08
dec {2} ld_xcost5, ld_wcost5, ld_wacost5
String  ls_adjdt5, ls_code5, ls_codeall, ls_enddt
//2009.04.29
String ls_pmul, ls_mul, ls_cmul, ls_sogubdt
Dec{4} ld_pcost1, ld_pcost2, ld_ingot

//2009.06.18
String ls_pmul2, ls_mul2, ls_cmul2
Dec{4} ld_pcost3, ld_pcost4
//  
String ls_pxunit1, ls_pxunit2, ls_pbxunit1, ls_pbxunit2	//2009.07.09
ls_desc = as_msg
as_msg = ''

for ll_row = 1 to adw_1.rowcount() 
   ls_COMLTD =  adw_1.object.COMLTD[ll_row]
	ls_DEPT =  adw_1.object.DEPT[ll_row]
	ls_VSRNO =  adw_1.object.VSRNO[ll_row]
	ls_ITNO =  adw_1.object.ITNO[ll_row]
//	ls_WDATE =  adw_1.object.WDATE[ll_row]
//	ls_WSRNO =  adw_1.object.WSRNO[ll_row]
	ld_XCOST =  adw_1.object.XCOST[ll_row]
	ld_WCOST =  adw_1.object.WCOST[ll_row]
	ld_WACOST =  adw_1.object.WACOST[ll_row]
	ls_CHGDT =  adw_1.object.CHGDT[ll_row]
	ld_XCOST1 =  adw_1.object.XCOST1[ll_row]
	ld_WCOST1 =  adw_1.object.WCOST1[ll_row]
	ld_WACOST1 =  adw_1.object.WACOST1[ll_row]
	ls_ADJDT1 =  adw_1.object.ADJDT1[ll_row]
	ld_XCOST2 =  adw_1.object.XCOST2[ll_row]
	ld_WCOST2 =  adw_1.object.WCOST2[ll_row]
	ld_WACOST2 =  adw_1.object.WACOST2[ll_row]
	ls_ADJDT2 =  adw_1.object.ADJDT2[ll_row]
	ls_CODE2 =  adw_1.object.CODE2[ll_row]
	ld_XCOST3 =  adw_1.object.XCOST3[ll_row]
	ld_WCOST3 =  adw_1.object.WCOST3[ll_row]
	ld_WACOST3 =  adw_1.object.WACOST3[ll_row]
	ls_ADJDT3 =  adw_1.object.ADJDT3[ll_row]
	ls_CODE3 =  adw_1.object.CODE3[ll_row]
	ld_XCOST4 =  adw_1.object.XCOST4[ll_row]
	ld_WCOST4 =  adw_1.object.WCOST4[ll_row]
	ld_WACOST4 =  adw_1.object.WACOST4[ll_row]
	ls_ADJDT4 =  adw_1.object.ADJDT4[ll_row]
	ls_CODE4 =  adw_1.object.CODE4[ll_row]
	ls_UPDTDT =  adw_1.object.UPDTDT[ll_row]
	ls_EXTD   =  adw_1.object.EXTD[ll_row]
	
	//2008.09.08
	ld_XCOST5  =  adw_1.object.XCOST5[ll_row]
	ld_WCOST5  =  adw_1.object.WCOST5[ll_row]
	ld_WACOST5 =  adw_1.object.WACOST5[ll_row]
	ls_ADJDT5  =  adw_1.object.ADJDT5[ll_row]
	ls_CODE5   =  adw_1.object.CODE5[ll_row]
	
	ls_codeALL  =  adw_1.object.CODEALL[ll_row]
	ls_ENDDT    =  adw_1.object.ENDDT[ll_row]
	//2009.04.29
	ls_pmul  	=  adw_1.object.pmul[ll_row]
	ls_mul  		=  adw_1.object.mul[ll_row]
	ls_cmul  	=  adw_1.object.cmul[ll_row]
	ld_pcost1  	=  adw_1.object.pcost1[ll_row]
	ld_pcost2  	=  adw_1.object.pcost2[ll_row]
	ld_ingot  	=  adw_1.object.ingot[ll_row]
	ls_sogubdt  =  adw_1.object.sogubdt[ll_row]
	//end : 2009.04.29
	
	//2009.06.18
	ls_pmul2  	=  adw_1.object.pmul2[ll_row]
	ls_mul2  	=  adw_1.object.mul2[ll_row]
	ls_cmul2  	=  adw_1.object.cmul2[ll_row]
	ld_pcost3  	=  adw_1.object.pcost3[ll_row]
	ld_pcost4  	=  adw_1.object.pcost4[ll_row]
	//end : 2009.06.18
	
	//2009.07.09
	ls_pxunit1 	=  adw_1.object.pxunit1[ll_row]
	ls_pxunit2  =  adw_1.object.pxunit2[ll_row]
	ls_pbxunit1 =  adw_1.object.pbxunit1[ll_row]
	ls_pbxunit2 =  adw_1.object.pbxunit2[ll_row]
	//end : 2009.07.09
	
//	ls_INPTID =  adw_1.object.INPTID[ll_row]
//	ls_INPTDT =  adw_1.object.INPTDT[ll_row]
//	ls_UPDTID =  adw_1.object.UPDTID[ll_row]
//	ls_IPADDR =  adw_1.object.IPADDR[ll_row]
//	ls_MACADDR =  adw_1.object.MACADDR[ll_row]
//	ls_GUBUN =  adw_1.object.GUBUN[ll_row]
//	ls_STCD =  adw_1.object.STCD[ll_row]
//	ls_DESC =  adw_1.object.DESC[ll_row]
//	ls_CONDT =  adw_1.object.CONDT[ll_row]
 

	
//	select coalesce(max(wsrno),'00000')
//	into :ls_wsrno
//	from pbpur.pur105f
//	where comltd = '01'
//	and  dept  = :ls_dept
//	and  vsrno = :ls_vsrno
//	and  itno  = :ls_itno
//	and  wdate = :g_s_date;
//	//전산시리얼 pur103f에 맞춤.
//	ls_wsrno = string(long(ls_wsrno) + 1,'00000')
	  INSERT INTO PBPUR.PUR105F  
         ( COMLTD,         DEPT,                VSRNO,             ITNO,            WDATE,             WSRNO,            XCOST,   
         WCOST,            WACOST,              CHGDT,             XCOST1,          WCOST1,            WACOST1,   
         ADJDT1,            XCOST2,             WCOST2,            WACOST2,         ADJDT2,            CODE2,   
         XCOST3,            WCOST3,             WACOST3,           ADJDT3,          CODE3,             XCOST4,   
         WCOST4 ,           WACOST4,            ADJDT4,            CODE4,           UPDTDT,            EXTD,   
         INPTID,            INPTDT,             UPDTID,            IPADDR,          MACADDR,           GUBUN,          
			STCD,              DESC,               CONDT  ,
			XCOST5,            WCOST5,             WACOST5,           ADJDT5,          CODE5,				 CODEALL,			ENDDT,
			
			PMUL,					 MUL,					   CMUL,					 PCOST1,				PCOST2,				 INGOT,				SOGUBDT,
			PMUL2,				 MUL2,					CMUL2,				 PCOST3,				PCOST4,
			PXUNIT1,				 PXUNIT2,		  		PBXUNIT1,			 PBXUNIT2
			)  
     values
          ( :ls_COMLTD,       :ls_DEPT,         :ls_VSRNO,         :ls_ITNO,        :g_s_date,         :as_WSRNO,        :ld_XCOST,
            :ld_WCOST,       :ld_WACOST,       :ls_CHGDT,         :ld_XCOST1,       :ld_WCOST1,        :ld_WACOST1,   
				:ls_ADJDT1,       :ld_XCOST2,  		:ld_WCOST2,			:ld_WACOST2,		:ls_ADJDT2,			 :ls_CODE2,
				:ld_XCOST3,			:ld_WCOST3,			:ld_WACOST3,		:ls_ADJDT3,			:ls_CODE3,			 :ld_XCOST4,
				:ld_WCOST4,			:ld_WACOST4,		:ls_ADJDT4,			:ls_CODE4,			'',			      :ls_EXTD,
				:g_s_empno,     :g_s_date,              '',           :g_s_IPADDR,     :g_s_MACADDR,      :as_GUBUN,   
				 'A',           :ls_desc,   				 '' ,
				:ld_XCOST5,			:ld_WCOST5,			:ld_WACOST5,		:ls_ADJDT5,			:ls_CODE5,			:ls_CODEALL,      :ls_ENDDT,
				
				:ls_pmul,			:ls_mul,				:ls_cmul,			:ld_pcost1,			:ld_pcost2,			:ld_ingot,			:ls_sogubdt,
				:ls_pmul2,			:ls_mul2,			:ls_cmul2,			:ld_pcost3,			:ld_pcost4,
				:ls_pxunit1,		:ls_pxunit2,  		:ls_pbxunit1, 		:ls_pbxunit2
				
			 )  using sqlca;
	if SQLCA.SQLCODE <> 0  OR SQLCA.SQLNROWS <= 0 then
		messagebox('확인','승인요청용 장기품목단가정보(PUR105F) 등록중, 오류발생! 급히 연락바랍니다!  ~r~n' + string(sqlca.sqlerrtext) ,Exclamation!)
		as_msg = '승인요청용 장기품목단가정보(PUR105F) 등록중, 오류발생! [오류코드: ' + string(sqlca.sqlerrtext) +' ]'
		return -1
	end if
	////MESSAGEBOX('SQLCODE',STRING(SQLCA.SQLCODE))		  
	//
next

return 0

end function

