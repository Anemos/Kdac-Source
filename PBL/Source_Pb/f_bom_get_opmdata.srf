$PBExportHeader$f_bom_get_opmdata.srf
global type f_bom_get_opmdata from function_object
end type

forward prototypes
global function s_opmdata_info f_bom_get_opmdata (string a_plant, string a_div, string a_itno, string a_date)
end prototypes

global function s_opmdata_info f_bom_get_opmdata (string a_plant, string a_div, string a_itno, string a_date);s_opmdata_info opmdata
string l_s_prunt, l_s_pcurr, l_s_ptod , l_s_purno, l_s_pvend, l_s_vndnm, l_s_srno,l_s_chkdate
dec{4} l_s_prutc 

a_itno = trim(a_itno)

 declare opmchk_cur cursor for 
  SELECT "PBPUR"."OPM102"."XCOST",   
         "PBPUR"."OPM102"."XUNIT1",   
         trim("PBPUR"."OPM102"."PURNO"),
         trim("PBPUR"."OPM102"."SRNO") ,
		 "PBPUR"."OPM102"."INPTDT"
    FROM "PBPUR"."OPM102"  
   WHERE ( "PBPUR"."OPM102"."COMLTD" = '01' ) AND  
         ( "PBPUR"."OPM102"."ITNO" = :a_itno ) AND  
         ( "PBPUR"."OPM102"."XPLANT" = :a_plant ) AND  
         ( "PBPUR"."OPM102"."DIV" = :a_div ) AND  
         ( SUBSTR("PBPUR"."OPM102"."INPTDT",1,8) <= :a_date )
	ORDER BY "PBPUR"."OPM102"."INPTDT" DESC
	using sqlca;
 open opmchk_cur ;
 fetch opmchk_cur into :l_s_prutc, :l_s_prunt , :l_s_purno, :l_s_srno, :l_s_chkdate ;
	if sqlca.sqlcode <> 0 then
		opmdata.it_prunt = ''
		opmdata.it_pcurr = ''
		opmdata.it_ptod  = ''
		opmdata.it_prutc = 0
      opmdata.it_pvend = ''
		opmdata.it_pvsrno = 'Error'
		close opmchk_cur ;
		return opmdata
	end if 
 close opmchk_cur ;
opmdata.it_prunt = l_s_prunt
opmdata.it_prutc = truncate(l_s_prutc,4)
l_s_purno = trim(l_s_purno)

  SELECT "PBPUR"."OPM101"."CURR",   
         "PBPUR"."OPM101"."TOD",   
         "PBPUR"."OPM101"."VSRNO1"  
    INTO :l_s_pcurr,   
         :l_s_ptod,   
         :l_s_pvend  
    FROM "PBPUR"."OPM101"  
   WHERE ( "PBPUR"."OPM101"."COMLTD" = '01' ) AND  
         ( "PBPUR"."OPM101"."PURNO" = :l_s_purno ) AND  
         ( "PBPUR"."OPM101"."SRNO" = :l_s_srno )   
			using sqlca;
			
opmdata.it_pvsrno = l_s_pvend
opmdata.it_pcurr = trim(l_s_pcurr)
//if (trim(l_s_ptod) >= 'D' and trim(l_s_ptod) <= 'Q') or (trim(l_s_ptod) >= 'S' and trim(l_s_ptod) <= 'U') & 
//   or trim(l_s_ptod) = 'Z' then
//	opmdata.it_ptod = 'F'
//end if
//if trim(l_s_ptod) = 'A' or trim(l_s_ptod) = 'B' or trim(l_s_ptod) = 'V' then
//	opmdata.it_ptod = 'E'
//end if
//if trim(l_s_ptod) = 'C' or trim(l_s_ptod) = 'R'  then
//	opmdata.it_ptod = 'C'
//end if
//if trim(l_s_ptod) = 'W' or trim(l_s_ptod) = 'X'  then
//	opmdata.it_ptod = 'N'
//end if
//if trim(l_s_ptod) = 'Y' then
//	opmdata.it_ptod = 'A'
//end if
opmdata.it_ptod   = 'F'
// DAC002 Table - cogubun = INV161값으로 변경  --> 2006년1월27일 수정
if trim(l_s_ptod) = '11' then
	opmdata.it_ptod = 'E'
end if
if trim(l_s_ptod) = '13' then
	opmdata.it_ptod = 'C'
end if
if trim(l_s_ptod) = '14' then
	opmdata.it_ptod = 'N'
end if
if trim(l_s_ptod) = '15' then
	opmdata.it_ptod = 'A'
end if
//

if f_spacechk(l_s_pvend) = -1 then
	opmdata.it_pvend = ''
	opmdata.it_pvsrno = 'Error'
else
	
	SELECT "PBPUR"."PUR101"."VNDNM"  
 		INTO :l_s_vndnm  
    	FROM "PBPUR"."PUR101"  
   	WHERE ( "PBPUR"."PUR101"."COMLTD" = '01' ) AND  
         	( "PBPUR"."PUR101"."VSRNO" = :l_s_pvend )   
				using sqlca;	
	opmdata.it_pvend = trim(l_s_vndnm)	
	
end if

return opmdata
end function

