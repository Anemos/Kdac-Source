$PBExportHeader$f_connection_sqlserver_any.srf
$PBExportComments$SQL Server Connection
global type f_connection_sqlserver_any from function_object
end type

forward prototypes
global function boolean f_connection_sqlserver_any (string as_plant, string as_div, transaction as_transaction)
end prototypes

global function boolean f_connection_sqlserver_any (string as_plant, string as_div, transaction as_transaction);string ls_area,ls_servername,ls_dbms,ls_database,ls_logid,ls_logpass,ls_dbparm,ls_serverid

CHOOSE CASE as_plant + as_div
	CASE 'DA'
			 ls_serverid = 'ELE'
	CASE 'DM','DS'
			ls_serverid	= 'MOR'
	CASE 'DH','DV'
			ls_serverid	= 'HVA'
	CASE 'JH','JM','JS'
			ls_serverid	= 'JIN'		
	CASE 'YY'
			ls_serverid	= 'YEO'		
	CASE 'BA','BM','BS','BH','BV','BY'
			ls_serverid	= 'BUP'		
	CASE 'KH','KM','KS','KY'
			ls_serverid	= 'KUN'					
END CHOOSE

select servername,serverdbms,serverdatabase,serverlogid,serverpassword,serverdbparm into
		:ls_servername,:ls_dbms,:ls_database,:ls_logid,:ls_logpass,:ls_dbparm from comm001
	where  serverid = :ls_serverid
using sqlpis ;
if sqlpis.sqlcode <> 0 then
	return false 
end if
as_transaction.ServerName 	= ls_servername
as_transaction.DBMS       	= ls_dbms
as_transaction.Database   	= ls_database
as_transaction.LogId      	= ls_logid
as_transaction.LogPass    	= ls_logpass
as_transaction.DBParm     	= ls_dbparm
as_transaction.Autocommit   	= True
disconnect using as_transaction;
connect using as_transaction;
if as_transaction.sqlcode <> 0 then
	return false
end if
Return true
end function

