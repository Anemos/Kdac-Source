$PBExportHeader$f_wip_save_auto.srf
global type f_wip_save_auto from function_object
end type

forward prototypes
global function integer f_wip_save_auto (datawindow dw_excel, string a_path)
end prototypes

global function integer f_wip_save_auto (datawindow dw_excel, string a_path);////////////////////////////////////////////////////////////////////////////
// * DataWindow를 엑셀파일로 저장 * ( Header(한글), Computed Field 포함 )
//
//																		
////////////////////////////////////////////////////////////////////////////

String ls_DocName, ls_ChgName
Int li_Rtn

ls_docName = a_path
li_Rtn = GetFileSaveName( "[Excel DownLoad]", ls_DocName, ls_ChgName, "xls", &
								  "Excel Files (*.xls), *.xls" )
If li_Rtn = 0 Then Return -1

SetPointer( HourGlass! )

String ls_Chg_DocName
ls_Chg_DocName = f_Replace_With( ls_DocName, ".xls", ".txt" )
li_Rtn = dw_Excel.SaveAsAscii( ls_Chg_DocName )
If li_Rtn = -1 Then
	MessageBox("에러", "Excel File 저장실패!", Exclamation!)
	Return -1
End If

OleObject	OLE

OLE = Create OleObject

li_Rtn = OLE.ConnectToNewObject( "excel.application" )

If li_Rtn <> 0 Then
	Destroy OLE
	FileDelete( ls_Chg_DocName )
	MessageBox("확인", "Excel Program이 설치되어있지 않습니다.", Exclamation!)
	Return -1
End If

SetPointer( HourGlass! )

OLE.WorkBooks.Open( ls_Chg_DocName )
OLE.WorkBooks(1).SaveAs( ls_DocName, -4143 )
If IsValid( OLE ) Then
	OLE.Application.Quit
	OLE.DisConnectObject( )
	Destroy OLE
	FileDelete( ls_Chg_DocName )
	MessageBox("확인", "Excel File 저장성공!")
	Return 1
Else	
	Destroy OLE
	FileDelete( ls_Chg_DocName )
	MessageBox("에러", "Excel File 저장실패!", Exclamation!)
	Return -1
End If
end function
