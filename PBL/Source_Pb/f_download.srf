$PBExportHeader$f_download.srf
$PBExportComments$자료 내려받기 진행
global type f_download from function_object
end type

forward prototypes
global subroutine f_download ()
end prototypes

global subroutine f_download ();/*------------------------------*/
long				ll_rc, ll_count, ll_rtn
long				ll_data_size
long				ll_down_count
/*------------------------------*/
string			ls_file_name[], ls_file_name_temp
long				ll_file_length[], ll_file_length_temp
blob				lblb_file_data[], lblb_temp
decimal			ld_file_ver[], ld_file_ver_temp
string			ls_file_client_ver
long				ll_file_length_total
/*------------------------------*/
string			ls_full_file_path
integer			li_fp
/*------------------------------*/
ulong rv ,i,j,li_loops,k,l,m,n
long	startTime,endtime,totaltime,lastpro=1
/*------------------------------*/
STRING			ls_Restart_Exe
/*------------------------------*/
string			ls_file_name_single
long				ll_file_length_single
blob				lblb_file_data_single
decimal			ld_file_single[]
/*------------------------------*/
long				ll_row_count, ll_cur_row
/*-------------------------------------------*/
datastore      ids_download_file

// 데이타를 가져오기 위하여 datastore 설정
ids_download_file = create datastore
ids_download_file.DataObject = 'ds_download_file'
ids_download_file.Settransobject(SQLPIS)
// 파일정보를 가져온다.
ll_row_count = ids_download_file.Retrieve(gs_appname + '%')

//ll_row_count = ids_download_file.RowCount()
if ll_row_count < 1 then
//	MessageBox("Help", "No File to Download. 0 rowcount" )
	destroy ids_download_file
	GoTo PROC_EXIT
//	return
End if

/////////////////////////////////////////////////////////////////////////////////
// 총 가져올 데이터의 파일이름과 크기, 갯수를 설정

ll_cur_row = 0
ll_down_count = 0
ll_file_length_total = 0

DO WHILE ll_cur_row < ll_row_count
	ll_cur_row ++
	ls_file_name_temp   = ids_download_file.GetItemString( ll_cur_row, 'filename')
	ls_file_name_temp   = Lower( Trim( ls_file_name_temp ))
	ld_file_ver_temp    = ids_download_file.GetItemNumber( ll_cur_row, 'fileversion')
	ll_file_length_temp = ids_download_file.GetItemNumber( ll_cur_row, 'filesize')
	/*------------------------------------------------------------------------------*/
	if IsNull( ls_file_name_temp ) 	then continue
	if IsNull( ld_file_ver_temp )		then continue
	if IsNull( ll_file_length_temp ) then continue	
	/*------------------------------------------------------------------------------*/
	ls_file_client_ver  = ProfileString(gs_IniFile, "DOWN_VERSION", ls_file_name_temp, "")
	if IsNull( ls_file_client_ver ) then ls_file_client_ver = ''
	/*------------------------------------------------------------------------------*/
	If Trim( String(ld_file_ver_temp, '##.000' ) ) <> Trim(ls_file_client_ver) Then
		ll_down_count ++
		ls_file_name[ll_down_count]	= ls_file_name_temp
		ll_file_length[ll_down_count]	= ll_file_length_temp
		ld_file_ver[ll_down_count]		= ld_file_ver_temp
		ll_file_length_total				+= ll_file_length_temp
	End If
LOOP

if ll_down_count < 1 then 
//	MessageBox("Help", "No File to download 0 down count")
	destroy ids_download_file
	GoTo PROC_EXIT
//	return
end if

///////////////////
open ( w_download )
///////////////////

// Display 윈도우 정보 설정
/*------------------------------------------------------------------------------*/
w_download.st_8.text  = string(ll_file_length_total, '###,##0') + ' Bytes'
w_download.st_9.text  = string(ll_down_count)	
w_download.st_13.text  = 'Downloading Files.... Please Wait..'
w_download.uo_PROGRESS.uf_set_position (0)
w_download.uo_total.uf_set_position (0)
/*------------------------------------------------------------------------------*/

// 파일을 생성하고 데이터를 복사한다.
FOR ll_count = 1 TO ll_down_count		
	ls_file_name_single		= ls_file_name[ll_count]
	ll_file_length_single	= ll_file_length[ll_count]
	/*------------------------------------------------------------------------------*/
	// 어플리케이션 서버로부터 파일정보를 가져온다.
	ll_rc = f_get_downfile( ls_file_name_single, lblb_file_data_single )
	
	if ll_rc = -1 then
		MessageBox("Error", "File download failed !")
		close(w_download)
		return
	end if
	/*------------------------------------------------------------------------------*/
	// 파일 생성을 위한 기초정보 출력
	w_download.st_13.text  =  ls_file_name_single
	w_download.st_15.text  =  string(ll_count) 
	w_download.st_14.text  =  string(ll_file_length_single, '###,##0') + ' Bytes'
	 
	// 그림 파일은 \bmp\ 에 카피 하자.
	//	 ls_full_file_path = gs_Cur_Dir + ls_file_name_single
	If Upper(Right(ls_file_name_single, 3)) = "BMP" Or Upper(Right(ls_file_name_single, 3)) = "GIF" Or &
					Upper(Right(ls_file_name_single, 3)) = "JPG" Or Upper(Right(ls_file_name_single, 3)) = "ICO" Or &
					Upper(Right(ls_file_name_single, 3)) = "CUR" Then
		ls_full_file_path = gs_Cur_Dir + "bmp\" + ls_file_name_single
	Else
		 ls_full_file_path = gs_Cur_Dir + ls_file_name_single
	End If

	IF  FileExists(ls_full_file_path) Then 
	  FileDelete(ls_full_file_path)
	End IF

	li_fp = FileOpen(ls_full_file_path ,streammode!,write!,shared!,append!)
	IF ll_file_length_single > 32765 THEN 
		IF MOD(ll_file_length_single,32765) = 0 THEN 
			li_loops = (ll_file_length_single / 32765)
		ELSE
			li_loops = (ll_file_length_single / 32765) + 1
		END IF
	ELSE
		li_loops = 1			
	END IF

	// 파일 생성 및 데이터 쓰기	
	FOR j = 1 TO li_loops
		StartTime = Cpu()
		IF j = li_loops THEN 
			lblb_temp = BlobMid(lblb_file_data_single, 1 + ((j - 1) * 32765))
			for l = ( j * 32765 / ll_file_length_single ) * 100 to 100
				w_download.uo_PROGRESS.uf_set_position (l)
				Show(w_download)
			next
		ELSE
			lblb_temp = BlobMid(lblb_file_data_single, 1 + ((j - 1) * 32765), 32765)
			for  m = (((j - 1) * 32765 / ll_file_length_single ) * 100) + 1 to &
				  (j * 32765 / ll_file_length_single) * 100
				w_download.uo_PROGRESS.uf_set_position (m)
				Show(w_download)
			next
		END IF

		ll_rtn = FileWrite(li_fp,lblb_temp)

		IF ll_rtn = -1 THEN 
			Messagebox("Error","File Copy Failed..~r~n~r~n" + &
									"Reboot your Systems" )
			Fileclose(li_fp)
			filedelete(ls_full_file_path)
			HALT CLOSE
			Exit
		END IF

		Endtime = Cpu()
		if j = 1 then 
			totaltime = (Endtime - StartTime) * (ll_file_length_total / 32765)
			w_download.st_11.text  = string (long(Ceiling(totaltime / 1000))) + ' Second' 
		end if
		w_download.st_16.text=string(long(Ceiling((Endtime - StartTime)*(ll_file_length_single/32765)/1000))) + ' Second'
	NEXT
	
	// 파일 생성 및 데이터 쓰기
	w_download.uo_PROGRESS.uf_set_position (100)
	for n = (lastpro / ll_file_length_total) * 100 to ((lastpro + ll_file_length_single) / ll_file_length_total) * 100
		w_download.uo_total.uf_set_position (n)
	next
	w_download.uo_PROGRESS.uf_set_position (0)
	lastpro = lastpro + ll_file_length_single
	Fileclose(li_fp)
	SetProfileString(gs_IniFile, 'DOWN_VERSION', ls_file_name_single, String(ld_file_ver[ll_count], '##.000' ) )	
NEXT

/*-------------------------------------------*/
destroy ids_download_file

////////////////////////
SetPointer(Arrow!)
////////////////////////
close(w_download)
/*-------------------------------------------*/

PROC_EXIT:

//ls_Restart_Exe = ProfileString(gs_cur_dir + gs_inifile, 'PARAMETER', 'MAIN_EXECUTE', '')
//ls_Restart_Exe = ProfileString(gs_inifile, 'PARAMETER', 'MAIN_EXECUTE', '')
If Upper(gs_appname) = 'MPMS_GATHER' Then
	ls_Restart_Exe = gs_appname + '.exe'
End If

If ls_Restart_Exe = '' Then
	MessageBox("Help", "Can not find System Files.~r~n~r~n Please restart your System.")
	return 
end if
	
//If Run(gs_Cur_Dir + ls_Restart_Exe) <> 1 Then
If Run(ls_Restart_Exe) <> 1 Then
	Beep(1)
//	If FileExists(gs_Cur_Dir + ls_Restart_Exe) = FALSE Then
//		MessageBox("Help", gs_Cur_Dir + ls_Restart_Exe + " can not be found!")
//		return
//	End if
	If FileExists(ls_Restart_Exe) = FALSE Then
		MessageBox("Help", ls_Restart_Exe + " can not be found!")
		return
	End if
End if

return
end subroutine
