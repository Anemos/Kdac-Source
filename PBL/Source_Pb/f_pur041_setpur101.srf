$PBExportHeader$f_pur041_setpur101.srf
$PBExportComments$결재용 업체기본정보(구분,dw)
global type f_pur041_setpur101 from function_object
end type

forward prototypes
global function integer f_pur041_setpur101 (string as_gubun, datawindow adw_1, ref string as_msg)
end prototypes

global function integer f_pur041_setpur101 (string as_gubun, datawindow adw_1, ref string as_msg);////구분별로 업체상세정보 pur101f를 pur101에 기록처리
long ll_row, ll_rcnt
string       ls_VSRNO,      ls_VNDR,   ls_SCGUBUN,  ls_DIGUBUN,  ls_VNDNM,     ls_VNDNM1   
string       ls_ADDR,        ls_PRNM,       ls_NATN,    ls_TELN,   ls_TELN1,  ls_FAXN,     ls_TLXN,      ls_VPOST   
string       ls_TOD,         ls_ARR,        ls_XAREA,   ls_EXTD 
string    ls_gubun
//  
//2008.08.25
String ls_inptid, ls_inptdt, ls_updtid, ls_updtdt, ls_ipaddr, ls_macaddr

for ll_row = 1 to adw_1.rowcount() 
	ls_gubun   = adw_1.object.gubun[ll_row]
	ls_VSRNO   = adw_1.object.vsrno[ll_row]
//	ls_CHGDT   = adw_1.object.chgdt[ll_row]
	ls_vndr    = adw_1.object.vndr[ll_row]
	ls_scgubun  = adw_1.object.scgubun[ll_row]
	ls_digubun  = adw_1.object.digubun[ll_row]
	ls_vndnm    = adw_1.object.vndnm[ll_row]
	ls_vndnm1   = adw_1.object.vndnm1[ll_row]
	ls_addr   = adw_1.object.addr[ll_row]
	ls_prnm   = adw_1.object.prnm[ll_row]
	ls_natn   = adw_1.object.natn[ll_row]
	ls_teln   = adw_1.object.teln[ll_row]
	ls_teln1  = adw_1.object.teln1[ll_row]
	ls_faxn   = adw_1.object.faxn[ll_row]
	ls_tlxn   = adw_1.object.tlxn[ll_row]
	ls_vpost  = adw_1.object.vpost[ll_row]
	ls_tod   = adw_1.object.tod[ll_row]
	ls_arr   = adw_1.object.arr[ll_row]
	ls_xarea  = adw_1.object.xarea[ll_row]
	ls_extd   = adw_1.object.extd[ll_row]
	
	//2008.08.25 :승인요청후 팀장승인시 : 팀장의 사번이 아니라 승인요청자의 사번이 들어가야 한다.
	ls_inptid = adw_1.object.inptid[ll_row]
	ls_inptdt = adw_1.object.inptdt[ll_row]
	ls_updtid = adw_1.object.updtid[ll_row]
	ls_updtdt = adw_1.object.updtdt[ll_row]
	ls_ipaddr = adw_1.object.ipaddr[ll_row]
	ls_macaddr= adw_1.object.macaddr[ll_row]
	//end : 2008.08.25
	
	//2009.12.01
	String ls_cuitem, ls_cutype, ls_taxplan, ls_taxdept, ls_taxtel, ls_taxemail,  ls_taxcuitem, ls_taxcutype
	if ls_digubun = 'D' then	//국내
		//ls_cuitem   	= adw_1.object.cuitem[ll_row]		
		//ls_cutype   	= adw_1.object.cutype[ll_row]				
		ls_taxplan  	= adw_1.object.taxplan[ll_row]
		ls_taxdept		= adw_1.object.taxdept[ll_row]
		ls_taxtel		= adw_1.object.taxtel[ll_row]
		ls_taxemail		= adw_1.object.taxemail[ll_row]
		ls_taxcuitem	= adw_1.object.taxcuitem[ll_row]
		ls_taxcutype	= adw_1.object.taxcutype[ll_row]			
	end if
	//end: 2009.12.01	
	
	Choose case ls_gubun
		case 'C'
			INSERT INTO PBpur.pur101  
						(COMLTD,      VSRNO,      VNDR,            SCGUBUN,    DIGUBUN,  VNDNM,     VNDNM1,   
						 ADDR,        PRNM,       NATN,              TELN,        TELN1,      FAXN,     TLXN,      VPOST,   
						 TOD,         ARR,        XAREA,             EXTD,          INPTID,   INPTDT,   UPDTID,   UPDTDT,   
						 IPADDR,     MACADDR,
						 TAXPLAN,	  TAXDEPT,		TAXTEL,			TAXEMAIL,	TAXCUITEM,		TAXCUTYPE
						 )  
			  VALUES ('01',      :ls_VSRNO,   :ls_vndr,      :ls_scgubun,  :ls_digubun,  :ls_vndnm, :ls_vndnm1,
						 :ls_addr,    :ls_prnm,  :ls_natn,       :ls_teln,     :ls_teln1,    :ls_faxn,     :ls_tlxn,     :ls_Vpost,
						 :ls_tod,   :ls_arr,     :ls_xarea,      :ls_extd,		 :ls_inptid,   :g_s_date,    '',    '',   
						 :g_s_IPADDR,   :g_s_MACADDR,
						 :ls_taxplan,	:ls_taxdept,	:ls_taxtel,	:ls_taxemail,	:ls_taxcuitem,	:ls_taxcutype
						 
						 )
		  USING SQLCA ;				 
		//2008.08.25
		//				 :ls_tod,   :ls_arr,     :ls_xarea,      :ls_extd,		 :g_s_empno,   :g_s_date,    '',    '',   
		//				 :g_s_IPADDR,   :g_s_MACADDR)
		//				  USING SQLCA ;
			//IF sqlca.sqlcode <> 0 then
			if SQLCA.SQLCODE <> 0  OR SQLCA.SQLNROWS <= 0 then
				messagebox('확인','업체기본정보등록중, 오류발생! 급히 연락바랍니다!  ~r~n' + string(sqlca.sqlerrtext) ,Exclamation!)
				as_msg = '업체기본정보 등록중, 오류발생! [오류코드: ' + string(sqlca.sqlerrtext) +' ]'
				return -1
			end if
		case 'U'
			update PBpur.pur101  
				set 	 VNDR = :ls_vndr, VNDNM = :ls_vndnm,     VNDNM1= :ls_vndnm1,   
						 ADDR = :ls_addr,     PRNM= :ls_prnm,     NATN = :ls_natn,  TELN = :ls_teln,       TELN1 = :ls_teln1,      
						 FAXN = :ls_faxn,     TLXN = :ls_tlxn,      VPOST = :ls_vpost,   
						 TOD = :ls_tod,       ARR = :ls_arr,       XAREA = :ls_xarea,    
						 UPDTID = :g_s_empno,   UPDTDT = :g_s_datetime,   
						 IPADDR = :g_s_ipaddr,     MACADDR = :g_s_macaddr,
						 
						 TAXPLAN	= :ls_taxplan,	   	TAXDEPT   = :ls_taxdept ,		
						 TAXTEL  = :ls_taxtel,			TAXEMAIL  = :ls_taxemail,	
						 TAXCUITEM = :ls_taxcuitem,	TAXCUTYPE = :ls_taxcutype
			 where comltd = '01'
			 and   vsrno = :ls_vsrno;
			//if sqlca.sqlcode <> 0 then
			if SQLCA.SQLCODE <> 0  OR SQLCA.SQLNROWS <= 0 then
				messagebox('확인','업체기본정보 수정중, 오류발생! 급히 연락바랍니다!  ~r~n' + string(sqlca.sqlerrtext) ,Exclamation!)
				as_msg = '업체기본정보 수정중, 오류발생! [오류코드: ' + string(sqlca.sqlerrtext) +' ]'
				return -1
			end if
		case 'D'
			 delete from pbpur.pur101
			 where comltd = '01'
			 and   vsrno = :ls_vsrno;
			 //if sqlca.sqlcode <> 0 then
			 if SQLCA.SQLCODE <> 0  OR SQLCA.SQLNROWS <= 0 then
				messagebox('확인','업체기본정보 삭제중, 오류발생! 급히 연락바랍니다!  ~r~n' + string(sqlca.sqlerrtext) ,Exclamation!)
				as_msg = '업체기본정보 삭제중, 오류발생! [오류코드: ' + string(sqlca.sqlerrtext) +' ]'
				return -1
			end if
	End choose
	////MESSAGEBOX('SQLCOCE',STRING(SQLCA.SQLCODE))		  
	//
next

return 0
end function

