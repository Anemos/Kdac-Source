$PBExportHeader$f_seq_beginqty_set.srf
$PBExportComments$기초재고 Setting
global type f_seq_beginqty_set from function_object
end type

forward prototypes
global subroutine f_seq_beginqty_set (string ps_areacode, string ps_divisioncode, string ps_date)
end prototypes

global subroutine f_seq_beginqty_set (string ps_areacode, string ps_divisioncode, string ps_date);f_connection_sqlserver(ps_areacode,'H')  // 강제적으로 서버 커넥션

datastore lds_seq
int i,ln_rowcount,ln_stockqty,ln_subulqty
string ls_areacode,ls_divisioncode,ls_itemcode,ls_partid
lds_seq = create datastore 
lds_Seq.dataobject = 'd_seq_begin_set'
lds_seq.Settransobject(sqlpis)
ln_rowcount = lds_seq.retrieve(ps_areacode,ps_divisioncode)
for i = 1 to ln_rowcount
	ls_areacode 		= lds_seq.object.areacode[i]
	ls_divisioncode 	= lds_seq.object.divisioncode[i]
	ls_partid	 		= lds_seq.object.partid[i]
	ls_itemcode 		= lds_seq.object.itemcode[i]
	ln_stockqty 		= lds_seq.object.stockqty[i]
	select isnull(sum(inqty) + sum(prodqty) - sum(shipqty),0) into :ln_subulqty from tseqtrans
		where areacode = :ls_areacode and divisioncode = :ls_divisioncode and itemcode = :ls_itemcode and
				partid   = :ls_partid and tracedate like :ps_date + '%' 
	using sqlpis ;
	
	update tseqinvhis
	set beginqty = :ln_stockqty
	where areacode = :ls_areacode and divisioncode = :ls_divisioncode and itemcode = :ls_itemcode and
			partid   = :ls_partid 	and applymonth = :ps_date
	using sqlpis ;
	if sqlpis.sqlnrows < 1 then
		insert into tseqinvhis
		values (:ps_date,:ls_areacode,:ls_divisioncode,:ls_itemcode,:ls_partid,:ln_stockqty,'ADMIN',getdate())
		using sqlpis ;
	end if
	
	update tseqinv
	set stockqty = :ln_stockqty - :ln_subulqty
	where areacode = :ls_areacode and divisioncode = :ls_divisioncode and itemcode = :ls_itemcode and
			partid   = :ls_partid 
	using sqlpis ;
	if sqlpis.sqlnrows < 1 then
		insert into tseqinv
		values (:ls_areacode,:ls_divisioncode,:ls_itemcode,:ls_partid,:ln_stockqty,'ADMIN',getdate())
		using sqlpis ;
	end if
next
destroy lds_seq


end subroutine

