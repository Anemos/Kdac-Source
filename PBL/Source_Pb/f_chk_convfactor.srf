$PBExportHeader$f_chk_convfactor.srf
$PBExportComments$단위전환팩터 체크
global type f_chk_convfactor from function_object
end type

forward prototypes
global function integer f_chk_convfactor (string as_xunit1, string as_xunit2, ref decimal ad_conv, ref string as_msg)
end prototypes

global function integer f_chk_convfactor (string as_xunit1, string as_xunit2, ref decimal ad_conv, ref string as_msg);////단위1과 2의 단위전환값을 체크,   
////***단위1 * 팩터 = 단위2     EX) 1 KG = 2.2047(팩터) * 1 LB(파운드)
long ll_row, ll_rcnt
if isnull(as_xunit1) or as_xunit1 = '' then
	as_msg = '단위1번 없음.'
	return -1
end if
if isnull(as_xunit2) or as_xunit2 = '' then
	as_msg = '단위2번 없음.'
	return -1
end if

////공통코드에 등록되야함
select count(*) into :ll_rcnt
from pbcommon.dac002
where comltd = '01'
and  cogubun = 'DAC070'
and  cocode = :as_xunit1;
if ll_rcnt = 0 then
	as_msg = '단위1번 공통코드에 등록안된 단위임.'
	return -1
end if
select count(*) into :ll_rcnt
from pbcommon.dac002
where comltd = '01'
and  cogubun = 'DAC070'
and  cocode = :as_xunit2;
if ll_rcnt = 0 then
	as_msg = '단위2번 공통코드에 등록안된 단위임.'
	return -1
end if

if as_xunit1 = as_xunit2 and ad_conv <> 1 then
	ad_conv = 1
	as_msg = '단위가 같으면 전환팩터는 1입니다.'
	return -1
end if

////공식단위 팩터값 고정
Choose case as_xunit1
	case 'LB'  //파운드
	   choose case as_xunit2
			case 'KG'
				if ad_conv <> 2.2047 then
					ad_conv = 2.2047
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if
			case 'GM'
				if ad_conv <> 0.0022 then
					ad_conv = 0.0022
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if
		end choose
	case 'OZ'   //온스
		 choose case as_xunit2
			case 'KG'
				if ad_conv <> 35.273 then
					ad_conv = 35.273
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if
		end choose
	case 'TN','MT'  //톤
		choose case as_xunit2
			case 'KG'
				if ad_conv <> 0.001 then
					ad_conv = 0.001
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if
		end choose
	case 'GM'
		choose case as_xunit2
			case 'KG'
				if ad_conv <> 1000 then
					ad_conv = 1000
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if
			case 'LB'
				if ad_conv <> 453.6 then
					ad_conv = 453.6
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if		
		end choose	
	case 'KG'
		 choose case as_xunit2
			case 'LB'
				if ad_conv <> 0.4536 then
					ad_conv = 0.4536
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if	
			case 'GM'
				if ad_conv <> 0.001 then
					ad_conv = 0.001
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if		
		end choose	
	case 'CC'  //부피 리터
		 choose case as_xunit2
			case 'LR'
				if ad_conv <> 1000 then
					ad_conv = 1000
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if	
		 end choose
	case 'LR'
		 choose case as_xunit2
			case 'CC'
				if ad_conv <> 0.001 then
					ad_conv = 0.001
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if	
			case 'GL'  //갤론
				if ad_conv <> 3.7853 then

					ad_conv = 3.7853
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if		
		end choose		
	case 'GL'
		 choose case as_xunit2
			case 'LR'
				if ad_conv <> 0.2642 then
					ad_conv = 0.2642
					as_msg = as_xunit1 + ' * 팩터 = ' + as_xunit2 + '일때 팩터값은: ' + string(ad_conv) + ' 입니다.'
					return -1
				end if	
		end choose			
End choose

if isnull(ad_conv) or ad_conv = 0 then
	as_msg = '단위전환팩터 값 없음.'
	return -1
end if

if as_xunit1 <> as_xunit2 and ad_conv = 1 then
	as_msg = '단위가 다르면 전환팩터는 1이 될 수 없습니다.'
	ad_conv = 0
	return -1
end if

return 1

end function

