$PBExportHeader$f_get_slno1.srf
$PBExportComments$이체의뢰전표번호부여(구분 + 년+월_serial)
global type f_get_slno1 from function_object
end type

forward prototypes
global function string f_get_slno1 (string ag_key, string ag_type)
end prototypes

global function string f_get_slno1 (string ag_key, string ag_type);string ls_year,ls_slno
long    li_ctlno 

SELECT "PBINV"."INV403"."XYEAR1", "PBINV"."INV403"."SRNO"  
    INTO :ls_year, :li_ctlno
FROM "PBINV"."INV403"  
WHERE ( "PBINV"."INV403"."COMLTD" = '01' ) AND  
		( "PBINV"."INV403"."CKEY" = :ag_key ) Using sqlca ;  
if sqlca.sqlcode = 0 then
  li_ctlno = li_ctlno + 1	
  UPDATE "PBINV"."INV403"  
  SET "XYEAR1" = :ls_year,   
		"SRNO"  = :li_ctlno  
  WHERE ( "PBINV"."INV403"."COMLTD" = '01' ) AND  
	 	  ( "PBINV"."INV403"."CKEY" = :ag_key ) Using sqlca;

  if sqlca.sqlcode <> 0 then
//	   rollback using sqlca;
  else
//	   commit using sqlca;
  end if
elseif sqlca.sqlcode = 100 Then   //data read invalid
		 ls_year = left(g_s_date,6)
		 li_ctlno = 1 
		
	 	 INSERT INTO "PBINV"."INV403"  
		  ( "COMLTD",   "CKEY",   "SRNO",   "JSCD",   "FROMDT",   "TODT",   "XYEAR",      "XYEAR1",   
			 "RPFL",     "ISFL",   "RMRT",   "EXDTC",  "VANCD",    "PGMID",  "XCOMMENT",   "EXTD",   
			 "INPTID",   "INPTDT",   "UPDTID",   "UPDTDT",   "IPADDR",   "MACADDR" )  
		 VALUES ( '01', :ag_key, :li_ctlno, ' ',     ' ',        ' ',      ' ',           :ls_year,   
			 	     ' ', ' ',      ' ',      ' ',      ' ',        ' ',     ' ',           ' ',   
		   :g_s_empno, :g_s_datetime, :g_s_empno, :g_s_datetime, :g_s_ipaddr, :g_s_macaddr ) Using sqlca ;
	
		 if sqlca.sqlcode <> 0 then
//		   rollback using sqlca;
		 else
//		   commit using sqlca;
		 end if
else
   messagebox("sql문장 오류","sql문장 오류")
	return '0'  
end if
ls_slno = ag_type + mid(ls_year,4,3) + string(li_ctlno,"00000")
return ls_slno
end function

