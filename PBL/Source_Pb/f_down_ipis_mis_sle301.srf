$PBExportHeader$f_down_ipis_mis_sle301.srf
global type f_down_ipis_mis_sle301 from function_object
end type

forward prototypes
global function integer f_down_ipis_mis_sle301 (ref string fs_message, datawindow fs_dw_sle302, datawindow fs_dw_sle301, datawindow fs_dw_sle305, any fs_transaction[])
end prototypes

global function integer f_down_ipis_mis_sle301 (ref string fs_message, datawindow fs_dw_sle302, datawindow fs_dw_sle301, datawindow fs_dw_sle305, any fs_transaction[]);long 			ln_rowcount,i,ln_shipqty,ln_status
string 			ls_areacode,ls_divisioncode,ls_shipdate,ls_max_shipsheetno,ls_seq,ls_srno
string			ls_custcode,ls_shipgubun,ls_shipsheetno,ls_checksrno,ls_return,ls_today,ls_time
datetime 		ld_nowtime
integer		li_index
str_ipis_server lstr_ipis 
 
if fs_dw_sle301.rowcount() < 1 then
	fs_message	=	'S/R Header 정보가 없습니다'
	return -1
end if 

li_index = f_ipis_server_get_transaction(fs_transaction[], fs_dw_sle301.object.xplant[1], fs_dw_sle301.object.div[1])	
if li_index = -1 then
	fs_message = "공장연결에 실패하였습니다."
	return -1
else
	lstr_ipis = fs_transaction[li_index]
end if

if	fs_dw_sle301.object.prtcd[1]	=	'2'	then  			// 확정시는 Insert.SLE301의 PRTCD = '2'일때	
	Select Top 1 GetDate() Into :ld_nowtime From sysusers Using lstr_ipis.t_sqlpis;
	ls_today		 	= mid(string(ld_nowtime,'YYYY.MM.DD HH:MM:SS'),1,10)
	ls_time		 	= mid(string(ld_nowtime,'YYYY.MM.DD HH:MM:SS'),12,5)
	
	datastore	dw_tsrorder
	
	dw_tsrorder	=	Create	datastore
	dw_tsrorder.dataobject		=	'd_tsrorder_direct_interface'
	dw_tsrorder.settransobject(lstr_ipis.t_sqlpis)
	dw_tsrorder.reset()
	
	ln_rowcount	=	0
	ln_rowcount	=	fs_dw_sle302.rowcount()
	for i = 1 to ln_rowcount
		dw_tsrorder.insertrow(0)
		/*
			Kit 자품번에 대한 csrno 정보는 SLE302 칼럼에 정보가 유지되지않기때문에 별도로 영업에서 생성해서 넘겨줘야함 --	fs_dw_sle302.object.psrno 
		*/
		if	f_spacechk(fs_dw_sle302.object.psrno[i]) = -1	then
			dw_tsrorder.object.SRNo[i] 			= 	trim(fs_dw_sle302.object.csrno[i]) + 'P00'
			dw_tsrorder.object.PCGubun[i]		= 	'P'
			dw_tsrorder.object.PSRNo[i] 			= 	trim(fs_dw_sle302.object.csrno[i]) + 'P00'
		else
			dw_tsrorder.object.SRNo[i] 			= 	trim(fs_dw_sle302.object.csrno[i]) + 'C00'
			dw_tsrorder.object.PCGubun[i]		= 	'C'
			dw_tsrorder.object.PSRNo[i] 			= 	trim(fs_dw_sle302.object.psrno[i]) + 'P00'			
		end if 	
		if   trim(fs_dw_sle302.object.kitcd[i]) 		<> 	'P' 	and	trim(fs_dw_sle302.object.kitcd[i])		<> 	'C'	then
			dw_tsrorder.object.KitGubun[i] 		= 	'N'
		else
			dw_tsrorder.object.KitGubun[i] 		= 	'Y'
		end if
		dw_tsrorder.object.SRAreaCode[i] 		= fs_dw_sle302.object.xplant[i]
		dw_tsrorder.object.SRDivisionCode[i] 	= fs_dw_sle302.object.div[i]
		dw_tsrorder.object.ShipGubun[i] 		= mid(fs_dw_sle302.object.srno[i],3,1)
		dw_tsrorder.object.SRYear[i] 			= mid(fs_dw_sle302.object.srno[i],4,1)
		choose case mid(fs_dw_sle302.object.srno[i],5,2)
				case '10'	
					dw_tsrorder.object.SRMonth[i]	= 'A'
				case '11'	 
					dw_tsrorder.object.SRMonth[i]	= 'B'
				case '12'	 
					dw_tsrorder.object.SRMonth[i]	= 'C'
				case	else 	
					dw_tsrorder.object.SRMonth[i]	= mid(fs_dw_sle302.object.srno[i],6,1)
		end choose
		dw_tsrorder.object.SRSerial[i] 			= mid(fs_dw_sle302.object.srno[i],7,3)
		dw_tsrorder.object.SRSplitCount[i] 		= mid(fs_dw_sle302.object.srno[i],10,2)
		dw_tsrorder.object.AreaCode[i] 			= fs_dw_sle302.object.xplant[i]
		dw_tsrorder.object.DivisionCode[i] 		= fs_dw_sle302.object.div[i]
		dw_tsrorder.object.ProductGroup[i] 		= mid(fs_dw_sle302.object.pdcd[i],1,2)
		dw_tsrorder.object.ModelGroup[i] 		= mid(fs_dw_sle302.object.pdcd[i],1,3)
		dw_tsrorder.object.ProductCode[i] 		= mid(fs_dw_sle302.object.pdcd[i],1,4)
		dw_tsrorder.object.ItemCode[i] 			= fs_dw_sle302.object.itno[i] 
		dw_tsrorder.object.CustCode[i] 			= fs_dw_sle302.object.custcd[i]
		dw_tsrorder.object.ApplyFrom[i] 			= mid(fs_dw_sle302.object.frdt[i], 1, 4) + '.' + mid(fs_dw_sle302.object.frdt[i], 5, 2) + '.' + mid(fs_dw_sle302.object.frdt[i], 7,2)
		choose case fs_dw_sle302.object.dktm[i]
				case ''	
					dw_tsrorder.object.ShipEditNo[i]	= 1
				case '0'	 
					dw_tsrorder.object.ShipEditNo[i]	= 1
				case	else 	
					dw_tsrorder.object.ShipEditNo[i]	= integer(fs_dw_sle302.object.dktm[i])
		end choose
		dw_tsrorder.object.ShipOrderQty[i] 		= fs_dw_sle302.object.srqty[i]
		dw_tsrorder.object.ShipRemainQty[i] 	= fs_dw_sle302.object.srqty[i] - fs_dw_sle302.object.saqty[i]
		if fs_dw_sle302.object.srqty[i] - fs_dw_sle302.object.saqty[i] > 0 then
			dw_tsrorder.object.ShipEndGubun[i] 		= 'N'
		else
			dw_tsrorder.object.ShipEndGubun[i] 		= 'Y'
		end if
		dw_tsrorder.object.SRCancelGubun[i] 	= 'N'
		dw_tsrorder.object.CustomerItemNo[i] 	= fs_dw_sle302.object.citno[i]
		dw_tsrorder.object.ShipUsage[i] 		= fs_dw_sle302.object.suse[i]
		dw_tsrorder.object.CheckSRNo[i] 		= fs_dw_sle302.object.srno[i]
		dw_tsrorder.object.stcd[i] 				= 'N'
		dw_tsrorder.object.orderno[i] 			= fs_dw_sle302.object.ordno[i]
		dw_tsrorder.object.LastEmp[i] 			= 'SYSTEM'
		dw_tsrorder.object.Extd[i] 				= fs_dw_sle302.object.extd[i]
		dw_tsrorder.object.luprc[i] 				= fs_dw_sle302.object.luprc[i]
		dw_tsrorder.object.Luamt[i] 				= fs_dw_sle302.object.luamt[i]
		dw_tsrorder.object.Shipdate[i] 			= ''
		dw_tsrorder.object.EPNO[i] 				= fs_dw_sle302.object.epno[i]
	next 
	dw_tsrorder.accepttext()
	if dw_tsrorder.update() <> 1 then
		fs_message	=	'S/R Detail 등록 오류  ' + '~r~n'	+  lstr_ipis.t_sqlpis.sqlerrtext
		f_ipis_transaction_errorlog('C','','f_down_ipis_mis_sle301',&
					lstr_ipis.t_sqlpis.sqlerrtext,'S/R Detail 등록 오류  ', g_s_empno, g_s_ipaddr, g_s_macaddr)
		return -1
	end if
	
	ln_rowcount	=	0
	ln_rowcount	=	fs_dw_sle301.rowcount()
	if ln_rowcount < 1 then
		fs_message	=	'S/R Header 정보가 없습니다'
		return -1
	end if
	
	datastore	dw_tsrheader
	
	dw_tsrheader	=	create datastore
	dw_tsrheader.dataobject		=	'd_tsrheader_direct_interface'
	dw_tsrheader.settransobject(lstr_ipis.t_sqlpis)
	dw_tsrheader.reset()
	
	for i = 1 to ln_rowcount
		dw_tsrheader.insertrow(0)
		dw_tsrheader.object.SRAreaCode[i] 		= fs_dw_sle301.object.xplant[i]
		dw_tsrheader.object.SRDivisionCode[i] 	= fs_dw_sle301.object.div[i]
		dw_tsrheader.object.ShipGubun[i] 			= mid(fs_dw_sle301.object.srno[i],3,1)
		dw_tsrheader.object.SRYear[i] 				= mid(fs_dw_sle301.object.srno[i],4,1)
		choose case mid(fs_dw_sle301.object.srno[i],5,2)
				case '10'	
					dw_tsrheader.object.SRMonth[i]	= 'A'
				case '11'	 
					dw_tsrheader.object.SRMonth[i]	= 'B'
				case '12'	 
					dw_tsrheader.object.SRMonth[i]	= 'C'
				case	else 	
					dw_tsrheader.object.SRMonth[i]	= mid(fs_dw_sle301.object.srno[i],6,1)
		end choose
		dw_tsrheader.object.SRSerial[i] 			= mid(fs_dw_sle301.object.srno[i],7,3)
		dw_tsrheader.object.SRSplitCount[i] 	= mid(fs_dw_sle301.object.srno[i],10,2)
		dw_tsrheader.object.ShipDate[i] 			= mid(fs_dw_sle301.object.dpdt[i],1,4) + '.' + 	mid(fs_dw_sle301.object.dpdt[i],5,2) + '.' + mid(fs_dw_sle301.object.dpdt[i],7,2)
		dw_tsrheader.object.SRConfirmDate[i] 	= mid(fs_dw_sle301.object.srdt[i],1,4) + '.' + 	mid(fs_dw_sle301.object.srdt[i],5,2) + '.' + mid(fs_dw_sle301.object.srdt[i],7,2)
		dw_tsrheader.object.InvoiceNo[i] 		= fs_dw_sle301.object.Invoice[i]
		dw_tsrheader.object.InvoiceDate[i] 		= mid(fs_dw_sle301.object.indt[i],1,4) + '.' + 	mid(fs_dw_sle301.object.indt[i],5,2) + '.' + mid(fs_dw_sle301.object.indt[i],7,2)
		dw_tsrheader.object.MasterLCNo[i] 		= fs_dw_sle301.object.Mlc[i]
		dw_tsrheader.object.MasterDate[i] 		= mid(fs_dw_sle301.object.mlcdt[i],1,4) + '.' + mid(fs_dw_sle301.object.mlcdt[i],5,2) + '.' + mid(fs_dw_sle301.object.mlcdt[i],7,2)
		dw_tsrheader.object.LocalLCNo[i] 		= fs_dw_sle301.object.LLC[i]
		dw_tsrheader.object.LocalLCDate[i] 	= mid(fs_dw_sle301.object.llcdt[i],1,4) + '.' + mid(fs_dw_sle301.object.llcdt[i],5,2) + '.' + mid(fs_dw_sle301.object.llcdt[i],7,2)
		dw_tsrheader.object.ELNo1[i] 			= fs_dw_sle301.object.ELNo1[i]
		dw_tsrheader.object.ELDate1[i] 			= mid(fs_dw_sle301.object.elno1dt[i],1,4) + '.' + mid(fs_dw_sle301.object.elno1dt[i],5,2) + '.' + mid(fs_dw_sle301.object.elno1dt[i],7,2)
		dw_tsrheader.object.ELNo2[i] 			= fs_dw_sle301.object.ELNo2[i]
		dw_tsrheader.object.ELDate2[i] 			= mid(fs_dw_sle301.object.elno2dt[i],1,4) + '.' + mid(fs_dw_sle301.object.elno2dt[i],5,2) + '.' + mid(fs_dw_sle301.object.elno2dt[i],7,2)
		dw_tsrheader.object.CostGubun[i] 		= fs_dw_sle301.object.Paycd[i]
		dw_tsrheader.object.CheckSRNo[i] 		= fs_dw_sle301.object.SRNo[i]
		dw_tsrheader.object.PRTCd[i] 			= 'N'
		dw_tsrheader.object.LastEmp[i] 			= 'SYSTEM'
		dw_tsrheader.object.seller[i] 				= fs_dw_sle301.object.seller[i]
		dw_tsrheader.object.consig[i] 			= fs_dw_sle301.object.consig[i]
		dw_tsrheader.object.buyer[i] 			= fs_dw_sle301.object.buyer[i]
		dw_tsrheader.object.trans[i] 				= fs_dw_sle301.object.trans[i]
		dw_tsrheader.object.trdl[i] 				= fs_dw_sle301.object.trdl[i]
		dw_tsrheader.object.dstn[i] 				= fs_dw_sle301.object.dstn[i]
		dw_tsrheader.object.dbsrno[i] 			= fs_dw_sle301.object.dbsrno[i]
		dw_tsrheader.object.inputdate[i] 		= ls_today
		dw_tsrheader.object.inputtime[i] 			= ls_time
	next
	dw_tsrheader.accepttext()
	if dw_tsrheader.update() <> 1 then
		fs_message	=	'S/R Header 등록 오류  ' + '~r~n'	+  lstr_ipis.t_sqlpis.sqlerrtext
		f_ipis_transaction_errorlog('C','','f_down_ipis_mis_sle301',&
					lstr_ipis.t_sqlpis.sqlerrtext,'S/R Header 등록 오류  ', g_s_empno, g_s_ipaddr, g_s_macaddr)
		return -1
	end if
	
	ln_rowcount	=	0
	ln_rowcount	=	fs_dw_sle305.rowcount()
	if ln_rowcount < 1 then
		return 0
	end if
	
	datastore dw_tsrcomment
	
	dw_tsrcomment	=	Create datastore
	dw_tsrcomment.dataobject	=	'd_tsrcomment_direct_interface'
	dw_tsrcomment.settransobject(lstr_ipis.t_sqlpis)
	dw_tsrcomment.reset()
	
	for i = 1 to ln_rowcount
		dw_tsrcomment.insertrow(0)
		dw_tsrcomment.object.Checksrno[i] 	= fs_dw_sle305.object.srno[i]
		dw_tsrcomment.object.Gubun[i] 			= fs_dw_sle305.object.gubun[i]
		dw_tsrcomment.object.SRComment[i] 	= fs_dw_sle305.object.comment[i]
		dw_tsrcomment.object.LASTEMP[i] 		= 'SYSTEM'
	next
	dw_tsrcomment.accepttext()
	if dw_tsrcomment.update() <> 1 then
		fs_message	=	'S/R Comment 등록 오류  ' + '~r~n'	+  lstr_ipis.t_sqlpis.sqlerrtext
		f_ipis_transaction_errorlog('C','','f_down_ipis_mis_sle301',&
					lstr_ipis.t_sqlpis.sqlerrtext,'S/R Comment 등록 오류  ', g_s_empno, g_s_ipaddr, g_s_macaddr)
		return -1
	end if
elseif 	fs_dw_sle301.object.prtcd[1]	=	'1'	then	// 확정취소시는 Delete.SLE301의 PRTCD = '1'일때
	ls_checksrno	=	trim(fs_dw_sle301.object.srno[1])
	select	count(*)	into	:ln_rowcount	from tloadplan
		where	srno	in	(	select	srno 	from tsrorder 	where	checksrno	=	:ls_checksrno	)
	using	lstr_ipis.t_sqlpis	;
	if	ln_rowcount	>	0	then
		fs_message	=	'해당 S/R 은 이미 상차계획을 입력하였습니다  ' + '~r~n'	+  lstr_ipis.t_sqlpis.sqlerrtext
		f_ipis_transaction_errorlog('D','','f_down_ipis_mis_sle301',&
					lstr_ipis.t_sqlpis.sqlerrtext,'해당 S/R 은 이미 상차계획을 입력하였습니다   ', g_s_empno, g_s_ipaddr, g_s_macaddr)
		return -1
	end if
	delete	from	tsrheader 	
		where	checksrno	=	:ls_checksrno
	using	lstr_ipis.t_sqlpis	;
	if	lstr_ipis.t_sqlpis.sqlnrows	<	1	then
		fs_message	=	'S/R Header	삭제 오류 ' + '~r~n'	+  lstr_ipis.t_sqlpis.sqlerrtext
		f_ipis_transaction_errorlog('D','','f_down_ipis_mis_sle301',&
					lstr_ipis.t_sqlpis.sqlerrtext,'S/R Header	삭제 오류   ', g_s_empno, g_s_ipaddr, g_s_macaddr)
		return -1
	end if
	delete	from	tsrorder 
		where	checksrno	=	:ls_checksrno
	using	lstr_ipis.t_sqlpis	;
	if	lstr_ipis.t_sqlpis.sqlnrows	<	1	then
		fs_message	=	'S/R Order	삭제 오류 ' + '~r~n'	+  lstr_ipis.t_sqlpis.sqlerrtext
		f_ipis_transaction_errorlog('D','','f_down_ipis_mis_sle301',&
					lstr_ipis.t_sqlpis.sqlerrtext,'S/R Order	삭제 오류   ', g_s_empno, g_s_ipaddr, g_s_macaddr)
		return -1
	end if
	delete	from	tsrcomment 	
		where	checksrno	=	:ls_checksrno
	using	lstr_ipis.t_sqlpis	;
	if	lstr_ipis.t_sqlpis.sqlcode	<>	0	then
		fs_message	=	'S/R Comment	삭제 오류 ' + '~r~n'	+  lstr_ipis.t_sqlpis.sqlerrtext
		f_ipis_transaction_errorlog('D','','f_down_ipis_mis_sle301',&
					lstr_ipis.t_sqlpis.sqlerrtext,'S/R Comment 삭제 오류   ', g_s_empno, g_s_ipaddr, g_s_macaddr)
		return -1	
	end if
end if
return 0
end function

