$PBExportHeader$f_inv_direct.srf
$PBExportComments$내자입고품 자동직반출처리
global type f_inv_direct from function_object
end type

forward prototypes
global function integer f_inv_direct (string as_xplant, string as_div, string as_itno, decimal ad_qty, string as_date, string as_vsrno)
end prototypes

global function integer f_inv_direct (string as_xplant, string as_div, string as_itno, decimal ad_qty, string as_date, string as_vsrno);//////////////////////////////////////////////////////////////////
//    직반출품 자동반출~
//   Input : 지역, 공장, 품번, 수량, 불출일
//
//   check! : 마감일, 현재고수량
//   이체입고된 품목을 자동으로 업체반출(유.무상) 처리..
//                                            by invmaster.
//////////////////////////////////////////////////////////////////

String ls_xplan, ls_mlan, ls_pdcd, ls_xunit, ls_spec, ls_xtype, ls_itnm, ls_srce, ls_cls, &
       ls_key, ls_key2, ls_srno, ls_srno1, ls_srno2, ls_costdiv, ls_kbcd, ls_slno, ls_rvno, &
		 ls_vsrno, ls_vndnm, ls_vndr, ls_gubun, ls_xuse, ls_Jscd, ls_message
Long   ll_ohamt, ll_outamt, ll_amt, ll_cnt
Dec{1} ld_outqty, ld_uqty, ld_rqty, ld_sqty
Dec{2} ld_cost
Dec{4} ld_convqty
Int li_retcnt
  
//if f_get_ctlchk(as_date,"") = -1 then 
//	return 1         // 마감일이후에는 작업을 할수 없습니다.
//end if
//
//************************************* itno, now_qty check Routine ***********************************************//

SELECT A."XPLAN", A."MLAN",   A."COSTAV", A."PDCD",  A."XUNIT",  B."SPEC",   B."XTYPE", B."ITNM", B."RVNO", 
		  A."OHAMT", A."OUTQTY", A."OUTAMT",A."OHUQTY", A."OHRQTY", A."OHSQTY", A."SRCE",A."CLS", A."COSTDIV", A."KBCD", A."CONVQTY"
	INTO :ls_xplan,  :ls_mlan,   :ld_cost,  :ls_pdcd, :ls_xunit, :ls_spec, :ls_xtype, :ls_itnm, :ls_rvno,
		  :ll_ohamt,  :ld_outqty, :ll_outamt,:ld_uqty, :ld_rqty, :ld_sqty, :ls_srce, :ls_cls, :ls_costdiv, :ls_kbcd, :ld_convqty
 FROM "PBINV"."INV101" A, "PBINV"."INV002" B
 WHERE A."COMLTD" = '01'     AND A."XPLANT" = :as_xplant AND A."DIV"      = :as_div AND 
		 A."ITNO" = :as_itno   AND A."ITNO"   = B."ITNO"   AND A."COMLTD"   = B."COMLTD"  using sqlca;
		 
If sqlca.sqlcode <> 0 then
	Return 2        //지역공장 품번 확인!!
End if

If ld_uqty < ad_qty then
	Return 3        //현재고량 check
End if 

SELECT "VSRNO", "GUBUN"
 INTO  :ls_vsrno, :ls_gubun
 FROM  "PBINV"."INV108"
WHERE "PBINV"."INV108"."COMLTD" = '01'     AND "PBINV"."INV108"."XPLANT" = :as_xplant AND
      "PBINV"."INV108"."DIV"    = :as_div  AND "PBINV"."INV108"."ITNO"   = :as_itno   AND
		"PBINV"."INV108"."STRDT" <= :as_date AND "PBINV"."INV108"."DIRCD"    = 'Y'       AND
		"PBINV"."INV108"."STOP"  <> 'S'      AND "PBINV"."INV108"."VSRNO"    = :as_vsrno using sqlca;

IF sqlca.sqlcode <> 0 then
	MESSAGEBOX("", SQLCA.SQLERRTEXT )
	Return -1        //사급업체관리가 에러...        
End if

If ls_gubun = 'Y' then
	ls_xuse = '07'
elseif ls_gubun ='N' then
	ls_xuse = '04'
else
	Return -2       //유무상관리 에러..
End if
 //
ls_vndnm = f_vdnm_pur(ls_vsrno, 'S','D')
ls_vndr  = f_vndr_pur(ls_vsrno, 'S','D')
	
ls_Jscd = f_Vndr_Jscd( 'D', ls_vsrno )

If f_Get_Ctlchk( as_date, ls_Jscd ) = -1 Then
	Return 1   //마감일이후에는 작업을 할수 없습니다.
End If 
 
 // 전산번호 부여
ls_key  = 'IS' + as_xplant + as_div + ls_cls + mid(g_s_date,4,3)
ls_srno = f_get_ctlno(ls_key)

ls_srno1 = as_xplant + as_div
ls_srno2 = ls_cls

// 전표번호 부여
//ls_key2 = f_get_invdept(as_xplant, as_div) + mid(g_s_date,4,3)
//
ls_key2 = as_xplant + as_div +'DR'+ mid(g_s_date,4,3)
ls_slno = f_get_slno(ls_key2)

If (ls_cls = '10' and ls_srce <> '05') or ls_cls = '20' or ls_cls = '24'  then
	If ld_uqty + ld_rqty + ld_sqty = ad_qty Then                             
    ll_amt = ll_ohamt                                                      
	Else                                                                           
	 ll_amt = Truncate(ld_cost * ad_qty, 0)                                
	End if
Else
   ll_amt = 0
End if
// 현재고(사용가수량) 계산
ld_uqty = ld_uqty - ad_qty 

// 현재고금액 계산 
ll_ohamt = ll_ohamt  - ll_amt

// 불출수량 계산
ld_outqty = ld_outqty + ad_qty

// 불출금액 계산
ll_outamt = ll_outamt + ll_amt
 
// 입고 trans 생성
insert into "PBINV"."INV401"    
		 ( "COMLTD",      "SLIPTYPE",    "SRNO",        "SRNO1",       "SRNO2",      "XPLANT",  
			"DIV",         "COSTDIV",     "SLNO",        "ITNO",        "RVNO",       "ITNM",   
			"SPEC",        "XTYPE",       "XUNIT",       "CLS",         "SRCE",       "PDCD",
			"XPLAN",       "MLAN",        "RQNO",        "NQC",         "KBCD",       "DUDT",       "PURNO",   
			"VSRNO",       "VNDR",        "VNDNM",       "XPAY",        "OTXCD",      "LCNO",
			"LCDT",        "DEPT",        "RTNGUB",      "XUSE",        "RSVSRNO",    "ORNO",   
			"MCHNO",       "EXFR",        "EXTO",        "RQDIV",       "BLNO",       "EXCH",
			"CURR",        "FOBAMT",      "TDTE1",       "TDTE2",       "TDTE3",      "TDTE4",
			"TDTE5",       "TDTE6",       "TQTY1",       "TQTY2",       "TQTY3",      "TQTY4",
			"XCOST",       "TRAMT",       "TSHSL",       "RTCOM",       "RTQTY",      "SSSRNO",
			"SSCOM",       "RFCD",        "CHKCD",       "TSAMT",       "TFILL",      "TCTTL",      "DSAG",
			"MAKER",       "PJTNO",       "INVSTCD",     "INVEST",      "EXTD",       "INPTID",     "INPTDT",
			"UPDTID",      "UPDTDT",      "IPADDR",      "MACADDR" )  
VALUES ( :g_s_company,   'IS',         :ls_srno,      :ls_srno1,     :ls_srno2,    :as_xplant, 
			:as_div,       :ls_costdiv,   :ls_slno,      :as_itno,      :ls_rvno,     :ls_itnm,
			:ls_spec,      :ls_xtype,     :ls_xunit,     :ls_cls,       :ls_srce,     :ls_pdcd, 
			:ls_xplan,     :ls_mlan,      ' ',           ' ',           :ls_kbcd,     ' ',            ' ',   
			:ls_vsrno,     :ls_vndr,      :ls_vndnm,     ' ',           ' ',          ' ',
			' ',           ' ',           ' ',           :ls_xuse,      ' ',          ' ',   
			' ',           ' ',           ' ',           ' ',           ' ',          0,
			' ',           0,             ' ',           ' ',           ' ',          :as_date,
			' ',           ' ',           0,             0,             0,            :ad_qty,
			:ld_cost,      :ll_amt,       ' ',           ' ',           0,            ' ',
			' ',           ' ',           ' ',           0,             ' ',          0,            ' ',
			' ',           ' ',           'U',           ' ',           'DIR',          :g_s_empno,  :g_s_date,
			:g_s_empno,    :g_s_datetime, :g_s_ipaddr,   :g_s_macaddr  )  using sqlca;

IF Sqlca.SqlCode = 0 THEN
	
		// 품목재고 DB Update
		 UPDATE "PBINV"."INV101" 
			 SET "OHUQTY" = :ld_uqty ,    "OHAMT"   = :ll_ohamt, 
				  "OUTQTY" = :ld_outqty,   "OUTAMT"  = :ll_outamt, 
				  "ILUDT"  = :g_s_date,
				  "UPDTID" = :g_s_empno,   "UPDTDT"  = :g_s_datetime,
				  "IPADDR" = :g_s_ipaddr,  "MACADDR" = :g_s_macaddr
		 WHERE "PBINV"."INV101"."COMLTD" = '01'    AND "PBINV"."INV101"."XPLANT" = :as_xplant AND
				 "PBINV"."INV101"."DIV"    = :as_div AND "PBINV"."INV101"."ITNO"   = :as_itno   Using sqlca;
				 
		IF Sqlca.SqlCode <> 0 THEN
			Return 4      // Balance update error
		End if
		
		INSERT INTO "PBINV"."INV302"  
         ( "COMLTD", "XPLANT",    "DIV",    "SLNO",       "VSRNO",       "XDATE",      "CARNO",   
           "RTNPRT",  "ITYPE",   "KBCD",    "MTYPE",      "COMREQPLN",   "COMREQDAT",   "COMREQTM",   
			  "COMPLN", "COMDAT",   "COMTM",   "DESREQPLN",   "DESREQDAT",   "DESREQTM",   "PRTPLN",   
			  "PRTDAT",  "PRTTM",   "DESPLN",   "DESDAT",     "DESTM",       "DESCD",       "STCD",
			  "EXTD",   "INPTID",   "INPTDT",   "UPDTID",   "UPDTDT",   "IPADDR",   "MACADDR" )  
  VALUES ( '01',   :as_xplant,     :as_div,  :ls_slno,     :ls_vsrno,      :as_date,      '직반출',
           'N',    'A',           ' ',        ' ',         ' ',          ' ',            ' ',
			  ' ',    ' ',           ' ',        ' ',         ' ',          ' ',            'D',
			  ' ',    ' ',           ' ',        ' ',         ' ',          ' ',            ' ',
			  ' ',  :g_s_empno,  :g_s_date, :g_s_empno,    :g_s_datetime, :g_s_ipaddr,   :g_s_macaddr) Using SQLCA;
			  
		IF Sqlca.SqlCode <> 0 THEN
			Return 5      // Balance update error
		End if	  
		
		// 재공 수불반영.
		f_wip_main_update('01','IS',ls_srno,ls_srno1,ls_srno2)
		
		// 재공생성로직
//		li_retcnt = f_wip001_crud_logic( 'C', '01', 'IS', ls_srno, ls_srno1, ls_srno2, as_xplant, as_div, &
//					as_itno, ls_cls, ls_srce, ld_convqty, ls_xuse, ' ', ' ', ls_vsrno, ad_qty, ad_qty, &
//					as_date, as_date, ll_amt, sqlca, ls_message )
		//if li_retcnt = -1 then return -1
		
				 
else
	RETURN 6           // Trans Insert error
end if

// Final Success
Return 0	
end function

