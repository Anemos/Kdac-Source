$PBExportHeader$f_pdm_getfromexcel.srf
$PBExportComments$해당 DataWindow로 Excel File IMPORT(UpLoad).
global type f_pdm_getfromexcel from function_object
end type

forward prototypes
global function integer f_pdm_getfromexcel (datawindow adw_target)
end prototypes

global function integer f_pdm_getfromexcel (datawindow adw_target);String ls_PathName, ls_FileName, ls_msg
Int li_Rtn

li_Rtn = GetFileOpenName( "[Excel UpLoad]", ls_PathName, ls_FileName, "xls", &
								  "Excel Files (*.xls), *.xls" )
If li_Rtn = 0 Then Return -1


SetPointer( HourGlass! )

adw_Target.Reset( )

OleObject	OLE_Excel

OLE_Excel = Create OleObject

li_Rtn = OLE_Excel.ConnectToObject( ls_PathName )
If li_Rtn <> 0 Then
	Destroy OLE_Excel
	choose case li_rtn
		case	-1  
			ls_msg = 'Invalid call: the argument is the Object property of a control'
		case -2  
			ls_msg = 'Class name not found'
		case -3  
			ls_msg = 'Object could not be created'
		case -4  
			ls_msg = 'Could not connect to object'
		case -5  
			ls_msg = "Can't connect to the currently active object"
		case -6  
			ls_msg = 'Filename is not valid'
		case -7  
			ls_msg = "File not found or file couldn't be opened"
		case -8  
			ls_msg = 'Load from file not supported by server'
		case -9  
			ls_msg = 'Other error'
		case -15  
			ls_msg = 'MTS is not loaded on this computer'
		case -16  
			ls_msg = "Invalid Call: this function not applicable to OLETxnObject"
	end choose
	MessageBox("확인", ls_msg, Exclamation!)
	Return -1
End If


SetPointer( HourGlass! )

OleObject	OLE_Sheet

OLE_Sheet = OLE_Excel.Application.WorkBooks(1).WorkSheets(1)

Long	Col = 1, Row = 1, ColCnt, RowCnt
string ls_coltype,ls_data

ColCnt = Long( adw_Target.Object.DataWindow.Column.Count )

SetPointer( HourGlass! )

Do While True
	
	Row = adw_Target.InsertRow( 0 )
		
	For Col = 1 To ColCnt
		//숫자와문자구분  // Excel Header 제외.
		ls_coltype  = adw_target.Describe("#" + String(col) + ".ColType")
       	ls_coltype  = Upper(LEFT(ls_coltype,3))
		if ls_coltype = 'NUM' or ls_coltype = 'DEC' or ls_coltype = 'LON' then
			ls_data = string(OLE_Sheet.Cells(Row + 1, Col).Value)
			if isnumber(ls_data) = false then
				messagebox('확인','행:' + string(row) + ' 열:' + string(col) + ' DataType이 맞지않습니다.',Exclamation!)
				li_rtn = -1
				exit
			end if
			adw_Target.Object.data[Row, Col] = dec(ls_data)
		else
			ls_data = string(OLE_Sheet.Cells(Row + 1, Col).Value)
			ls_data = trim(ls_data)
			adw_Target.Object.data[Row, Col] = ls_data
		end if
	Next

	If 	( IsNull( OLE_Sheet.Cells(Row + 2, 1).Value ) or trim(string(OLE_Sheet.Cells(Row + 2, 1).Value)) = '' ) and & 
		( IsNull( OLE_Sheet.Cells(Row + 2, 2).Value ) or trim(string(OLE_Sheet.Cells(Row + 2, 2).Value)) = '' ) then
		Exit
	end if
Loop

OLE_Excel.Application.Quit
OLE_Excel.DisConnectObject( )

Destroy	OLE_Excel
Destroy	OLE_Sheet

if li_rtn <> -1 then
  return 0
end if
	
//SetPointer(Arrow!)
Return -1


end function

