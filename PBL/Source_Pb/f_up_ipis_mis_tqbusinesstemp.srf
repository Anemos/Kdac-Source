$PBExportHeader$f_up_ipis_mis_tqbusinesstemp.srf
$PBExportComments$자재납품 검사정보
global type f_up_ipis_mis_tqbusinesstemp from function_object
end type

forward prototypes
global function integer f_up_ipis_mis_tqbusinesstemp (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[])
end prototypes

global function integer f_up_ipis_mis_tqbusinesstemp (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[]);string ls_areacode, ls_divisioncode, ls_slno, ls_suppliercode, ls_itemcode, ls_judgeflag
string ls_userid, ls_srno, ls_srno1, ls_srno2, ls_interfaceflag, ls_lastdate
dec{1} lc_goodqty, lc_badqty, lc_dckqt, lc_temp
integer	li_cnt, li_index, li_subcnt, li_subrowcount
str_ipis_server lstr_ipis
datastore lds_01

lds_01 = create datastore
lds_01.dataobject = "d_up_ipis_mis_tqbusinesstemp_01"

for li_cnt = 1 to ag_dwo.rowcount()
	ls_areacode = trim(ag_dwo.getitemstring(li_cnt,"areacode"))
	ls_divisioncode = trim(ag_dwo.getitemstring(li_cnt,"divisioncode"))
	ls_slno = trim(ag_dwo.getitemstring(li_cnt,"slno"))
	ls_suppliercode = trim(ag_dwo.getitemstring(li_cnt,"suppliercode"))
	ls_itemcode = trim(ag_dwo.getitemstring(li_cnt,"itemcode"))
	ls_judgeflag = trim(ag_dwo.getitemstring(li_cnt,"judgeflag"))
	lc_goodqty = ag_dwo.GetItemNumber(li_cnt, 'GoodQty')
	lc_badqty = ag_dwo.GetItemNumber(li_cnt, 'BadQty')
	ls_userid = trim(ag_dwo.getitemstring(li_cnt,"lastemp"))
	ls_lastdate = string(ag_dwo.getitemdatetime(li_cnt,"lastdate"),"yyyy-mm-dd hh:mm:ss")
	
	li_index = f_ipis_server_get_transaction(ag_str_ipis, 'X', 'Z')	
	if li_index = -1 then
		ag_message = "공장연결에 실패하였습니다."
		return -1
	else
		lstr_ipis = ag_str_ipis[li_index]
	end if
	
	Choose Case ls_judgeflag
		Case '1'
			UPDATE	pbinv.inv201 
				SET		dexqt = dckqt, 
							ndexqt = 0,
							updtid = :ls_userid,
							updtdt = :ls_lastdate
			WHERE		comltd = '01' 
				and		xplant = :ls_areacode 
				and		div  = :ls_divisioncode 
				and		slno   = :ls_slno     
				and		vndr = :ls_suppliercode 
				and		itno   = :ls_itemcode 
			Using lstr_ipis.t_sqlpis;                                                                       
			
			if lstr_ipis.t_sqlpis.sqlnrows < 1 then
				ag_message = "납품검사정보 합격판정에 실패하였습니다."
				f_ipis_transaction_errorlog(ls_judgeflag,'','f_up_ipis_mis_tqbusinesstemp',&
					lstr_ipis.t_sqlpis.sqlerrtext,'납품검사정보 수정에러 1: ' + ls_slno, g_s_empno, g_s_ipaddr, g_s_macaddr)
				return -1
			end if
		Case '2'
			UPDATE	pbinv.inv201 
				SET		ndexqt = dckqt, 
							dexqt = 0,
							updtid = :ls_userid,
							updtdt = :ls_lastdate
			WHERE		comltd = '01' 
				and		xplant = :ls_areacode 
				and		div  = :ls_divisioncode 
				and		slno   = :ls_slno     
				and		vndr = :ls_suppliercode 
				and		itno   = :ls_itemcode 
			Using lstr_ipis.t_sqlpis;                                                                        
			
			if lstr_ipis.t_sqlpis.sqlnrows < 1 then
				ag_message = "납품검사정보 불합격판정에 실패하였습니다."
				f_ipis_transaction_errorlog(ls_judgeflag,'','f_up_ipis_mis_tqbusinesstemp',&
					lstr_ipis.t_sqlpis.sqlerrtext,'납품검사정보 수정에러 : 2' + ls_slno, g_s_empno, g_s_ipaddr, g_s_macaddr)
				return -1
			end if			
		Case Else
			lds_01.reset()
			lds_01.settransobject(lstr_ipis.t_sqlpis)
			
			li_subrowcount = lds_01.retrieve('01',ls_areacode, ls_divisioncode, ls_slno, ls_suppliercode, ls_itemcode)
			if li_subrowcount < 1 then
				ag_message = "납품검사정보 선별합격에 필요한 데이타가 없습니다."
				f_ipis_transaction_errorlog(ls_judgeflag,'','f_up_ipis_mis_tqbusinesstemp',&
					lstr_ipis.t_sqlpis.sqlerrtext,'납품검사정보 수정에러 : 3' + ls_slno, g_s_empno, g_s_ipaddr, g_s_macaddr)
				return -1
			end if
			
			for li_subcnt = 1 to li_subrowcount
				ls_srno = trim(lds_01.getitemstring(li_subcnt,"srno"))
				ls_srno1 = trim(lds_01.getitemstring(li_subcnt,"srno1"))
				ls_srno2 = trim(lds_01.getitemstring(li_subcnt,"srno2"))
				lc_dckqt = lds_01.getitemnumber(li_subcnt,"dckqt")
				
				if lc_dckqt >= lc_badqty then
					lc_temp = lc_dckqt - lc_badqty
					
					UPDATE	PBinv.inv201
					SET		ndexqt = :lc_badqty,
								dexqt = :lc_temp,
								updtid = :ls_userid,
								updtdt = :ls_lastdate
					WHERE		srno = :ls_srno 
					AND		srno1 = :ls_srno1 
					and		srno2 = :ls_srno2 
					Using lstr_ipis.t_sqlpis;
					
					if lstr_ipis.t_sqlpis.sqlnrows < 1 then
						ag_message = "납품검사정보 선별합격판정에 실패하였습니다."
						f_ipis_transaction_errorlog(ls_judgeflag,'','f_up_ipis_mis_tqbusinesstemp',&
							lstr_ipis.t_sqlpis.sqlerrtext,'납품검사정보 수정에러 : 4' + ls_slno, g_s_empno, g_s_ipaddr, g_s_macaddr)
						return -1
					end if

					lc_badqty = 0					
				else
					UPDATE 	PBinv.inv201
					SET		ndexqt = :lc_dckqt,
								dexqt = 0,
								updtid = :ls_userid,
								updtdt = :ls_lastdate
					WHERE		srno = :ls_srno 
					AND		srno1 = :ls_srno1 
					and		srno2 = :ls_srno2
					Using lstr_ipis.t_sqlpis;
					
					if lstr_ipis.t_sqlpis.sqlnrows < 1 then
						ag_message = "납품검사정보 선별합격판정에 실패하였습니다."
						f_ipis_transaction_errorlog(ls_judgeflag,'','f_up_ipis_mis_tqbusinesstemp',&
							lstr_ipis.t_sqlpis.sqlerrtext,'납품검사정보 수정에러 : 5' + ls_slno, g_s_empno, g_s_ipaddr, g_s_macaddr)
						return -1
					end if
					
					lc_badqty = lc_badqty - lc_dckqt	
				end if
			next																												  
	END Choose	
next

return 0
end function

