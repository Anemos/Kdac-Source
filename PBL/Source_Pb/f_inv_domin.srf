$PBExportHeader$f_inv_domin.srf
$PBExportComments$내자입고정보입력(여주 Interface)
global type f_inv_domin from function_object
end type

forward prototypes
global function integer f_inv_domin (string as_gubun, string as_slno, string as_xplant, string as_div, string as_itno, string as_tdte4, string as_srno, string as_usrid, string as_inptdt, ref string as_error)
end prototypes

global function integer f_inv_domin (string as_gubun, string as_slno, string as_xplant, string as_div, string as_itno, string as_tdte4, string as_srno, string as_usrid, string as_inptdt, ref string as_error);//**************************************************
// 여주공장 입고정보 Interface                      
// INV201 DELETE => INV401 UPDATE -> INV101 UPDATE => PUR402 UPDATE 재공함수 CALL  
//**************************************************

// 입력시 변수선언
String  ls_column, ls_errcd, ls_gubun, ls_date, ls_comp, ls_itno, ls_slno, ls_cls, ls_vndr, ls_unit, & 
        ls_date1, ls_jscd, ls_dnr, ls_plant, ls_div, ls_rvno, ls_itnm, ls_spec, ls_purno, ls_vsrno, ls_stcd, &
		  ls_srno, ls_srno1, ls_srno2, ls_dudt, ls_dsag, ls_srce, ls_type, ls_lcno, ls_mdno, ls_msgcd, ls_sqltext
String  ls_dte5, ls_pdcd, ls_plan, ls_mlan, ls_rqdiv, ls_kplnt
Integer ii, li_Rows, li_rtn, li_prc_rtn, li_cnt, li_sqlcode
Long    ll_row, ll_amt 
Dec{1}  ld_drct, ld_dcqt, ld_qty4, ld_qty3
Dec{2}  ld_saud, ld_cost

// 삭제시 변수선언  
String  ls_dsrno, ls_dsrno1, ls_dsrno2, ls_sltype
Long    ll_tramt, ll_amt1, ll_IntAmt, ll_outamt
Dec{1}  ld_tqty4, ld_ohuqty, ld_Uqty, ld_Rqty, ld_Sqty, ld_IntQty, ld_OutQty
Dec{2}  ld_CostAv

string ls_orgsql, ls_newsql  

//datastore 선언
Datastore ds_Retr201, ds_trans_01   

If as_gubun = 'A' Then // 내자입고정보 입력
   
	//INV201 delete 용 DataStore Open
	ds_Retr201 = create datastore                  			              
	ds_Retr201.dataobject = "d_invdomin_01"
	ds_Retr201.settransobject(sqlca)
	ls_orgsql = ds_Retr201.getsqlselect()
   ls_newsql = ls_orgsql + &
	            " AND ( ~"PBINV~".~"INV101~".~"SRCE~" <> '01') AND ~"PBINV~".~"INV101~".~"CLS~" IN ('10', '20', '24', '30', '35', '40', '50') " 
	
	ds_Retr201.setsqlselect(ls_newsql)

	ds_Retr201.Retrieve(as_slno, as_xplant, as_div, as_itno)
	li_Rows = ds_Retr201.RowCount()
	
	If li_Rows = 0 Then 
		as_error = "납품DB에 조회할 데이터가 없음"
		//Return -1 // 조회된 데이타가 없음.
		Goto ERROR
	End if
	
	For ii=1 To li_Rows
		
		ls_srno  = ds_Retr201.object.inv201_srno[ii]
		ls_srno1 = ds_Retr201.object.inv201_srno1[ii]
		ls_srno2 = ds_Retr201.object.inv201_srno2[ii]
		
		// 입고정보 유무 check
		SELECT  count(*) 	 INTO :li_cnt
		 FROM "PBINV"."INV401"  
		WHERE "PBINV"."INV401"."COMLTD" = '01' AND "PBINV"."INV401"."SRNO" = :ls_srno AND "PBINV"."INV401"."SLIPTYPE" = 'RP' AND
				"PBINV"."INV401"."SRNO1"  = :ls_srno1 AND "PBINV"."INV401"."SRNO2" = :ls_srno2 using sqlca  ;
		if li_cnt > 0 then
			as_error = "Trans_DB에 이미 입고 데이터가 있음"
			//return -1
			Goto ERROR
		end if	
	
		ls_vsrno = ds_Retr201.object.inv201_vndr[ii]
	
		// 사업자번호 getting
		ls_vndr  = f_yeo_vndr_pur(ls_vsrno,'S','D')
	
		// 마감주기 코드 return
		ls_jscd  = f_yeo_vndr_jscd1('D',ls_vsrno)
		ls_date  = as_tdte4
		ls_dte5  = ds_Retr201.object.inv201_inptdt[1]
	
		// 입고일자	check (월마감시/중간마감시)
		if f_yeo_online(ls_date,ls_jscd) = -1 then
			as_error = "마감일이 지나서는 입력 하였음."
			//Return -1                                   // 마감일이 지나 입력시 에러
			Goto ERROR
		end if
	
		//	입고수량 CHECK   
		ld_qty4 = ds_Retr201.object.inv201_dexqt[ii]   // 합격량
		ld_qty3 = ds_Retr201.object.inv201_ndexqt[ii]  // 불합격량
		ld_dcqt = ds_Retr201.object.inv201_dckqt[ii]   // 납품량
		if ld_qty4 >= 0 then
			if ld_dcqt <> (ld_qty4 + ld_qty3) then      // 납품량 <> 입고량 + 불합격량 
			   as_error = "납품량 <> 입고량 + 불합격량"
				//return -1   
				Goto ERROR
			End if
		else
			as_error = "합격량 0보다 작음"
			//Return -1                                   // 0보다 작으면 에러..
			Goto ERROR
		end if
				


	//	"10" "40" "50" =>bom 여부 확인
//		if ls_srce = '04' then
//			if ls_rqdiv <> ""  then
//				ls_kplnt = ls_rqdiv
//			else
//				ls_kplnt = ls_plant
//			end if
//		end if
	 
		SELECT "PBPUR"."PUR402"."XCOST"  INTO :ld_cost     // 발주단가
		  FROM "PBPUR"."PUR402"  
		WHERE "PBPUR"."PUR402"."COMLTD" = '01' AND "PBPUR"."PUR402"."SRNO" = :ls_srno AND 
			  "PBPUR"."PUR402"."SRNO1" = :ls_srno1 using sqlca  ;
		 
		 // Window value => Db field
		 ls_plant = trim(ds_Retr201.object.inv201_xplant[ii])  // 지역
		 ls_rqdiv = trim(ds_Retr201.object.inv201_drwcd[ii])   // 납품지역
		 ls_div   = trim(ds_Retr201.object.inv201_div[ii])     // 공장
		 ls_itno  = trim(ds_Retr201.object.inv201_itno[ii])    // 품번 
		 ls_vsrno = trim(ds_Retr201.object.inv201_vndr[ii])     // 업체코드
		 ls_date  = as_tdte4							          // 수불일
		 ls_dte5  = trim(ds_Retr201.object.inv201_inptdt[ii])   // 입력납품일
		 ld_qty3  = ds_Retr201.object.inv201_ndexqt[ii]   // 불합격량
		 ld_qty4  = ds_Retr201.object.inv201_dexqt[ii]    // 합격량
		 ld_dcqt  = ds_Retr201.object.inv201_dckqt[ii]    // 납품량
		 ls_rvno  = trim(ds_Retr201.object.inv201_rvno[ii])     // REVISION NO
		 ls_slno  = trim(ds_Retr201.object.inv201_slno[ii])     // 전표번호
		 ls_itnm  = trim(ds_Retr201.object.inv002_itnm[ii])     // 품명
		 ls_spec  = trim(ds_Retr201.object.inv002_spec[ii])     // 규격
		 ls_unit  = trim(ds_Retr201.object.inv101_xunit[ii])    // 단위
		 ls_cls   = trim(ds_Retr201.object.inv101_cls[ii])      // 계정
		 ls_srce  = trim(ds_Retr201.object.inv101_srce[ii])     // 구입선
		 ls_dudt  = trim(ds_Retr201.object.inv201_dckdt[ii])    // 납품일 
		 ls_dsag  = trim(ds_Retr201.object.inv201_dsag[ii])     // 고객사 유상
		 ll_amt   = truncate(ld_cost * ld_qty4,0)        // 금액 = 발주단가 * 합격량
		 
		 // 입고정보 생성
//		 string las_srno, las_usrid, las_inptdt, las_error
//		 las_srno = as_srno
//		 las_usrid =  as_usrid
//		 las_inptdt= as_inptdt
//		 las_error = as_error
		 li_sqlcode = f_inv401_dinsert(ls_srno, ls_srno1, ls_srno2, ls_plant, ls_div,  ls_itno, ls_vsrno, &
									  ld_qty4, ld_dcqt,  ll_amt,   ls_date,  ls_dudt, ls_dte5, ls_slno, ls_rqdiv, ls_dsag, as_srno, as_usrid, as_inptdt, as_error)
		if li_sqlcode = 1 then
			
			// 미입고량 = 0 이면 발주상태 'C'
			if f_yeo_get_invpqty(ls_srno,ls_srno1) - f_yeo_get_invqty1(ls_srno,ls_srno1) = 0 then   
				ls_stcd = 'C' 
			else
				ls_stcd = ' '
			end if
			
			UPDATE "PBPUR"."PUR402"  
				SET "STCD"    = :ls_stcd
			WHERE ( "PBPUR"."PUR402"."COMLTD" = '01' ) AND ( "PBPUR"."PUR402"."SRNO" = :ls_srno) AND
					( "PBPUR"."PUR402"."SRNO1"  = :ls_srno1) using sqlca;
			if sqlca.sqlcode <> 0 then
				rollback using sqlca;
				as_error = "발주 DB(PB402) DATA Upload ERROR"
				//return -1
				Goto ERROR
			end if
			
		else 
			rollback using sqlca;
//			as_error = "입고정보 생성 실패"
			//return -1
			Goto ERROR
		end if
	Next
	destroy ds_Retr201
End if

	
If as_gubun = 'D' Then // 내자입고정보 삭제

	ds_trans_01 = create datastore                  			              
	ds_trans_01.dataobject = "d_inv_out_01"
	ds_trans_01.settransobject(sqlca)
	
	ds_trans_01.Retrieve('RP', as_xplant, as_div, as_itno, as_srno)
	li_Rows = ds_trans_01.RowCount()
	
	If li_Rows = 0 Then
		as_error = "Tran_DB 삭제할 데이타가 존재하지 않음"
		//Return -1 // 조회된 데이타가 없음.
		Goto ERROR
	End if
	For ii=1 To li_Rows
		
		// 입고일자	check (월마감시/중간마감시)
		ls_date  = ds_trans_01.object.tdte4[ii]
		ls_vsrno = ds_trans_01.object.vsrno[ii]
		ls_jscd = f_yeo_vndr_jscd1('D',ls_vsrno)
		if f_yeo_online(ls_date,ls_jscd) = -1 then
			as_error = "마감일이 지난 데이터는 삭제 불가"
			//Return -1
			Goto ERROR
		End If
		
		ls_srno  = ds_trans_01.object.srno[ii]
		ls_srno1 = ds_trans_01.object.srno1[ii]
		ls_srno2 = ds_trans_01.object.srno2[ii]	
		ld_qty4  = ds_trans_01.object.tqty4[ii]      //수량
		ll_amt1  = ds_trans_01.object.tramt[ii]      //금액
		
		SELECT "OHUQTY", "OHRQTY", "OHSQTY", "OHAMT", "COSTAV", "INTQTY", "INTAMT" , "OUTQTY", "OUTAMT", "CLS", "SRCE"
		  INTO :ld_Uqty, :ld_Rqty, :ld_Sqty, :ll_Amt, :ld_CostAv, :ld_intQty, :ll_intAmt, :ld_Outqty, :ll_outamt, :ls_cls, :ls_srce
		FROM "PBINV"."INV101"
		WHERE "COMLTD" = '01' AND "XPLANT" = :as_xplant AND "DIV" = :as_div AND "ITNO" = :as_Itno	Using	SQLCA ;
		
		
		If ld_uqty <  ld_qty4 Then
			as_error = "현재고수량 < 삭제수량 삭제불가"
			//Return -1
			Goto ERROR
		End If
			
			// 거래명세표 상태코드 Update
		UPDATE "PBPUR"."PUR507"  
		 SET  "BQTY" = 0, "STCD" = ' '
		WHERE ( "PBPUR"."PUR507"."COMLTD" = '01' )     AND ( "PBPUR"."PUR507"."VSRNO" = :ls_vsrno ) AND
				( "PBPUR"."PUR507"."SLNO"  = :as_slno )  AND ( "PBPUR"."PUR507"."SRNO"  = :ls_srno  ) AND 
				( "PBPUR"."PUR507"."SRNO1" = :ls_srno1 ) using sqlca ;
		
		if sqlca.sqlcode <> 0 then
			rollback using sqlca ;
			as_error = "거래명세표 Update 실패"
			//Return -1
			Goto ERROR
		end if
		
		// 품목재고 Table 재고삭제
				
		// 입고수량(+) & 현재고수량 (+)
		ld_intqty = ld_intqty - ld_qty4
		ld_Uqty   = ld_Uqty - ld_qty4
		
		// 입고금액(+) & 현재고금액 (+)
		ll_intamt = ll_intamt - ll_amt1
		ll_amt    = ll_amt - ll_amt1
		
		// 외주가공품 금액미관리
		if (ls_cls = '40' and ls_srce = '04') or (ls_cls = '50' and ls_srce = '04') or &
			(ls_cls = '41' and ls_srce = '04') or (ls_cls = '43' and ls_srce = '04') then
			ll_intamt = 0
			ll_amt    = 0
		end if
		
		//  전장외공장 "50"-"04"는 재고미관리
		If (ls_cls = '50' and ls_srce = '04') Then
			If (as_div <> 'A' and as_div <> 'V') Then
				ld_Outqty = ld_Intqty
				ld_Uqty   = 0
			End if
		End If
		
		// 이동평균단가 계산
		if ll_amt > 0 and ( ld_Uqty + ld_Rqty + ld_Sqty ) > 0 then
			ld_costav = ll_amt / (ld_Uqty + ld_Rqty + ld_Sqty )
		end if
		
		// 품목재고 Update
		UPDATE "PBINV"."INV101"
			SET "OHUQTY" = :ld_Uqty,   "OHAMT"  = :ll_Amt,   "INTQTY" = :ld_intQty,  "INTAMT"  = :ll_intAmt, 
				 "OUTQTY" = :ld_OutQty, "COSTAV" = :ld_costav
		WHERE "COMLTD" = '01' AND "XPLANT" = :as_xplant AND "DIV" = :as_div AND "ITNO" = :as_Itno	Using	SQLCA ;
		
		If SQLCA.SQLCode = 0 Then
			Commit Using sqlca;
		else			
			RollBack Using SQLCA ;
			as_error = "INV101 Update error"
			//Return -1
			Goto ERROR
		End If
		
		// 발주 Detail 상태코드 Update		
		SELECT "STCD"   INTO :ls_stcd
		  FROM "PBPUR"."PUR402"
		WHERE "COMLTD" = '01' AND "SRNO" = :ls_srno AND "SRNO1" = :ls_srno1 Using	SQLCA ;
		
		if ls_stcd = 'C' then
			UPDATE "PBPUR"."PUR402"  
				SET "STCD" = ' '
			WHERE  "COMLTD" = '01' AND "SRNO" = :ls_srno AND "SRNO1"  = :ls_srno1  using sqlca;
			
			If SQLCA.SQLCode = 0 Then
				Commit Using sqlca ;
			else
				RollBack Using SQLCA ;
				as_error = "발주 Detail 상태코드 Update error"
				//Return -1
				Goto ERROR
			End If
		end if
		// trans 삭제
		DELETE FROM "PBINV"."INV401" 
		WHERE "COMLTD" = '01'       AND "SLIPTYPE" = 'RP' AND "SRNO" = :ls_srno AND 
	    	  "SRNO1"  = :ls_srno1 AND "SRNO2"    = :ls_srno2  using sqlca ;
	Next	
	
	destroy ds_trans_01

End if

Return 0

ERROR:
destroy ds_trans_01
destroy ds_Retr201
Return -1
end function

