$PBExportHeader$f_inv_out_rtn.srf
$PBExportComments$반납정보입력(여주 Interface)
global type f_inv_out_rtn from function_object
end type

forward prototypes
global function integer f_inv_out_rtn (string as_gubun, string as_xplant, string as_div, string as_itno, string as_dept, string as_xuse, string as_rtngub, string as_date, decimal ad_qty, decimal ad_rqty, decimal ad_sqty, string as_vsrno, string as_srno, string as_usrid, string as_inptdt, ref string as_error)
end prototypes

global function integer f_inv_out_rtn (string as_gubun, string as_xplant, string as_div, string as_itno, string as_dept, string as_xuse, string as_rtngub, string as_date, decimal ad_qty, decimal ad_rqty, decimal ad_sqty, string as_vsrno, string as_srno, string as_usrid, string as_inptdt, ref string as_error);//**************************************************
// 여주공장 반납정보 Interface                      
// INV401 INSERT => INV101 UPDATE => 재공함수 CALL  
//**************************************************

// 입력시 변수선언 
String  ls_cls,  ls_srce, ls_unit, ls_pdcd, ls_plan, ls_maln 
String  ls_itnm, ls_spec, ls_type
String  ls_slno, ls_srno, ls_vndr, ls_vndnm
String  ls_key,  ls_key1, ls_cdiv, ls_dept
Long    ll_wamt, ll_amt,  ll_ohamt, ll_outamt, ll_row
Dec{1}  ld_qty, ld_rqty, ld_sqty, ld_tqty, ld_outqty, ld_ohqty, ld_saqty
Dec{2}  ld_cost
// 삭제시 변수선언
String  ls_dsrno, ls_dsrno1, ls_dsrno2, ls_sltype
Long    ll_tramt
Dec{1}  ld_tqty4

Datastore ds_trans_01

/////////////////////////////////////////
////// Argument Value 유효성검정   //////
/////////////////////////////////////////

// 불출일 : 결산년월 Check
If f_yeo_online(as_date,' ') = -1 Then 
	return -1
End If

If as_gubun = 'A' Then
	
	ld_tqty = ad_qty + ad_rqty + ad_sqty
	
	// 반납부서 : 현재사용중인 부서유무
	If as_dept <> "" Then
		If f_yeo_dept_use(as_dept,as_date) = -1 Then 
			as_error = " 반납부서 : 현재사용중인 부서유무 check"
			return -1
		End If
	End If
	
	//수량 editing 
	If as_rtngub = '04' Then 
		If ad_qty = 0 Then
			as_error = "정상반납일시 사용가 수량이 0 면 error"
			return -1
		Else
			If ad_rqty <> 0 or ad_sqty <> 0 Then
				as_error = "정상반납일씨 요수리 페품 수량이 존재함"
				return -1
			End If
		End If	
	End If
	
	//
	If as_rtngub = '01'  Then 
		If ad_qty <> 0 Then
			as_error = "소재불량일시 사용가 수량이 존재하면 error"
			return -1
		Else
			If (ad_rqty = 0 and ad_sqty = 0) Then
				as_error = "소재불량일시 요수리 & 폐품수량이 0면 error"
				return -1
			End If
		End If
	End If
	
	If as_rtngub = '02'  Then 
		If ad_qty <> 0 Then
			as_error = "작업불량일시 사용가 수량이 존재하면 error"
			return -1
		Else
			If (ad_rqty = 0 and ad_sqty = 0) Then
				as_error = "작업불량일시 요수리 & 폐품수량이 0면 error"
				return -1
			End If
		End If
	End If
	
End If

//////////////////////////////////////////////
////// Argument Value 유효성검정 종료  //////
/////////////////////////////////////////////

If as_gubun = 'A' Then
	
	// INV401 Insert 용 DataStore Open
	ds_trans_01 = create datastore                  			              
	ds_trans_01.dataobject = "d_inv_out_01"
	ds_trans_01.settransobject(sqlca)
	
End If

If as_gubun = 'A' Then
	
	// INV401(Trans) 데이타 입력
	ds_trans_01.Reset( )
	ll_row = ds_trans_01.insertrow(0)
	
Else

	// 삭제시 Trans Read => Primary Key
	SELECT "SLIPTYPE", "SRNO",    "SRNO1",    "SRNO2",    "TQTY4",   "TRAMT"
	  INTO :ls_sltype, :ls_dsrno, :ls_dsrno1, :ls_dsrno2, :ld_tqty4, :ll_tramt
	FROM "PBINV"."INV401" 
	WHERE "COMLTD" = '01'     AND "XPLANT" = :as_xplant AND "DIV" = :as_div AND 
	      "ITNO"   = :as_itno AND "TFILL"  = :as_srno  using sqlca ;
	If sqlca.sqlcode <> 0 Then
		as_error = "Trans_DB 삭제 DATA 조회 불가능 "
		return -1
	End If
	
End If

If as_gubun = 'A' Then
	
	// 품목Master에서 기본정보 가져오기
	SELECT "PBINV"."INV002"."ITNM", "PBINV"."INV002"."SPEC",	"PBINV"."INV002"."XTYPE"  
	 INTO  :ls_itnm, :ls_spec,	:ls_type  
	FROM "PBINV"."INV002"  
	WHERE ( "PBINV"."INV002"."COMLTD" = '01' ) AND ( "PBINV"."INV002"."ITNO" = :as_itno ) using sqlca;
	If sqlca.sqlcode <> 0 Then
		as_error = "품목Master에서 기본정보 가져오기 error"
		return -1
	End If
	
End If

//품목재고 테이블에서 기존정보가져오기
SELECT "CLS",    "SRCE",     "XUNIT",    "PDCD",   "XPLAN",  "MLAN",   
		 "COSTAV", "OUTQTY",   "OUTAMT",   "OHUQTY", "OHRQTY", "OHSQTY", "OHAMT"  
  INTO :ls_cls,  :ls_srce,   :ls_unit,   :ls_pdcd, :ls_plan, :ls_maln,   
  		 :ld_cost, :ld_outqty, :ll_outamt, :ld_qty, :ld_rqty, :ld_sqty, :ll_ohamt 
FROM "PBINV"."INV101" 
WHERE "COMLTD" = '01' AND "XPLANT" = :as_xplant AND 
		"DIV" = :as_div AND "ITNO"   = :as_itno   using sqlca ;
 
If sqlca.sqlcode <> 0 Then
	as_error = "품목재고 테이블에서 기존정보가져오기 error"
	return -1
End If

// 반납구분/구입선별별 Editing
If as_gubun = 'A' Then
	
	If as_rtngub = '01' Then
		If ( ls_srce =  '01' or ls_srce = '02' or ls_srce = '04' or  ls_srce = '03' ) Then
			If Not ( as_xuse = '04' or as_xuse = '07' ) Then
				If ls_srce = '03' Then
					as_error = "반납용도에 허용되지 않는 구입선임"
					return -1 
				End If
			End If
		Else 
			as_error = "소재불량에 허용되지 않는 구입선임"
			return -1
		End If
	End If	
	
	If as_rtngub = '02' Then
		If as_xuse <> '04' Then
			If ls_srce = '03' or ls_srce = ' ' Then
				as_error = "작업불량에는 자가품(10-03)은 입력불가합니다"
				return -1
			Else
				If as_xuse = '06' or as_xuse = '07' Then
					as_error = "작업불량에 허용되지않는 구입선입니다."
					return -1
				End If
			End If
		End If
	End If
	
	If (ls_srce = '01') or (ls_srce = '02') or &
		(ls_cls = '10' and ls_srce = '04')   or (ls_cls = '10' and ls_srce = '06') Then
		If ld_cost <= 0 and as_rtngub <> '02' Then
			as_error = "이동평균단가를 확인하십시오"
			return -1
		End If 
	End If
	
End If

If as_gubun = 'A' Then
	
	// 전산번호 부여
	ls_key  = 'RS' + as_xplant + as_div + ls_cls + mid(as_date,4,3)  
	ls_srno = f_yeo_get_ctlno(ls_key,as_date)
	
	// 원가사업장
	ls_cdiv = f_get_accdiv(as_xplant, as_div, ls_pdcd)
//	If as_xplant = 'Y' then
//		If as_div = 'Y' then
//			If mid(ls_pdcd,1,2) = '40' or mid(ls_pdcd,1,2) = '45' then
//				ls_cdiv = 'H'
//			Else
//				ls_cdiv = 'D'
//			End If
//		Else
//			ls_cdiv = '*'
//		End If
//	End If
		
	// 전표번호 부여
	ls_key1 = 'YX00' + mid(as_date,4,3)
	ls_slno = f_yeo_get_slno(ls_key1,as_date)
	
	// 사급업체 : 업체,업체명,결제조건, Not 사급업체 : 불출부서
	If as_xuse = '04' or as_xuse = '07' Then
		ls_Vndr  = f_Yeo_Vndr_Pur( as_Vsrno, 'S', 'D' )
		ls_Vndnm = f_Yeo_Vdnm_Pur( as_Vsrno, 'S', 'D' )
		ls_dept  = ""
	Else
		ls_Vndr  = ""
		ls_Vndnm = ""
	End If
	
	// 반납부서 : 사급용도가 무상/유상시 부서코드 spaces
	If ( as_xuse = '04' or as_xuse = '07' ) Then
		ls_dept = ""
	Else
		ls_dept = as_dept
	End If
	
	// 불출금액 : 이동평균단가 * 불출량(단, 외주가공품은 금액미관리)
	If (ls_cls = '10' and ls_srce <> '05') or ( ls_cls = '20' ) or ( ls_cls = '24' )  Then
		ll_amt = Truncate( (ld_cost * ld_tqty), 0 ) 
	Else
		ll_amt = 0
	End If
		
	ds_trans_01.setitem(ll_row,"comltd",'01')                 // 회사
	ds_trans_01.setitem(ll_row,"sliptype",'RS')               // 전표구분
	ds_trans_01.setitem(ll_row,"srno",ls_srno)                // 전산번호(년월/Serial)
	ds_trans_01.setitem(ll_row,"srno1",as_xplant + as_div)    // 전산번호(지역 + 공장)
	ds_trans_01.setitem(ll_row,"srno2",ls_cls)                // 전산번호(계정)
	ds_trans_01.setitem(ll_row,"xplant",as_xplant)            // 지역
	ds_trans_01.setitem(ll_row,"div",as_div)                  // 공장
	ds_trans_01.setitem(ll_row,"costdiv",ls_cdiv)             // 원가사업장
	ds_trans_01.setitem(ll_row,"slno",ls_slno)                // 전표번호
	ds_trans_01.setitem(ll_row,"itno",as_itno)                // 품번
	ds_trans_01.setitem(ll_row,"itnm",ls_itnm)                // 품명
	ds_trans_01.setitem(ll_row,"spec",ls_spec)                // 규격
	ds_trans_01.setitem(ll_row,"cls",ls_cls)                  // 계정
	ds_trans_01.setitem(ll_row,"srce",ls_srce)                // 구입선
	ds_trans_01.setitem(ll_row,"xunit",ls_unit)               // 단위
	ds_trans_01.setitem(ll_row,"pdcd",ls_pdcd)                // 제품
	ds_trans_01.setitem(ll_row,"xtype",ls_type)               // item type
	ds_trans_01.setitem(ll_row,"xplan",ls_plan)               // 구매담당
	ds_trans_01.setitem(ll_row,"mlan",ls_maln)                // 자재담당
	ds_trans_01.setitem(ll_row,"kbcd",' ')                    // 간판여부
	ds_trans_01.setitem(ll_row,"vsrno",as_vsrno)              // 사급업체
	ds_trans_01.setitem(ll_row,"vndr",ls_vndr)                // 사업자번호
	ds_trans_01.setitem(ll_row,"vndnm",ls_vndnm)              // 업체명
	ds_trans_01.setitem(ll_row,"xpay",' ')                    // 결제조건
	ds_trans_01.setitem(ll_row,"dept",ls_dept)                // 반납부서
	ds_trans_01.setitem(ll_row,"tdte4",as_date)               // 반납일
	ds_trans_01.setitem(ll_row,'xuse',as_xuse)                // 반납용도
	ds_trans_01.setitem(ll_row,'rtngub',as_rtngub)            // 반납구분
	ds_trans_01.setitem(ll_row,"tqty1",ad_qty)                // 반납량(사용가)
	ds_trans_01.setitem(ll_row,"tqty2",ad_rqty)               // 반납량(요수리)
	ds_trans_01.setitem(ll_row,"tqty3",ad_sqty)               // 반납량(폐품)
	ds_trans_01.setitem(ll_row,"tqty4",ld_tqty)               // 반납량
	ds_trans_01.setitem(ll_row,"xcost",ld_cost)               // 이동평균단가
	ds_trans_01.setitem(ll_row,"tramt",ll_amt)                // 반납금액
	ds_trans_01.setitem(ll_row,"pjtno",' ')                   // Project No
	ds_trans_01.setitem(ll_row,"invstcd",' ')                 // 재고상태
	ds_trans_01.setitem(ll_row,"tfill",as_srno)               // 여주공장 전산번호
	ds_trans_01.setitem(ll_row,"inptid",as_usrid)             // 입력자사번
	ds_trans_01.setitem(ll_row,"inptdt",as_inptdt)            // 입력일
	
End If

// 불출수량 계산
If ls_srce <> '03' Then
	If as_gubun = 'A' Then
		ld_outqty = ld_outqty - ld_tqty
	Else
		ld_outqty = ld_outqty + ld_tqty4
	End If
End If

// 불출금액 계산
If (ls_srce = '01') or (ls_srce = '02') or &
	(ls_cls  = '10' and ls_srce = '04')  or (ls_cls  = '10' and ls_srce = '06') Then
	If as_gubun = 'A' Then
	 	ll_outamt = ll_outamt - ll_amt
	Else
		ll_outamt = ll_outamt + ll_tramt
	End If
End If

// 재고상태별 현재고수량 계산
If ls_srce <> '03' Then
	
	// 사용가
	If ad_qty <> 0 Then
		If as_gubun = 'A' Then
			ld_qty = ld_qty + ad_qty
		Else
			ld_qty = ld_qty - ld_tqty4
			if ld_qty < 0 then
				as_error = "품목재고(사용가) (-) 재고량 발생 "
				return -1
			End if
		End If
	End If
	// 요수리
	If ad_rqty <> 0 Then
		If as_gubun = 'A' Then
		    ld_rqty = ld_rqty + ad_rqty
		Else
			ld_rqty = ld_rqty - ld_tqty4
			if ld_rqty < 0 then
				as_error = "품목재고(요수리) (-) 재고량 발생 "
				return -1
			End if
		End If
	End If
	// 폐품
	If ad_sqty <> 0 Then
		If as_gubun = 'A' Then
			ld_sqty = ld_sqty + ad_sqty
		Else
			ld_sqty = ld_sqty - ld_tqty4
			if ld_sqty < 0 then
				as_error = "품목재고(폐품) (-) 재고량 발생 "
				return -1
			End if
		End If
	End If
	
	// 현재고 금액계산
	If as_gubun = 'A' Then
		ll_ohamt = ll_ohamt + ll_amt
	Else
		ll_ohamt = ll_ohamt - ll_tramt
	End If
	
End If

If as_gubun = 'A' Then
	
	ds_trans_01.accepttext()
	If ds_trans_01.update() <> 1 Then
		
		rollback using sqlca;
		destroy ds_trans_01
		as_error = "Trans_DB update error"
		return -1
		
	End If
else
	DELETE FROM "PBINV"."INV401" 
	WHERE "COMLTD" = '01'       AND "SLIPTYPE" = :ls_sltype AND "SRNO" = :ls_dsrno AND 
	      "SRNO1"  = :ls_dsrno1 AND "SRNO2"    = :ls_dsrno2  using sqlca ;
	
End If

If ls_srce <> '03' Then

	// 품목재고 Table Update
	UPDATE "PBINV"."INV101" 
		SET "OHUQTY" = :ld_qty ,    "OHRQTY"  = :ld_rqty,     "OHSQTY" = :ld_sqty,  "OHAMT"   = :ll_ohamt, 
			 "OUTQTY" = :ld_outqty,  "OUTAMT"  = :ll_outamt,   "UPDTID" = :as_usrid, "PBINV"."INV101"."ILUDT" = :as_date
	WHERE  "PBINV"."INV101"."COMLTD" = '01'    AND "PBINV"."INV101"."XPLANT" = :as_xplant AND
			 "PBINV"."INV101"."DIV"    = :as_div AND "PBINV"."INV101"."ITNO"   = :as_itno  using sqlca ;
	If sqlca.sqlcode <> 0  Then
		rollback using sqlca;
		as_error = "품목재고 Table Update error"
		return -1
	End If
 
End If

If as_gubun = 'A' Then
	commit using sqlca;
	destroy ds_trans_01
End If

return 0
	

end function

