$PBExportHeader$f_wip_calc_qtyinv.srf
$PBExportComments$창고재공DB에 수량 Update
global type f_wip_calc_qtyinv from function_object
end type

forward prototypes
global function any f_wip_calc_qtyinv (string a_cmcd, string a_plant, string a_dvsn, string a_adjdate)
end prototypes

global function any f_wip_calc_qtyinv (string a_cmcd, string a_plant, string a_dvsn, string a_adjdate);string ls_itno, ls_sltype, ls_xuse, ls_itcl, ls_srce, ls_pdcd, ls_rtngub, ls_nuse
dec{4} lc_qty2, lc_qty3, lc_qty4, lc_usqty[1 to 8], lc_convqty, lc_inqty
dec{0} lc_tramt,lc_tsamt, lc_usamt[1 to 8]
integer li_cnt, li_rowcnt
long ll_totcnt, ll_totsum, ll_totcur
string ls_year, ls_month, ls_fromdt, ls_todt
string ls_yyyy, ls_mm, ls_nextdate
datastore ds_calc_wip003 

ls_year 		= mid(a_adjdate,1,4)
ls_month 	= mid(a_adjdate,5,2)
ls_fromdt 	= a_adjdate + '01'
ls_nextdate = uf_wip_addmonth(a_adjdate,1)
ls_yyyy 		= mid(ls_nextdate,1,4)
ls_mm	  		= mid(ls_nextdate,5,2)
ls_todt 		= f_relativedate( uf_wip_addmonth(a_adjdate,1) + '01', -1)

// 창고재공 미이월된 품번 재생성
DECLARE up_wip_20 PROCEDURE FOR PBWIP.SP_WIP_20  
         A_CMCD = :a_cmcd,   
         A_PLANT = :a_plant,   
         A_DVSN = :a_dvsn,   
         A_YY01 = :ls_year,   
         A_MM01 = :ls_month,   
         A_YY02 = :ls_yyyy,   
         A_MM02 = :ls_mm,   
         A_ADJDATE = :a_adjdate  
			using sqlca;

Execute up_wip_20;
Close up_wip_20;

// 로직 추가 끝
ds_calc_wip003 = create datastore                  		         
ds_calc_wip003.dataobject = "d_wip_calc_wip003"
ds_calc_wip003.settransobject(sqlca)

li_rowcnt = ds_calc_wip003.retrieve(a_cmcd,a_plant,a_dvsn,ls_year,ls_month,a_adjdate)
if li_rowcnt < 1 then
	return true
end if

ll_totcnt = 0
ll_totsum = li_rowcnt
for li_cnt = 1 to li_rowcnt
	ls_itno = trim(ds_calc_wip003.getitemstring(li_cnt,"wip003_wcitno"))
	ls_itcl = ds_calc_wip003.getitemstring(li_cnt,"inv402_cls")
	ls_srce = ds_calc_wip003.getitemstring(li_cnt,"inv402_srce")
	ls_pdcd = mid(ds_calc_wip003.getitemstring(li_cnt,"inv402_pdcd"),1,2)
	lc_convqty = ds_calc_wip003.getitemdecimal(li_cnt,"inv101_convqty")
	if lc_convqty = 0 then
		lc_convqty = 1
	end if

	lc_usqty[] = { 0, 0, 0, 0, 0, 0, 0, 0}
	lc_inqty = 0
	lc_usamt[] = { 0, 0, 0, 0, 0, 0, 0, 0}
	DECLARE invqty_cur CURSOR FOR  
		SELECT "PBINV"."INV401"."SLIPTYPE",   
				 "PBINV"."INV401"."XUSE",
				 "PBINV"."INV401"."RTNGUB",
				 sum("PBINV"."INV401"."TQTY2") ,
				 sum("PBINV"."INV401"."TQTY3") ,
				 sum("PBINV"."INV401"."TQTY4") ,
				 sum("PBINV"."INV401"."TRAMT"),
				 sum("PBINV"."INV401"."TSAMT") 
		FROM "PBINV"."INV401"  
		WHERE ( "PBINV"."INV401"."COMLTD" = :a_cmcd ) AND  
				( "PBINV"."INV401"."XPLANT" = :a_plant ) AND  
				( "PBINV"."INV401"."DIV" = :a_dvsn ) AND 
				( "PBINV"."INV401"."ITNO" = :ls_itno ) AND
				( "PBINV"."INV401"."TDTE4" >= :ls_fromdt ) AND 
				( "PBINV"."INV401"."TDTE4" <= :ls_todt )
		GROUP BY "PBINV"."INV401"."SLIPTYPE",   
				"PBINV"."INV401"."XUSE",
				"PBINV"."INV401"."RTNGUB" 
				using sqlca;
	OPEN invqty_cur;
	do while true
		FETCH invqty_cur INTO :ls_sltype,:ls_xuse,:ls_rtngub,:lc_qty2,:lc_qty3,:lc_qty4,:lc_tramt,:lc_tsamt;
			if sqlca.sqlcode <> 0 then
				exit
			end if
			
		choose case ls_sltype
			case 'IS','IP'
				choose case ls_xuse
					case '01','02'
						lc_usqty[1] = lc_usqty[1] + lc_qty4     				//라인불출수량
					case '04'
						lc_usqty[2] = lc_usqty[2] + lc_qty4     				//업체불출수량(무상)
					case '03','05','06'
						lc_usqty[5] = lc_usqty[5] + lc_qty4     				//타부서불출수량
					case '07'
						lc_usqty[3] = lc_usqty[3] + lc_qty4     				//업체불출수량(유상)
						lc_usamt[3] = lc_usamt[3] + lc_tramt
				end choose
			case 'RS'
				choose case ls_xuse
					case '01','02'		//라인
						if ls_rtngub <> '02' then
							lc_usqty[1] = lc_usqty[1] - lc_qty4 
						end if
					case '03','05','06'		//타부서
						if ls_rtngub <> '02' then
							lc_usqty[5] = lc_usqty[5] - lc_qty4 
						end if
					case '04'			//업체무상
						if ls_rtngub <> '02' then
							lc_usqty[2] = lc_usqty[2] - lc_qty4  
						end if
					case '07'			//업체업체유상
						lc_usqty[3] = lc_usqty[3] - lc_qty4 
						lc_usamt[3] = lc_usamt[3] - lc_tramt
				end choose
			case 'RP'
				lc_inqty = lc_inqty + lc_qty4
				if ls_itcl = '50' and ls_srce = '04' then
					if (a_plant = 'D' and (a_dvsn = 'A' or a_dvsn = 'V')) then
						//pass
					else
						SELECT NUSE INTO :ls_nuse
						FROM PBINV.INV101
						WHERE Comltd = '01' AND XPLANT = :a_plant AND DIV = :a_dvsn AND ITNO = :ls_itno
						using sqlca;
						
						if a_plant = 'B' or a_plant = 'K' then
							if ls_nuse <> 'Y' then
								lc_usqty[1] = lc_usqty[1] + lc_qty4
							end if
						else
							lc_usqty[1] = lc_usqty[1] + lc_qty4
						end if
					end if
				end if
			case 'SA','SR'
				if ls_sltype = 'SA' then
					if ls_itcl = '10' and ls_srce = '04' then
						lc_usqty[1] = lc_usqty[1] + lc_qty4     				//라인불출수량
					else
						lc_usqty[4] = lc_usqty[4] + lc_qty4                   //출하
//						lc_usamt[4] = lc_usamt[4] + lc_tramt
					end if
				else
					if ls_itcl = '10' and ls_srce = '04' then
						lc_usqty[1] = lc_usqty[1] - lc_qty4     				//라인불출수량
					else
						lc_usqty[4] = lc_usqty[4] - lc_qty4                   //출하취소
//						lc_usamt[4] = lc_usamt[4] - lc_tramt
					end if
				end if
			case 'IW'
				lc_usqty[6] = lc_usqty[6] + lc_qty4                      //이체불출
				if ls_itcl = '10' then
					lc_usamt[6] = lc_usamt[6] + (lc_tsamt - lc_tramt)
				else
					lc_usamt[6]    = lc_usamt[6] + lc_tsamt
				end if
			case 'RW'
				lc_usqty[6] = lc_usqty[6] - lc_qty4                      //이체입고
				if ls_itcl = '10' then
					lc_usamt[6] = lc_usamt[6] - (lc_tsamt - lc_tramt)
				else
					lc_usamt[6]    = lc_usamt[6] - lc_tsamt
				end if
			case 'SS'
				lc_usqty[8] = lc_usqty[8] + lc_qty4                      //입고취소(폐기처리)
		end choose
	loop
	CLOSE invqty_cur;
	
	//기초수량, 투입수량, 사용수량 데이타 입력
	ds_calc_wip003.setitem(li_cnt,"wip003_wcitcl",ls_itcl)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcsrce",ls_srce)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcpdcd",mid(ls_pdcd,1,2))
	ds_calc_wip003.setitem(li_cnt,"wip003_wcinqt",lc_inqty * lc_convqty)	
	ds_calc_wip003.setitem(li_cnt,"wip003_wcinat1",0)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcinat2",0)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusqt1",lc_usqty[1] * lc_convqty)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusat1",0)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusqt2",lc_usqty[2] * lc_convqty)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusat2",0)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusqt3",lc_usqty[3] * lc_convqty)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusat3",0)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusqt4",lc_usqty[4] * lc_convqty)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusat4",0)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusqt5",lc_usqty[5] * lc_convqty)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusat5",0)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusqt6",lc_usqty[6] * lc_convqty)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusat6",lc_usamt[6])
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusat7",0)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusqt8",lc_usqty[8] * lc_convqty)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusat8",0)
	ds_calc_wip003.setitem(li_cnt,"wip003_wcusat9",0)
	//프로그래스바에 진행현황을 나타냄
	ll_totcnt = ll_totcnt + 1
next

if ds_calc_wip003.update() = 1 then
	//COMMIT USING SQLCA;
	destroy ds_calc_wip003
	return true
else
	//ROLLBACK USING SQLCA;
	destroy ds_calc_wip003
	return false
end if
end function

