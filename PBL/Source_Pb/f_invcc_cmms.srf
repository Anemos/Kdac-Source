$PBExportHeader$f_invcc_cmms.srf
$PBExportComments$불출가능부서등록(자재에서CALL)
global type f_invcc_cmms from function_object
end type

forward prototypes
global function integer f_invcc_cmms (string as_area, string as_factory, string as_cccode, string as_ccname, string as_gubun)
end prototypes

global function integer f_invcc_cmms (string as_area, string as_factory, string as_cccode, string as_ccname, string as_gubun);///////////////////////////////////////////////////////////////////////////////////////////////////////////
//	Function		:	f_invcc_cmms
//	Access		:	public
//	Arguments	:	string		as_area				연결할 지역
//						string		as_factory			연결할 공장
//						string		as_cccode			부서 코드
//						string		as_cccode			부서명
//						string		as_gubun				변경구분자('D', 'U')
//	Returns		:	Integer		0 - 성공
//										1 - 서버연결 에러
//										2 - 데이터 체크 에러
//										else - sql error
//	Description	:	자재 불출, 반납가능 부서 관리시 설비로 업데이트
///////////////////////////////////////////////////////////////////////////////////////////////////////////

Integer ln_cnt, ln_rtn
String ls_query
transaction lt_SqlCC

lt_SqlCC = Create Transaction
if f_cmms_setserver_any(as_area,as_factory, lt_SqlCC) = false then
	return 1  // cmms server connection 실패
end if
lt_SqlCC.AutoCommit = False

if as_gubun = 'D' then
	DELETE FROM CC_INV
	WHERE AREA_CODE = :as_area AND FACTORY_CODE = :as_factory 
			AND CC_CODE = :as_cccode
	USING lt_SqlCC;
	
elseif as_gubun = 'U' then
	SELECT COUNT(*) 
	INTO :ln_cnt
	FROM CC_INV
	WHERE AREA_CODE = :as_area AND FACTORY_CODE = :as_factory
			AND CC_CODE = :as_cccode
	USING lt_SqlCC;
	
	if lt_SqlCC.SqlCode <> 0 then
		lt_SqlCC.AutoCommit = TRUE
		DESTROY lt_SqlCC
		return 2 // cc_code 조회 실패
	end if
	
	if ln_cnt = 0 then
		INSERT INTO CC_INV(AREA_CODE, FACTORY_CODE, CC_CODE, CC_NAME)
				VALUES (:as_area, :as_factory, :as_cccode, :as_ccname)
		USING lt_SqlCC;

	else
		UPDATE CC_INV 
		SET CC_NAME = :as_ccname 
		WHERE AREA_CODE = :as_area AND FACTORY_CODE = :as_factory
				AND CC_CODE = :as_cccode
		USING lt_SqlCC;
		
	end if
end if

if lt_SqlCC.SqlCode <> 0 then
	ln_rtn = lt_SqlCC.SqlCode
	ROLLBACK USING lt_SqlCC;
	lt_SqlCC.AutoCommit = TRUE
	DESTROY lt_SqlCC
	return ln_rtn
end if 

COMMIT USING lt_SqlCC;
lt_SqlCC.AutoCommit = TRUE
DESTROY lt_SqlCC

return 0
end function

