$PBExportHeader$f_creation_bom_dw_pdcd.srf
$PBExportComments$bom 전개 ( DW ) -- 제품군별 완제품만 하위전개
global type f_creation_bom_dw_pdcd from function_object
end type

forward prototypes
global function integer f_creation_bom_dw_pdcd (string a_date, string a_plant, string a_dvsn, string a_pdcd, string a_cls, string a_srce, string a_chk)
end prototypes

global function integer f_creation_bom_dw_pdcd (string a_date, string a_plant, string a_dvsn, string a_pdcd, string a_cls, string a_srce, string a_chk);string l_s_firstmodel,l_s_plant,l_s_beforeplant,l_s_div, l_s_explant,l_s_exdiv, l_s_pitno , l_s_citno , l_s_itno[50,300], l_s_chkit,l_s_serial[50,300],l_s_serial1,l_s_Srce
string l_s_edtm,l_s_edte,l_s_opcd,l_s_wkct,l_s_exdvsn[50,300],l_s_dvsn[50,300],l_s_beforediv,MySql,l_s_expl[50,300],l_s_xplant[50,300],& 
       l_s_oscd,l_s_level,l_s_opt_itno,l_s_option[50,300],l_s_chg_model[50,300],l_s_model[50,300],l_s_model1,l_s_chg_model1
integer i , j , k , p ,l_n_cnt,l_n_serial,ln_count,II,ln_retrieve_count,JJ,ln_inv101_count
decimal{3} l_n_qty,l_n_qtym[50,300],l_n_qty1
datastore ld_dw,ld_dw_inv101

ld_dw = create datastore
ld_Dw.dataobject = 'd_bom_export_01'
ld_Dw.settransobject(sqlca)
ld_dw_inv101 = create datastore
ld_Dw_inv101.dataobject = 'd_bom_inv101_select'
ld_Dw_inv101.settransobject(sqlca)

// A_CHK = 'C' 로 테스트

// A_CHK = 'A' --> 공장구분없이 전체전개(10/05,10/06 하위품번도 전개), 호환 주부품번 상관없이 전개,자재수불단위 무시
//       = 'B' --> 공장구분없이 전체전개(10/05,10/06 하위품번도 전개), 호환 주품번만 전개,자재 수불단위 무시
//       = 'C' --> 공장별 전개          (10/05,10/06 하위품번 미전개), 호환 주부품번 상관없이 전개,자재 수불단위 무시
//       = 'D' --> 공장별 전개          (10/05,10/06 하위품번 미전개), 호환 주품번만 전개,자재 수불단위 무시
//       = 'E' --> 공장구분없이 전체전개(10/05,10/06 하위품번도 전개), 호환 주부품번 상관없이 전개,자재수불단위 반영
//       = 'F' --> 공장구분없이 전체전개(10/05,10/06 하위품번도 전개), 호환 주품번만 전개,자재 수불단위 반영
//       = 'G' --> 공장별 전개          (10/05,10/06 하위품번 미전개), 호환 주부품번 상관없이 전개,자재 수불단위 반영
//       = 'H' --> 공장별 전개          (10/05,10/06 하위품번 미전개), 호환 주품번만 전개,자재 수불단위 반영
//       = 'I' --> 공장별 전개          (10/05,10/06 하위품번 미전개), 호환 주부품번 상관없이 싱글레벨만 전개,자재 수불단위 반영

select count(*) into :ln_count from qtemp.bomtemp
using sqlca ; 
if sqlca.sqlcode <> 0 then
	Mysql =  " CREATE TABLE QTEMP.BOMTEMP ( TCMCD CHAR(2) NOT NULL, TPLNT CHAR(1) NOT NULL,TDVSN CHAR(1) NOT NULL," + & 
				" TMODL CHAR(15) NOT NULL, TSERL CHAR(60) NOT NULL, TLEVEL CHAR(2) NOT NULL, TPITN CHAR(15) NOT NULL, " + & 
				" TCITN CHAR(15) NOT NULL, TQTYM NUMERIC(8,3) NOT NULL, TQTY1 NUMERIC(8,3) NOT NULL," + & 
				" TWKCT CHAR(4) NOT NULL, TEDTM CHAR(8) NOT NULL, TEDTE CHAR(8) NOT NULL, TOPCD CHAR(1) NOT NULL," + & 
				" TEXPLANT CHAR(1) NOT NULL, TEXDV CHAR(1) NOT NULL, TOSCD CHAR(1) NOT NULL, TOLDPLANT CHAR(1) NOT NULL," + &
				" TOLDDIV CHAR(1) NOT NULL	) " 
	Execute Immediate :mysql ;
else
	delete from qtemp.bomtemp using sqlca ;
end if

ln_inv101_count = ld_Dw_inv101.retrieve(a_plant,a_dvsn,trim(a_pdcd) + '%',trim(a_cls) + '%',trim(a_srce) + '%')
//messagebox("AA",ln_inv101_count)
for JJ = 1 to ln_inv101_count
	k = 0 
	p = 0
	l_n_serial = 0
	l_s_pitno       = trim(ld_dw_inv101.object.itno[jj])
	l_s_firstmodel  = trim(ld_dw_inv101.object.itno[jj])
	l_s_beforeplant = a_plant
	l_s_beforediv   = a_dvsn
	a_chk           = trim(a_chk)
	l_s_srce        = trim(ld_dw_inv101.object.srce[jj])
	if a_chk = 'C' or a_chk = 'D' or a_chk = 'G' or a_chk = 'H' then
		if l_s_srce = '05' or l_s_srce = '06' then
			continue
		end if
	end if 
	if a_chk = 'E' or a_chk = 'F' or a_chk = 'G' or a_chk = 'H' then
		if f_spacechk(l_s_srce) <> -1  and l_s_srce <> '03' then
			continue
		end if
	end if
	l_s_opt_itno = f_option_chk_after(a_plant,a_dvsn,l_s_pitno,a_date) 
	if trim(l_s_opt_itno) = l_s_pitno then
		l_s_opcd = '1'
	elseif f_spacechk(l_s_opt_itno) = -1 then
		l_s_opcd = ' '
	else
		l_s_opcd = '2'
	end if
	if a_chk = 'B' or a_chk = 'D' or a_chk = 'F' or a_chk = 'H' then
		if l_s_opcd = '2' then
			continue
		end if
	end if
					 
	ln_retrieve_count = ld_dw.retrieve(l_s_beforeplant,l_s_beforediv,l_s_pitno,a_date)
	
	for II = 1 to ln_retrieve_count
		l_s_plant   = ld_Dw.getitemstring(II,"plant")
		l_s_div     = ld_Dw.getitemstring(II,"pdvsn")
		l_s_citno   = ld_Dw.getitemstring(II,"pcitn")
		l_s_wkct    = ld_Dw.getitemstring(II,"pwkct")
		l_s_oscd    = ld_Dw.getitemstring(II,"poscd")
		l_s_edtm    = ld_Dw.getitemstring(II,"pedtm")
		l_s_edte    = ld_Dw.getitemstring(II,"pedte")
		l_n_qty     = ld_Dw.getitemnumber(II,"pqtym")
		l_s_explant = ld_Dw.getitemstring(II,"pexplant")
		l_s_exdiv   = ld_Dw.getitemstring(II,"pexdv")
	
		select srce into:l_s_srce from pbinv.inv101
			where comltd = :g_s_company and xplant = :l_s_plant and div = :l_s_div and itno = :l_s_citno using sqlca ;
	
		if k <> 0 then
			l_s_chg_model[1,k] = ''
		end if
		l_s_opt_itno = f_option_chk_after(l_s_plant,l_s_div,l_s_citno,a_date) 
		if trim(l_s_opt_itno) = trim(l_s_citno) then
			l_s_opcd = '1'
		elseif f_spacechk(l_s_opt_itno) = -1 then
			l_s_opcd = ' '
		else
			l_s_opcd = '2'
			if k <> 0 then
				l_s_chg_model[1,k] = 'Y'
			end if
		end if
		if a_chk = 'B' or a_chk = 'D' or a_chk = 'F' or a_chk = 'H' then
			if l_s_opcd = '2' then
				continue
			end if
		end if
		if a_chk = 'C' or a_chk = 'D' or a_chk = 'G' or a_chk = 'H' then
		else
			if l_s_srce 	= '05' 	or 	l_s_srce 	= 	'06' then
				l_s_plant	= 	l_s_explant
				l_s_div 		=	l_s_exdiv
			end if
		end if
		i = 1
		k++
		l_n_serial++
		l_s_xplant[1,k] = trim(l_s_plant)
		l_s_dvsn[1,k]   = trim(l_s_div)
		l_s_itno[1,k]   = trim(l_s_citno)
		l_n_qtym[1,k]   = l_n_qty
		l_s_expl[1,k]   = trim(l_s_explant)
		l_s_exdvsn[1,k] = trim(l_s_exdiv)
		l_s_option[1,k] = l_s_opcd
		l_s_model[1,k]  = l_s_pitno
		l_s_serial[1,k] = string(l_n_Serial,"000")
		l_s_serial1     =	string(l_n_Serial,"000")
		ln_count++
		INSERT INTO QTEMP.BOMTEMP VALUES (:G_S_COMPANY,:a_plant,:a_dvsn,:l_s_pitno,
						:l_s_serial1,'1',:l_s_pitno,:l_s_citno,:l_n_qty,:l_n_qty,
						:l_s_wkct,:l_s_edtm,:l_s_edte,:l_s_opcd,:l_s_explant,:l_s_exdiv,:l_s_oscd,:l_s_plant,:l_s_div ) using sqlca ;
	next
	
	
	///  First Step Finish
	  
	for i = 1 to 50
	  for j = 1 to k
			l_s_pitno = l_s_itno[i,j]
			l_s_plant = l_s_xplant[i,j]
			l_s_div   = l_s_dvsn[i,j]
	
			select srce into:l_s_srce from pbinv.inv101
				where comltd = :g_s_company and xplant = :l_s_xplant[i,j] and div = :l_s_dvsn[i,j] and itno = :l_s_pitno using sqlca ;
	
			if a_chk = 'C' or a_chk = 'D' or a_chk = 'G' or a_chk = 'H' then
				if l_s_srce = '05' or l_s_srce = '06' then
					continue
				end if
			end if
			
			if a_chk = 'E' or a_chk = 'F' or a_chk = 'G' or a_chk = 'H' or a_chk = 'I' then
				if f_spacechk(l_s_srce) <> -1 and l_s_srce <> '03' then
					continue
				end if
			end if		
			
			if a_chk = 'I' and l_s_option[i,j] <> '2' then
				continue
			end if
			
			if l_s_option[i,j] = '2' then
				if trim(l_s_chg_model[i,j]) = 'Y' then
					l_s_model1 = l_s_pitno
				elseif trim(l_s_chg_model[i,j]) <> 'Y' then
					l_s_model1 = l_s_model[i,j]
				end if
			else
				l_s_model1 = l_s_firstmodel
			end if
			l_n_serial = 0
			if a_chk = 'C' or a_chk = 'D' or a_chk = 'G' or a_chk = 'H' then
			else
				if l_s_srce 	= '05' 	or 	l_s_srce 	= 	'06' then
					l_s_plant	= 	l_s_expl[i,j]
					l_s_div 		=	l_s_exdvsn[i,j]
				end if
			end if
			ln_retrieve_count = ld_dw.retrieve(l_s_plant,l_s_div,l_s_pitno,a_date)
			for II = 1 to ln_retrieve_count
				l_s_plant   = ld_Dw.getitemstring(II,"plant")
				l_s_div     = ld_Dw.getitemstring(II,"pdvsn")
				l_s_citno   = ld_Dw.getitemstring(II,"pcitn")
				l_s_wkct    = ld_Dw.getitemstring(II,"pwkct")
				l_s_oscd    = ld_Dw.getitemstring(II,"poscd")
				l_s_edtm    = ld_Dw.getitemstring(II,"pedtm")
				l_s_edte    = ld_Dw.getitemstring(II,"pedte")
				l_n_qty     = ld_Dw.getitemnumber(II,"pqtym")
				l_s_explant = ld_Dw.getitemstring(II,"pexplant")
				l_s_exdiv   = ld_Dw.getitemstring(II,"pexdv")
	
				select srce into:l_s_srce from pbinv.inv101
					where comltd = :g_s_company and xplant = :l_s_plant and div = :l_s_div and itno = :l_s_citno using sqlca ;
				
				l_s_opt_itno = trim(f_option_chk_after(l_s_plant,l_s_div,l_s_citno,a_date))
				if l_s_opt_itno <> '' and trim(l_s_opt_itno) <> trim(l_s_citno) then
					l_s_chg_model1 = 'Y'
					l_s_opcd       = '2'
				else
					l_s_chg_model1 = 'N'
				end if
				if  l_s_option[i,j] = '2' then
					l_s_chg_model1 = 'N'
					l_s_opcd = '2'
				elseif trim(l_s_opt_itno) = trim(l_s_citno) then
					l_s_opcd = '1'
				elseif f_spacechk(l_s_opt_itno) = -1 then
					l_s_opcd = ' '
				end if			
	
				if a_chk = 'B' or a_chk = 'D' or a_chk = 'F' or a_chk = 'H' then
					if l_s_opcd = '2' then
						continue
					end if
				end if
				
				if a_chk = 'C' or a_chk = 'D' or a_chk = 'G' or a_chk = 'H' then
				else
					if l_s_srce 	= '05' 	or 	l_s_srce 	= 	'06' then
						l_s_plant	= 	l_s_explant
						l_s_div 		=	l_s_exdiv
					end if
				end if
				p++ 
				l_n_serial++
				l_s_xplant[i+1,p] = trim(l_s_plant)
				l_s_expl[i+1,p]   = trim(l_s_explant)
				l_s_dvsn[i+1,p]   = trim(l_s_div)
				l_s_exdvsn[i+1,p] = trim(l_s_exdiv)
				l_s_model[i+1,p]  = l_s_model1
				l_s_chg_model[i+1,p] = l_s_chg_model1
				l_s_option[i+1,p] = l_s_opcd
				l_s_itno[i+1,p]   = trim(l_s_citno)
				l_n_qtym[i+1,p]   = l_n_qty * l_n_qtym[i,j]
				l_n_qty1          = l_n_qty * l_n_qtym[i,j]
				l_s_serial[i+1,p] = l_s_serial[i,j] + string(l_n_Serial,"000")
				l_s_serial1       = l_s_serial[i,j] + string(l_n_Serial,"000")
				l_s_level         = string(i+1)
				ln_count++
				INSERT INTO QTEMP.BOMTEMP VALUES (:G_S_COMPANY,:a_plant,:a_dvsn,:l_s_firstmodel,:l_s_serial1,:l_s_level, 
						  :l_s_pitno,:l_s_citno,:l_n_qty,:l_n_qty1,:l_s_wkct,:l_s_edtm,:l_s_edte,:l_s_opcd,:l_s_explant,:l_s_exdiv,:l_s_oscd,
						  :l_s_plant,:l_s_div ) using sqlca;
			next
	  next 
	  if p = 0 then
		  exit	
	  end if
	  k = p
	  p = 0
	next
next 
return ln_count
 
end function

