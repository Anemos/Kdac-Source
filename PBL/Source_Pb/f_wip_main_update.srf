$PBExportHeader$f_wip_main_update.srf
$PBExportComments$자재 -> 재공에 데이타 반영 함수
global type f_wip_main_update from function_object
end type

forward prototypes
global function integer f_wip_main_update (string a_comltd, string a_sliptype, string a_srno, string a_srno1, string a_srno2)
end prototypes

global function integer f_wip_main_update (string a_comltd, string a_sliptype, string a_srno, string a_srno1, string a_srno2);string ls_plant, ls_dvsn, ls_itno, ls_vsrno, ls_cls, ls_srce
string ls_xuse, ls_rtngub, ls_sqlerr, ls_nuse, ls_tdte4
integer li_rtn, li_sqlcode
long ll_chkcnt

select xplant, div, itno, vsrno, cls, srce, xuse, rtngub, tdte4
into :ls_plant,:ls_dvsn,:ls_itno,:ls_vsrno,:ls_cls,:ls_srce, :ls_xuse, :ls_rtngub, :ls_tdte4
from pbinv.inv401
where comltd = :a_comltd and
      sliptype = :a_sliptype and
      srno = :a_srno and
      srno1 = :a_srno1 and
      srno2 = :a_srno2 using sqlca;

if sqlca.sqlcode <> 0 then
	return -1
end if

if ls_cls = '10' or ls_cls = '40' or ls_cls = '50' then
	if ls_srce >= '01' and ls_srce <= '07' then
		if ls_srce = '06' then
			return 0
		end if
	else
		return 0
	end if
else
	return 0
end if

choose case a_sliptype
	case 'IS','IP','RS'
		if ls_xuse = '04' then
			if a_sliptype = 'RS' then
				if ls_rtngub = '02' then
					return -1
				else
					if ls_cls = '10' and ls_srce = '03' then
						// Call f_wip_input_update
						li_rtn = f_wip_input_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
						// Call f_wip_line_use_update
						li_rtn = f_wip_line_use_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
					else
						// Call f_wip_input_update
						li_rtn = f_wip_input_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
					end if
				end if
			else
				if ls_cls = '10' and ls_srce = '03' then
					// Call f_wip_input_update
					li_rtn = f_wip_input_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
					// Call f_wip_line_use_update
					li_rtn = f_wip_line_use_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
				else
					// Call f_wip_input_update
					li_rtn = f_wip_input_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
				end if
			end if
		elseif ls_xuse = '07' then
			// 원자재 유상불출은 재공에서 제외, 단 재공품인 경우에는 사용내역생성. 투입에서 제외
			if ls_cls = '10' and ls_srce = '03' then
				if a_sliptype = 'RS' then
					if ls_rtngub = '02' then
						return 0
					else
						li_rtn = f_wip_line_use_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
					end if
				else
					li_rtn = f_wip_line_use_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
				end if
			end if
			// 유상업체재공을 위한 로직 추가 ( 2007.09 )
			li_rtn = f_wip_input_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
		else
			// Call f_wip_input_update
			li_rtn = f_wip_input_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
		end if
	case 'RM','SM'
		// Call f_wip_line_use_update
		li_rtn = f_wip_line_use_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
	case 'SA','SR'
		if ls_cls = '10' and ( ls_srce = '01' or ls_srce = '02' ) then
			// Call f_wip_input_update
			li_rtn = f_wip_input_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
		else
			return 0
		end if
	case 'RP', 'SS'
		if mid(ls_vsrno,1,1) <> 'D' or (a_sliptype = 'SS' and ls_srce <> '04') then
			return 0
		end if
		if ls_cls = '50' and a_sliptype = 'RP' then
			if ls_plant = 'D' and (ls_dvsn = 'A' or ls_dvsn = 'V') then
				//pass
			else
				if ls_plant = 'B' or ls_plant = 'K' then
					SELECT NUSE INTO :ls_nuse
					FROM PBINV.INV101
					WHERE Comltd = '01' AND XPLANT = :ls_plant AND 
							DIV = :ls_dvsn AND ITNO = :ls_itno
					using sqlca;
					
					if ls_nuse <> 'Y' then
						// Call f_wip_input_update
						li_rtn = f_wip_input_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
					end if
				else
					// Call f_wip_input_update
					li_rtn = f_wip_input_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
				end if
			end if
		end if
		// 유상사급업체 품목 추가 && BOM 데이타 존제 체크( 2007.09 )
		// BOM001 CHECK
		select count(*) into :ll_chkcnt from pbpdm.bom001
			where pcmcd = :a_comltd AND plant = :ls_plant AND
					pdvsn = :ls_dvsn AND ppitn = :ls_itno AND
					(( pedte = ' '  and pedtm <= :ls_tdte4 ) or
					( pedte <> ' ' and pedtm <= :ls_tdte4 and pedte >= :ls_tdte4 ))
			using sqlca;
		if ll_chkcnt > 0 then
			// Call f_wip_vendor_use_update
			li_rtn = f_wip_vendor_use_update(a_comltd,a_sliptype,a_srno,a_srno1,a_srno2)
		end if
	case else
		return 0
end choose

return li_rtn
end function

