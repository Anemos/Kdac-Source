$PBExportHeader$f_time_calcu.srf
$PBExportComments$시간계산하기(시작일시~~종료일시)
global type f_time_calcu from function_object
end type

forward prototypes
global function integer f_time_calcu (string ls_from_date, string ls_from_time, string ls_to_date, string ls_to_time, ref string ls_relative_time)
end prototypes

global function integer f_time_calcu (string ls_from_date, string ls_from_time, string ls_to_date, string ls_to_time, ref string ls_relative_time);//argument 설명//
//ls_from_date : 시작일로써 예)19980506  ->1998년 5월 6일을 의미함
//ls_from_time : 시작 시간으로써 예)1230 ->12시 30분을 의미함
//ls_to_date   : 종료일로써 예)19980507
//ls_to_time   : 종료시간으로써  예)1235
//ls_relative_time : 차이 시간   예)2405 ->24시간 5분을 의미함  for RETURN

integer li_a,li_b,li_c,li_d,li_e,li_f,li_d1
date date1, date2
string rtn3

if mid(ls_from_date,5,1) ='/' or mid(ls_from_date,5,1) ='-' then
	date1 = date(ls_from_date)
	date2 = date(ls_to_date)
else
	date1 = date(mid(ls_from_date,1,4)+'-'+mid(ls_from_date,5,2)+'-'+mid(ls_from_date,7,2))
	date2 = date(mid(ls_to_date,1,4)+'-'+mid(ls_to_date,5,2)+'-'+mid(ls_to_date,7,2))
end if	

rtn3 = string(DaysAfter(date1, date2))
li_a = integer(rtn3) * 24 * 60 //소요일을 분으로 변환
li_b = integer(mid(ls_from_time,1,2))*60 +integer(mid(ls_from_time,3,4)) //시작 시간을 분으로 변환
li_c = integer(mid(ls_to_time,1,2))*60 + integer(mid(ls_to_time,3,4))   //종료 시간을 분으로 변환
li_d = li_a - li_b + li_c  //총 소요 분을 계산

li_d1 = li_d/60  //총 소요 분을 시간으로 변환
li_e = truncate(li_d1,0) //총 소요 시간을 구하기 위한 소수점을 제거함
li_f = mod(li_d,60)      //나머지 분을 표현

if integer(mid(string(li_f),1,2)) <10  and li_e >= 10 then
	ls_relative_time = string(li_e) + '0'+mid(string(li_f),1,2)  //스트링 형태로 다시 변환
end if
if integer(mid(string(li_f),1,2)) <10 and li_e < 10 then
	ls_relative_time = '0'+string(li_e) +'0'+ mid(string(li_f),1,2) 
end if
if integer(mid(string(li_f),1,2)) >=10 and li_e >=10 then
	ls_relative_time = string(li_e) + mid(string(li_f),1,2) 
end if
if integer(mid(string(li_f),1,2)) >=10 and li_e < 10 then
	ls_relative_time = '0'+string(li_e) + mid(string(li_f),1,2)
end if

return 1

	
end function

