$PBExportHeader$f_pisr_incomevalidchk.srf
$PBExportComments$입고간판 ValidChk
global type f_pisr_incomevalidchk from function_object
end type

forward prototypes
global function integer f_pisr_incomevalidchk (ref datawindow fdw, string fs_partkbno, string fs_areacode, string fs_divcode, string fs_jobdate)
end prototypes

global function integer f_pisr_incomevalidchk (ref datawindow fdw, string fs_partkbno, string fs_areacode, string fs_divcode, string fs_jobdate);String	ls_areaCode, ls_divCode, ls_itemCode, ls_suppCode
String	ls_KBStatus, ls_OrderPossible, ls_useFlag, ls_ReprintFlag, ls_kbactivegubun
Long		ll_Row

fdw.SetTransObject (sqlpis)
ll_Row = fdw.Retrieve(fs_partkbno, '%')
If ll_Row = 0 Then 
	MessageBox( "입력오류", "존재하지 않는 간판입니다. ", StopSign! )
	Return -1
End If

ls_areaCode			= fdw.GetItemString( ll_Row, 'areacode' )
ls_divCode			= fdw.GetItemString( ll_Row, 'divisioncode' )
If ls_areaCode <> fs_areacode Or ls_divCode <> fs_divcode Then 
	MessageBox( "입력오류", "해당 공장의 간판이 아닙니다.", StopSign! )
	Return -1
End If

//ls_useFlag			= fdw.GetItemString( ll_Row, 'useflag' )
//If ls_useFlag = 'Y' Then 
//	MessageBox( "입력오류", "사용중단된 간판입니다. ", StopSign! )
//	Return -1
//End If
ls_kbactivegubun	= fdw.GetItemString( ll_Row, 'kbactivegubun' )
If ls_kbactivegubun = 'S' Then 
	MessageBox( "입력오류", "Sleeping 상태의 간판입니다. ", StopSign! )
	Return -1
End If

ls_KBStatus			= fdw.GetItemString( ll_Row, 'partkbstatus' )
CHOOSE CASE ls_KBStatus
CASE 'A'
	MessageBox( "입력오류", "발주상태 간판입니다. ", StopSign! )
	Return -1
CASE 'C', 'D'
	MessageBox( "입력오류", "발주대기상태 간판입니다.", StopSign! )
	Return -1
END CHOOSE

///////////////////////////////////////////
//	당일 BOM구성품 확인
/////////////////////////////////////////// 
Long		ll_Cnt
String	ls_buySource

ls_itemCode	= fdw.GetItemString( ll_Row, 'itemcode' )

  SELECT TMSTMODEL.ItemBuySource  
    INTO :ls_buySource  
    FROM TMSTMODEL  
   WHERE TMSTMODEL.AreaCode 		= :ls_areaCode AND  
         TMSTMODEL.DivisionCode 	= :ls_divCode 	AND  
         TMSTMODEL.ItemCode 		= :ls_itemCode  
	USING	sqlpis	;
If sqlpis.SqlCode <> 0 Then
	MessageBox( "입력오류", "해당 공장 취급품목이 아닙니다.", StopSign! )
	Return -1
End If

If ls_buySource = '04' Then 	//구입선 '01'외자,'02'내자,'03'자가품,'04'사급품,'05'타공장제작이체품,'06'타공장사급이체품
  SELECT Count(BOMPItemNo)  
    INTO :ll_Cnt 
    FROM TMSTBOM  
   WHERE AreaCode 		= :ls_areaCode AND  
         DivisionCode = :ls_divCode 	AND  
         BOMPItemNo 	= :ls_itemCode AND  
         CostGubun 	= '2'				AND  //BOM유무상 구분 '2':무상
			case when ApplyFrom 	= '    .  .  ' then '1980.01.01' else ApplyFrom end <= :fs_jobdate AND  
         case when ApplyTo 	= '    .  .  ' then '9999.12.31' else ApplyTo 	end >= :fs_jobdate 
	USING	sqlpis	;
	If ll_Cnt < 1 Then 
		MessageBox( "입력오류", "당일 BOM항목에 해당하지 않는 품목의 간판번호입니다.", StopSign! )
		Return -1
	End If
End IF

///////////////////////////////////////////
//품질검사 확인
///////////////////////////////////////////
String	ls_ReceiptDate
Integer  li_Net

ls_ReceiptDate = fdw.GetItemString( ll_Row, 'partreceiptdate' )
If ls_ReceiptDate < '2002.12.09' Then 
//	li_Net = MessageBox("간판확인요청", "구 시스템에서 납품받은 간판은 합격여부를 확인할 수 없습니다. ~r~n~r~n" + &
//													"해당 간판을 입고처리 하시겠습니까 ?", &
//								Question!, YesNo!, 2)
//	IF li_Net <> 1 THEN	Return -1
	Return ll_Row
End If

String	ls_qcResult, ls_deliveryNo, ls_chkstop
str_pisr_partkb lstr_partkb

ls_suppCode	= fdw.GetItemString( ll_Row, 'suppliercode' )

///////////////////////////////////////
// 거래대상 업체유무 체크 - 2004.09.17
///////////////////////////////////////
SELECT ISNULL(TMSTSUPPLIER.Xstop,'')    
	INTO :ls_chkstop  
	FROM TMSTSUPPLIER  
	WHERE TMSTSUPPLIER.SupplierCode = :ls_suppCode   
	using sqlpis;

if ls_chkstop = 'X' then
	MessageBox( "입고처리오류" ,"거래중단된 외주업체입니다.", StopSign! )
	Return -1
end if

///////////////////////////////////////
// 거래대상 업체, 품번 중단 유무 체크 - 2006.06.21
///////////////////////////////////////
SELECT ISNULL(Xstop,'')    
	INTO :ls_chkstop  
	FROM TMSTPARTCOST  
	WHERE SupplierCode = :ls_suppCode AND ItemCode = :ls_itemCode  
	using sqlpis;

if ls_chkstop = 'X' then
	MessageBox( "입고처리오류" ,"해당업체에서 거래중단된 품번입니다.", StopSign! )
	Return -1
end if

// 업체유무체크 끝
lstr_partkb.areacode		= ls_areaCode
lstr_partkb.divcode		= ls_divCode
lstr_partkb.suppcode		= ls_suppCode
lstr_partkb.itemcode		= ls_itemCode
lstr_partkb.applydate	= fs_jobdate

If Not f_pisr_tqqcitem(sqlpis, lstr_partkb) Then	//유검사품목

	ls_deliveryNo	= fdw.GetItemString( ll_Row, 'deliveryno' )
	
  SELECT TQQCRESULT.JUDGEFLAG  
    INTO :ls_qcResult  
    FROM TQQCRESULT  
   WHERE TQQCRESULT.AREACODE 		= :ls_areaCode 	AND  
         TQQCRESULT.DIVISIONCODE = :ls_divCode 		AND  
         TQQCRESULT.SUPPLIERCODE = :ls_suppCode 	AND  
         TQQCRESULT.DELIVERYNO 	= :ls_deliveryNo 	AND  
         TQQCRESULT.ITEMCODE 		= :ls_itemCode 
	USING	sqlpis	;

	If sqlpis.SqlCode <> 0 Then
		MessageBox( "입고처리오류", "품질검사정보를 찾는데 실패했습니다.", StopSign! )
		Return -1
	End If

	CHOOSE CASE ls_qcResult	//'1':합격, '2':불합격, '3':선별합격, '9':품질검사대기
	
//		CASE '1'
//				MessageBox( "입력오류", "합격 처리된 간판입니다.", StopSign! )
//				Return -1
		CASE '2'
				MessageBox( "입력오류", "불합격 처리된 간판입니다.", StopSign! )
				Return -1
		CASE '3'		//선별일 경우 합격처리 여부를 확인할 수 없음
				li_Net = MessageBox("간판확인요청", "선별합격 간판에 대해서는 합격여부를 확인할 수 없습니다. ~r~n~r~n" + &
																"해당 간판을 입고처리 하시겠습니까 ?", &
											Question!, OKCancel!, 2)
				IF li_Net <> 1 THEN	Return -1
		CASE '9'
				MessageBox( "입력오류", "품질검사가 완료되지 않은 간판입니다.", StopSign! )
				Return -1
	END CHOOSE
End If

return ll_Row


end function

