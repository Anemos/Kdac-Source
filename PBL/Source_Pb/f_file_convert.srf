$PBExportHeader$f_file_convert.srf
global type f_file_convert from function_object
end type

forward prototypes
global function boolean f_file_convert (string fs_option, ref string fs_sourcefile, ref string fs_targetfile)
end prototypes

global function boolean f_file_convert (string fs_option, ref string fs_sourcefile, ref string fs_targetfile);//////////////////////////////////////////////////////////////////////////////////////
// Name : f_file_coonvert
//	Remark : Excel File Format(XLS File) <--> Tab separated File Format (TXT File)
//	Argument :	fs_option	: '1' - Excel file format(TXT File --> XLS File)
//									  '2' - Tab separated File Format(XLS File --> TXT File)
//////////////////////////////////////////////////////////////////////////////////////
Oleobject lo_excel
Integer	li_result, li_row, li_col, li_filenum, li_fileread, li_pos
String	ls_data, ls_importstr, ls_newfile

lo_excel		= Create oleobject
li_result	= lo_excel.ConnectToNewObject( "excel.application" )
lo_excel.Application.Visible	= False

If li_result <> 0 Then
   //Fail
	Destroy lo_excel
	Return False
End If

//Target File will be deleted if it exists
If fs_option = '1' Then
	li_pos		= Pos(fs_sourcefile, '.TXT', 1)
	ls_newfile	= Replace(fs_sourcefile, li_pos, 4, '.XLS')
ElseIf fs_option = '2' Then
	li_pos		= Pos(fs_sourcefile, '.XLS', 1)
	ls_newfile	= Mid(fs_sourcefile, 1, Len(fs_sourcefile) - 3) + 'TXT'
//	ls_newfile	= Replace(fs_sourcefile, li_pos, 4, '.TXT')
End If
FileDelete(ls_newfile)

//FileOpen
lo_excel.WorkBooks.Open(fs_sourcefile)
lo_excel.WindowState = 2

//-4143 :Excel Format, -4158: Tab separated Format
If fs_option = '1' Then
	lo_excel.application.activeworkbook.saveas(ls_newfile, -4143)
ElseIf fs_option = '2' Then
	lo_excel.application.activeworkbook.saveas(ls_newfile, -4158)
End If

//Close
lo_excel.application.activeworkbook.Close(False)

//OLE Destory
lo_excel.DisConnectObject()
Destroy lo_excel

fs_targetfile	= ls_newfile
Return	True
end function

