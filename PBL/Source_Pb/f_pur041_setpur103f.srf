$PBExportHeader$f_pur041_setpur103f.srf
$PBExportComments$결재용 품목단가(구분,dw)
global type f_pur041_setpur103f from function_object
end type

forward prototypes
global function integer f_pur041_setpur103f (string as_gubun, datawindow adw_1, ref string as_msg)
end prototypes

global function integer f_pur041_setpur103f (string as_gubun, datawindow adw_1, ref string as_msg);////구분별로 업체품목단가정보 pur103구조를 pur103f에 기록처리
long ll_row, ll_rcnt
string ls_wsrno, ls_desc

STRING ls_VSRC,  ls_DEPT,  ls_VSRNO,  ls_ITNO,  ls_ITNO1,  ls_ITNM1,  ls_SPEC1,  ls_UNIT1,  ls_WSRC 
DEC {4} ld_CONVQTY1
dec {2} ld_dcost, ld_chcs, ld_fcost, ld_lcost
dec {5} ld_ecost
dec {1} ld_pqty
dec {0} ld_xrate, ld_shrt
string  ls_DADJDT,  ls_DCURR,  ls_DSHEET,  ls_EADJDT,  ls_ECURR,  ls_ESHEET,  ls_ARR,  ls_XPAY,  ls_VZERO,  ls_QCCD
string  ls_ADJDT,   ls_FRPDT,  ls_XPLAN,   ls_STRT,    ls_FPURNO,  ls_FPINDT,  ls_PURNO,  ls_PINDT,  ls_RQNO,  ls_SRNO
string  ls_SRNO1,   ls_DKDT,   ls_XSTOP,   ls_EXTD
//2009.04.29
String ls_pmul, ls_mul, ls_cmul, ls_sogubdt
Dec{4} ld_pcost1, ld_pcost2, ld_ingot
//2009.06.18
String ls_pmul2, ls_mul2, ls_cmul2
Dec{4} ld_pcost3, ld_pcost4
//  
String ls_pxunit1, ls_pxunit2, ls_pbxunit1, ls_pbxunit2	//2009.07.09

ls_desc = as_msg
as_msg = ''

for ll_row = 1 to adw_1.rowcount() 
  //COMLTD	= adw_1.object.dept[ll_row]  
  ls_VSRC    = adw_1.object.vsrc[ll_row]   
  ls_DEPT   = adw_1.object.dept[ll_row]   
  ls_VSRNO  = adw_1.object.vsrno[ll_row]   
  ls_ITNO   = adw_1.object.itno[ll_row]   
  ls_ITNO1  = adw_1.object.itno1[ll_row]   
  ls_ITNM1  = adw_1.object.itnm1[ll_row]  
  ls_SPEC1  = adw_1.object.spec1[ll_row]   
  ls_UNIT1  = adw_1.object.unit1[ll_row]   
  ls_WSRC   = adw_1.object.wsrc[ll_row]   
  ld_CONVQTY1  = adw_1.object.convqty1[ll_row]   
  ls_DADJDT  = adw_1.object.dadjdt[ll_row]  
  ls_DCURR  = adw_1.object.dcurr[ll_row]   
  ld_DCOST  = adw_1.object.dcost[ll_row]   
  ls_DSHEET  = adw_1.object.dsheet[ll_row]   
  ls_EADJDT  = adw_1.object.eadjdt[ll_row]   
  ls_ECURR  = adw_1.object.ecurr[ll_row]   
  ld_ECOST  = adw_1.object.ecost[ll_row]   
  ls_ESHEET  = adw_1.object.esheet[ll_row]   
  ls_ARR  = adw_1.object.arr[ll_row]   
  ls_XPAY  = adw_1.object.xpay[ll_row]   
  ls_VZERO  = adw_1.object.vzero[ll_row]   
  ls_QCCD  = adw_1.object.qccd[ll_row]   
  ls_ADJDT  = adw_1.object.adjdt[ll_row]   
  ls_FRPDT  = adw_1.object.frpdt[ll_row]   
  ld_PQTY  = adw_1.object.pqty[ll_row]   
  ld_XRATE  = adw_1.object.xrate[ll_row]   
  ld_SHRT  = adw_1.object.shrt[ll_row]   
  ls_XPLAN  = adw_1.object.xplan[ll_row]   
  ls_STRT  = adw_1.object.strt[ll_row]   
  ld_CHCS  = adw_1.object.chcs[ll_row]   
  ls_FPURNO  = adw_1.object.fpurno[ll_row]   
  ls_FPINDT  = adw_1.object.fpindt[ll_row]   
  ld_FCOST  = adw_1.object.fcost[ll_row]   
  ls_PURNO  = adw_1.object.purno[ll_row]   
  ls_PINDT  = adw_1.object.pindt[ll_row]   
  ls_RQNO  = adw_1.object.rqno[ll_row]   
  ls_SRNO  = adw_1.object.srno[ll_row]   
  ls_SRNO1  = adw_1.object.srno1[ll_row]   
  ls_DKDT  = adw_1.object.dkdt[ll_row]   
  ld_LCOST  = adw_1.object.lcost[ll_row]   
  ls_XSTOP  = adw_1.object.xstop[ll_row]  
  ls_EXTD  = adw_1.object.extd[ll_row]   
//  ls_INPTID  = adw_1.object.dept[ll_row]   
//  ls_UPDTDT  = adw_1.object.dept[ll_row]   
//  ls_UPDTID  = adw_1.object.dept[ll_row]   
//  ls_UPDTDT  = adw_1.object.dept[ll_row]   
//  ls_IPADDR  = adw_1.object.dept[ll_row]  
//  ls_MACADDR  = adw_1.object.dept[ll_row]   
	//2009.04.29
	ls_pmul  	=  adw_1.object.pmul[ll_row]
	ls_mul  		=  adw_1.object.mul[ll_row]
	ls_cmul  	=  adw_1.object.cmul[ll_row]
	ld_pcost1  	=  adw_1.object.pcost1[ll_row]
	ld_pcost2  	=  adw_1.object.pcost2[ll_row]
	ld_ingot  	=  adw_1.object.ingot[ll_row]
	ls_sogubdt  =  adw_1.object.sogubdt[ll_row]
	//end : 2009.04.29
	//2009.06.18
	ls_pmul2  	=  adw_1.object.pmul2[ll_row]
	ls_mul2  	=  adw_1.object.mul2[ll_row]
	ls_cmul2  	=  adw_1.object.cmul2[ll_row]
	ld_pcost3  	=  adw_1.object.pcost3[ll_row]
	ld_pcost4  	=  adw_1.object.pcost4[ll_row]
	//end : 2009.06.18
	
	//2009.07.09
	ls_pxunit1 	=  adw_1.object.pxunit1[ll_row]
	ls_pxunit2  =  adw_1.object.pxunit2[ll_row]
	ls_pbxunit1 =  adw_1.object.pbxunit1[ll_row]
	ls_pbxunit2 =  adw_1.object.pbxunit2[ll_row]
	//end : 2009.07.09
	
	select coalesce(max(wsrno),'00000')
	into :ls_wsrno
	from pbpur.pur103f
	where comltd = '01'
	and  vsrc = :ls_vsrc
	and  dept = :ls_dept
	and  vsrno = :ls_vsrno
	and  itno  = :ls_itno
	and  chgdt = :g_s_date;
	//전산시리얼 pur103f 맞춤.
	ls_wsrno = string(long(ls_wsrno) + 1,'00000')
	  INSERT INTO PBPUR.PUR103F  
         ( COMLTD,          VSRC,        DEPT,        VSRNO,          ITNO,         CHGDT,       WSRNO,       ITNO1,       ITNM1,   
           SPEC1,          UNIT1,        WSRC,        CONVQTY1,       DADJDT,       DCURR,       DCOST,       DSHEET,      EADJDT,   
           ECURR,          ECOST,        ESHEET,      ARR,            XPAY,         VZERO,       QCCD,        ADJDT,       FRPDT,   
           PQTY,           XRATE,        SHRT,        XPLAN,          STRT,         CHCS,        FPURNO,      FPINDT,      FCOST,   
           PURNO,          PINDT,        RQNO,        SRNO,           SRNO1,        DKDT,        LCOST,       XSTOP,       EXTD,   
           INPTID,         INPTDT,       UPDTID,      UPDTDT,         IPADDR,       MACADDR,     GUBUN,       STCD,        DESC,   
           CONDT ,
			  PMUL,				MUL,			  CMUL,			PCOST1,			 PCOST2,			INGOT,		 SOGUBDT,
			  PMUL2,				MUL2,			  CMUL2,			PCOST3,			 PCOST4,
			  PXUNIT1,			PXUNIT2,		  PBXUNIT1,		PBXUNIT2
			 )  
     values
          ( '01',          :ls_VSRC,     :ls_DEPT,    :ls_VSRNO,      :ls_ITNO,     :g_s_date,   :ls_WSRNO,    :ls_ITNO1,   :ls_ITNM1,   
			  :ls_SPEC1,      :ls_UNIT1,    :ls_WSRC,    :ld_CONVQTY1,   :ls_DADJDT,   :ls_DCURR,   :ld_DCOST,    :ls_DSHEET,  :ls_EADJDT,   
			  :ls_ECURR,      :ld_ECOST,    :ls_ESHEET,  :ls_ARR,        :ls_XPAY,     :ls_VZERO,   :ls_QCCD,     :ls_ADJDT,   :ls_FRPDT,   
			  :ld_PQTY,       :ld_XRATE,    :ld_SHRT,    :ls_XPLAN,      :ls_STRT,     :ld_CHCS,    :ls_FPURNO,   :ls_FPINDT,  :ld_FCOST,   
			  :ls_PURNO,      :ls_PINDT,    :ls_RQNO,    :ls_SRNO,       :ls_SRNO1,    :ls_DKDT,    :ld_LCOST,    :ls_XSTOP,   :ls_EXTD,   
			  :g_s_empno,     :g_s_date,       '',         '',           :g_s_IPADDR,  :g_s_MACADDR,  :as_GUBUN,    'A',       :ls_desc,   
				  '' ,
			  :ls_pmul,			:ls_mul,		  :ls_cmul,		:ld_pcost1,		 :ld_pcost2,	:ld_ingot, 	 :ls_sogubdt,
			  :ls_pmul2,		:ls_mul2,	  :ls_cmul2,	:ld_pcost3,		 :ld_pcost4,
			  :ls_pxunit1,		:ls_pxunit2,  :ls_pbxunit1, :ls_pbxunit2
			  
			 )  using sqlca;
	if SQLCA.SQLCODE <> 0  OR SQLCA.SQLNROWS <= 0 then
		messagebox('확인','승인요청용 품목단가정보(PUR103F) 등록중, 오류발생! 급히 연락바랍니다!  ~r~n' + string(sqlca.sqlerrtext) ,Exclamation!)
		as_msg = '승인요청용 품목단가정보(PUR103F) 등록중, 오류발생! [오류코드: ' + string(sqlca.sqlerrtext) +' ]'
		return -1
	end if
	////MESSAGEBOX('SQLCOCE',STRING(SQLCA.SQLCODE))		  
	//
next

return 0
end function

