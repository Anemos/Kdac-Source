$PBExportHeader$f_check_tsrorder_qty.srf
global type f_check_tsrorder_qty from function_object
end type

forward prototypes
global function integer f_check_tsrorder_qty (string fs_areacode, string fs_divisioncode, string fs_srno)
end prototypes

global function integer f_check_tsrorder_qty (string fs_areacode, string fs_divisioncode, string fs_srno);string 		ls_return,ls_srno	
integer	ln_count,ln_qty,ln_loadqty,ln_return
transaction ts_transaction

ts_Transaction = create transaction 

if	f_connection_sqlserver_any(fs_areacode,fs_divisioncode,ts_transaction)	=	false	then
	messagebox("확인","해당 공장 서버 연결중 오류 발생. 시스템개발팀으로 연락바랍니다")
	destroy ts_Transaction
	return -1
end if

ls_srno	=	fs_srno	+	'%'
select isnull(shipremainqty,0) into :ln_qty	from tsrorder
	where	srno	like		:ls_srno	and 	srcancelgubun <> 'Y'	 
using	ts_transaction	;

String		ls_applydate_close
DateTime	ld_nowtime

Select Top 1 GetDate() Into :ld_nowtime From sysusers Using ts_transaction ;

DECLARE get_applydate_close PROCEDURE for sp_pisc_get_applydate_close
@ps_areacode = '%',
@ps_divisioncode = '%',
@pdt_sourcedate = :ld_nowtime,
@rs_applydate = '1' output
Using ts_transaction;

//exactly the parameters in the sp.
EXECUTE get_applydate_close;

//then fetch output parameters.
FETCH get_applydate_close into :ls_applydate_close;
CLOSE get_applydate_close;

select isnull(sum(truckloadqty),0) into :ln_loadqty	from tloadplan
	where	srno	like		:ls_srno	and	truckno	is	null	and	shipplandate	>=	:ls_applydate_close
using	ts_transaction	;

disconnect	using	ts_Transaction ;
destroy ts_Transaction
if	ln_qty - ln_loadqty	< 	0	then
	ln_return	=	0
else
	ln_return	=	ln_qty	-	ln_loadqty
end if

return ln_return
end function

