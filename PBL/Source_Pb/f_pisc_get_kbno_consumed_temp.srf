$PBExportHeader$f_pisc_get_kbno_consumed_temp.srf
$PBExportComments$SERIAL 소진된 임시간판의 번호를 구한다.
global type f_pisc_get_kbno_consumed_temp from function_object
end type

forward prototypes
global function integer f_pisc_get_kbno_consumed_temp (string as_areacode, string as_divisioncode, string as_workcenter, string as_linecode, string as_itemcode, string as_selectedkbno[], integer an_rackqty, ref string rs_kbno, ref string rs_msg)
end prototypes

global function integer f_pisc_get_kbno_consumed_temp (string as_areacode, string as_divisioncode, string as_workcenter, string as_linecode, string as_itemcode, string as_selectedkbno[], integer an_rackqty, ref string rs_kbno, ref string rs_msg);///////////////////////////////////////////////////////////////////////////////////////////////////////////
//	FUNCTION    : 임시간판 serial(xzz) 소진된 품번에 대해 재사용할 임시간판번호 선택
//
//	기준			: 1. 랙수용수가 같고 KBReleaseTime 가장 오래된 것 
//					: 2. KBReleaseTime 가장 오래된 것-> 수용수 변경
//					  => 임시간판 중에서도 계속적으로 사용하는게 있다 (조향)
//
// return		: 0 = 정상 (수용수 같은거 있음)
//					  1 = 정상 (수용수 같은거 없음 - 수용수 업데이트 해야됨)
//					  -1 = 오류 
///////////////////////////////////////////////////////////////////////////////////////////////////////////

string ls_tempkbno
integer ln_return
datastore dw_tmpkbno

dw_tmpkbno = Create datastore
dw_tmpkbno.dataobject =	'd_pisc_get_kbno_consumed_temp1'
dw_tmpkbno.settransobject(sqlpis)
dw_tmpkbno.reset()

ln_return = dw_tmpkbno.retrieve(as_areacode, as_divisioncode, as_workcenter, as_linecode, &
											as_itemcode, as_selectedkbno, an_rackqty)

if sqlpis.sqlcode <> 0 then
	rs_msg = sqlpis.sqlerrtext
	destroy dw_tmpkbno
	return -1
end if

if ln_return > 0 then
	rs_kbno = dw_tmpkbno.getitemstring(1, "kbno")
	destroy dw_tmpkbno
	return 0
end if	

destroy dw_tmpkbno

dw_tmpkbno = Create datastore
dw_tmpkbno.dataobject =	'd_pisc_get_kbno_consumed_temp2'
dw_tmpkbno.settransobject(sqlpis)
dw_tmpkbno.reset()

ln_return = dw_tmpkbno.retrieve(as_areacode, as_divisioncode, as_workcenter, as_linecode, as_itemcode, as_selectedkbno)
											
if sqlpis.sqlcode <> 0 then
	rs_msg = sqlpis.sqlerrtext
	destroy dw_tmpkbno
	return -1
end if

if ln_return > 0 then
	rs_kbno = dw_tmpkbno.getitemstring(1, "kbno")
	destroy dw_tmpkbno
	return 1
end if	

rs_msg = "유용한 임시간판이 없읍니다."
destroy dw_tmpkbno
Return -1


end function

