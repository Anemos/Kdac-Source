$PBExportHeader$f_wip002_use_update.srf
$PBExportComments$[이월재공] 재공 사용량 소급/이월
global type f_wip002_use_update from function_object
end type

forward prototypes
global function integer f_wip002_use_update (string a_comltd, string a_applydate, string a_slipxtype, string a_srno, string a_srno1, string a_srno2, string a_xplant, string a_div, string a_slno, string a_itno, string a_xuse, string a_rtngubun, string a_dept, string a_tdte4_b, string a_tdte4_a, decimal a_tqty4_b, decimal a_tqty4_a, ref transaction ag_transaction, ref string ag_message)
end prototypes

global function integer f_wip002_use_update (string a_comltd, string a_applydate, string a_slipxtype, string a_srno, string a_srno1, string a_srno2, string a_xplant, string a_div, string a_slno, string a_itno, string a_xuse, string a_rtngubun, string a_dept, string a_tdte4_b, string a_tdte4_a, decimal a_tqty4_b, decimal a_tqty4_a, ref transaction ag_transaction, ref string ag_message);//***********************************************************************************
//
// 업체, 라인재공에 사용량수정시 하위품번의 수정사용량및 날짜 UPDATE
// 이월 => 마감월에서 사용량을 빼고, 당월에는 사용량을 더함 ls_check = 'F'
// 소급 => 마감월에서 사용량을 더하고, 당월에서 사용량을 뺌 ls_check = 'B'
// 전표타입 : 'RP', 'IS', 'RS', 'RM', 'SM'
// WIP004에 사용수량 UPDATE
// 인수 : 회사, 입고전표, 구매요구번호, 분할발주횟수, 분할납품회수, 지역, 공장, 거래명세표번호,
//        입고품번, 용도, 업체코드(부서), 입고일, 입고수정일, 입고수량, 입고수정수량
// 반환값 : 성공(0), 실패(-1)
//
//***********************************************************************************

decimal{1} l_n_tqty4
decimal{4} l_n_wdchqt,l_n_wbusqt1,l_n_wbusqt2,l_n_wbusqt3,l_n_wbusqt4,l_n_wbusqt5,l_n_wbusqt6,l_n_wbusqt7,&
			  l_n_wbusqt8,l_n_wbohqt
decimal{5} l_n_wbavrg1,l_n_wbavrg2
decimal{0} l_n_wbusat1,l_n_wbusat2,l_n_wbusat3,l_n_wbusat4,l_n_wbusat5,l_n_wbusat6,l_n_wbusat7,&
			  l_n_wbusat8,l_n_wbusat9,l_n_wbohat1,l_n_wbohat2
decimal{2} l_n_costav
string     l_s_itno,l_s_opcd,l_s_orct,l_s_gubun,ls_adjdate,ls_rundate,l_s_usge,ls_check,ls_wdsrno
integer li_chk

if a_slipxtype = 'RM' or a_slipxtype = 'SM' or a_slipxtype = 'IS' or a_slipxtype = 'RS' then
	l_s_orct  = '9999'
elseif a_slipxtype = 'RP' then
	l_s_orct  = a_dept
else
	return 0
end if

ls_adjdate = a_applydate
ls_rundate = uf_wip_addmonth(ls_adjdate,1)

if a_tqty4_b = a_tqty4_a then
	UPDATE "PBWIP"."WIP004"
		SET WDUPDTDT = ' ',WDDATE = :A_TDTE4_A,
			 WDUPDTID = ' '
	WHERE WDPRNO = :A_ITNO AND WDCMCD = :A_COMLTD AND 
			WDPLANT = :A_XPLANT AND WDDVSN = :A_DIV AND 
			WDPRSRTY = :A_SLIPXTYPE AND WDPRSRNO = :A_SRNO AND WDPRSRNO1 = :A_SRNO1 AND WDPRSRNO2 = :A_SRNO2 AND
			WDDATE = :A_TDTE4_B
	USING ag_transaction ;
//	if ag_transaction.sqlcode = 0 and ag_transaction.sqlnrows < 1 then
//		ag_message = "재공이력날짜변경시에 오류가 발생하였습니다. : " + A_SLIPXTYPE + A_SRNO + A_SRNO1 + A_SRNO2
//		return -1
//	end if
else
	//수량이 수정된 경우 기존의 수량에 대한 비율로 재공트랜스와 재공밸런스에 Update
	UPDATE "PBWIP"."WIP004"
		SET WDPRQT = :A_TQTY4_A,WDCHQT = :A_TQTY4_A * WDCHQT / :A_TQTY4_B,WDUPDTDT = ' ',WDDATE = :A_TDTE4_A,
			 WDUPDTID = ' '
	WHERE WDPRNO = :A_ITNO AND WDCMCD = :A_COMLTD AND 
			WDPLANT = :A_XPLANT AND WDDVSN = :A_DIV AND
			WDPRSRTY = :A_SLIPXTYPE AND WDPRSRNO = :A_SRNO AND WDPRSRNO1 = :A_SRNO1 AND WDPRSRNO2 = :A_SRNO2 AND
			 WDDATE = :A_TDTE4_B
	USING ag_transaction ;
//	if ag_transaction.sqlcode = 0 and ag_transaction.sqlnrows < 1 then
//		ag_message = "재공이력수량변경시에 오류가 발생하였습니다. : " + A_SLIPXTYPE + A_SRNO + A_SRNO1 + A_SRNO2
//		return -1
//	end if
end if

ls_wdsrno = ''

DO WHILE TRUE
	
	SELECT WDIOCD,WDUSGE,WDITNO,WDCHQT,WDSRNO
   INTO :l_s_gubun,:l_s_usge,:l_s_itno,:l_n_wdchqt,:ls_wdsrno
	FROM "PBWIP"."WIP004"
	WHERE WDPRNO = :A_ITNO AND WDCMCD = :A_COMLTD AND WDSRNO > :ls_wdsrno AND
			WDPLANT = :A_XPLANT AND WDDVSN = :A_DIV AND
			WDPRSRTY = :A_SLIPXTYPE AND WDPRSRNO = :A_SRNO AND WDPRSRNO1 = :A_SRNO1 AND WDPRSRNO2 = :A_SRNO2 AND
			 WDDATE = :A_TDTE4_A
	ORDER BY WDSRNO
	FETCH FIRST 1 ROW ONLY
	USING ag_transaction ;
	
	if ag_transaction.sqlcode <> 0 then
		exit
	end if
	
	l_n_wbusqt1 = 0
	l_n_wbusqt2 = 0
	l_n_wbusqt3 = 0
	l_n_wbusqt4 = 0
	l_n_wbusqt5 = 0
	l_n_wbusqt6 = 0
	l_n_wbusqt7 = 0
	
	if ls_adjdate < mid(a_tdte4_a,1,6) then 
		// 이월
		ls_check = 'F'
		Choose Case l_s_usge
			Case '01'
				l_n_wbusqt1 = (-1) * l_n_wdchqt
			Case '02'
				l_n_wbusqt2 = (-1) * l_n_wdchqt
			Case '03'
				l_n_wbusqt3 = (-1) * l_n_wdchqt
			Case '04'
				l_n_wbusqt4 = (-1) * l_n_wdchqt
			Case '05'
				l_n_wbusqt5 = (-1) * l_n_wdchqt
			Case '06'
				l_n_wbusqt6 = (-1) * l_n_wdchqt
			Case '07'
				l_n_wbusqt7 = (-1) * l_n_wdchqt
		End Choose
		l_n_wbohqt     = l_n_wdchqt
	else
		// 소급
		ls_check = 'B'
		Choose Case l_s_usge
			Case '01'
				l_n_wbusqt1 = l_n_wdchqt
			Case '02'
				l_n_wbusqt2 = l_n_wdchqt
			Case '03'
				l_n_wbusqt3 = l_n_wdchqt
			Case '04'
				l_n_wbusqt4 = l_n_wdchqt
			Case '05'
				l_n_wbusqt5 = l_n_wdchqt
			Case '06'
				l_n_wbusqt6 = l_n_wdchqt
			Case '07'
				l_n_wbusqt7 = l_n_wdchqt
		End Choose
		l_n_wbohqt     = (-1) * l_n_wdchqt
	end if
	
	SELECT wbavrg1 INTO :l_n_wbavrg1
	FROM "PBWIP"."WIP002"
	WHERE WBCMCD = :a_comltd AND WBPLANT = :a_xplant AND WBDVSN = :a_div AND 
			WBORCT = :l_s_orct AND WBITNO = :l_s_itno AND WBIOCD = :l_s_gubun AND WBYEAR||WBMONTH = :ls_adjdate
			using ag_transaction;
	
	l_n_wbusat1 = l_n_wbusqt1 * l_n_wbavrg1 
	l_n_wbusat2 = l_n_wbusqt2 * l_n_wbavrg1 
	l_n_wbusat3 = l_n_wbusqt3 * l_n_wbavrg1  
	l_n_wbusat4 = l_n_wbusqt4 * l_n_wbavrg1  
	l_n_wbusat5 = l_n_wbusqt5 * l_n_wbavrg1 
	l_n_wbusat6 = l_n_wbusqt6 * l_n_wbavrg1 
	l_n_wbusat7 = l_n_wbusqt7 * l_n_wbavrg1 
	l_n_wbohat1 = l_n_wbohqt  * l_n_wbavrg1 
	
	//마감월 UPDATE
	update "PBWIP"."WIP002"
		set WBUSQT1 = WBUSQT1 + :l_n_wbusqt1,WBUSAT1 = WBUSAT1 + :l_n_wbusat1,
			WBUSQT2 = WBUSQT2 + :l_n_wbusqt2,WBUSAT2 = WBUSAT2 + :l_n_wbusat2,
			WBUSQT3 = WBUSQT3 + :l_n_wbusqt3,WBUSAT3 = WBUSAT3 + :l_n_wbusat3,
			WBUSQT4 = WBUSQT4 + :l_n_wbusqt4,WBUSAT4 = WBUSAT4 + :l_n_wbusat4,
			WBUSQT5 = WBUSQT5 + :l_n_wbusqt5,WBUSAT5 = WBUSAT5 + :l_n_wbusat5,
			WBUSQT6 = WBUSQT6 + :l_n_wbusqt6,WBUSAT6 = WBUSAT6 + :l_n_wbusat6,
			WBUSQT7 = WBUSQT7 + :l_n_wbusqt7,WBUSAT7 = WBUSAT7 + :l_n_wbusat7
		where WBCMCD = :a_comltd AND WBPLANT = :a_xplant AND WBDVSN = :a_div AND 
				WBORCT = :l_s_orct AND WBITNO = :l_s_itno AND WBIOCD = :l_s_gubun AND WBYEAR||WBMONTH = :ls_adjdate
				using ag_transaction;
//	if ag_transaction.sqlcode = 0 and ag_transaction.sqlnrows < 1 then
//		ag_message = "마감월 UPDATE시에 오류가 발생하였습니다. 전표:" + A_SLIPXTYPE + A_SRNO + A_SRNO1 + A_SRNO2 + ":" + ag_transaction.sqlerrtext
//		return -1
//	end if
	//이월재공 UPDATE
	update "PBWIP"."WIP002"
		set WBBGQT = WBBGQT + :l_n_wbohqt,WBBGAT1 = WBBGAT1 + :l_n_wbohat1
		where WBCMCD = :a_comltd AND WBPLANT = :a_xplant AND WBDVSN = :a_div AND 
				WBORCT = :l_s_orct AND WBITNO = :l_s_itno AND WBIOCD = :l_s_gubun AND WBYEAR||WBMONTH = :ls_rundate
				using ag_transaction;
//	if ag_transaction.sqlcode = 0 and ag_transaction.sqlnrows < 1 then
//		ag_message = "이월재공 UPDATE시에 오류가 발생하였습니다. : " + A_SLIPXTYPE + A_SRNO + A_SRNO1 + A_SRNO2 + ":" + ag_transaction.sqlerrtext
//		return -1
//	end if
	
	//현재월 UPDATE
	update "PBWIP"."WIP001"
	set WABGQT = WABGQT + :l_n_wbohqt, WABGAT1 = WABGAT1 + :l_n_wbohat1,
		WAUSQT1 = WAUSQT1 - :l_n_wbusqt1,WAUSAT1 = WAUSAT1 - :l_n_wbusat1,
		WAUSQT2 = WAUSQT2 - :l_n_wbusqt2,WAUSAT2 = WAUSAT2 - :l_n_wbusat2,
		WAUSQT3 = WAUSQT3 - :l_n_wbusqt3,WAUSAT3 = WAUSAT3 - :l_n_wbusat3,
		WAUSQT4 = WAUSQT4 - :l_n_wbusqt4,WAUSAT4 = WAUSAT4 - :l_n_wbusat4,
		WAUSQT5 = WAUSQT5 - :l_n_wbusqt5,WAUSAT5 = WAUSAT5 - :l_n_wbusat5,
		WAUSQT6 = WAUSQT6 - :l_n_wbusqt6,WAUSAT6 = WAUSAT6 - :l_n_wbusat6,
		WAUSQT7 = WAUSQT7 - :l_n_wbusqt7,WAUSAT7 = WAUSAT7 - :l_n_wbusat7
	where WACMCD = :a_comltd AND WAPLANT = :a_xplant AND WADVSN = :a_div AND 
			WAORCT = :l_s_orct AND WAITNO = :l_s_itno AND WAIOCD = :l_s_gubun
			using ag_transaction;

//	if ag_transaction.sqlcode = 0 and ag_transaction.sqlnrows < 1 then
//		ag_message = "현재월변경시에 오류가 발생하였습니다. : " + A_SLIPXTYPE + A_SRNO + A_SRNO1 + A_SRNO2 + ":" + ag_transaction.sqlerrtext
//		return -1
//	end if
LOOP

Return 0

end function

