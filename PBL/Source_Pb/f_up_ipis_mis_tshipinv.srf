$PBExportHeader$f_up_ipis_mis_tshipinv.srf
$PBExportComments$이체입고
global type f_up_ipis_mis_tshipinv from function_object
end type

forward prototypes
global function integer f_up_ipis_mis_tshipinv (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[])
end prototypes

global function integer f_up_ipis_mis_tshipinv (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[]);string ls_chgcd, ls_xplant, ls_div, ls_xplant1, ls_div1, ls_itno, ls_dept, ls_tdte4, ls_id 
string ls_itnm, ls_spec, ls_xtype, ls_rvno, ls_rqno
String ls_cls, ls_srce, ls_pdcd, ls_xplan, ls_mlan, ls_xunit
String ls_cls1, ls_srce1, ls_pdcd1, ls_xplan1, ls_mlan1, ls_xunit1
String ls_ckey, ls_costdiv, ls_srno, ls_srno1, ls_srno2, ls_csrno, ls_slno, ls_costdiv1
String ls_istcd, ls_stcd, ls_stcd2, ls_reqdt, ls_dudt, ls_gubun
dec{0} ld_saud, ld_ohamt, ld_amt
dec{1} ld_qty, ld_ohuqty, ld_ohrqty, ld_ohsqty, ld_reqty, ld_tqty3
dec{2} ld_costav
dec{4} ld_convqty
integer	li_cnt, li_index, li_Retcnt, li_tfill
Boolean lb_trachk = False

str_ipis_server lstr_ipis

//***AS400 접속여부 체크, 저녁8-아침8 인터페이스 저장
li_index = f_ipis_server_get_transaction(ag_str_ipis, 'X', 'Z')

If li_index = -1 then
//	li_index = f_ipis_server_get_transaction(ag_str_ipis, 'X', 'X')
//	If li_index = -1 then
		ag_message = "A/S400, INT 서버 연결에 실패하였습니다."
		return -1
//	Else
//		lb_trachk = False
//	End if
//Else
//	lb_trachk = True
End if

lstr_ipis = ag_str_ipis[li_index]

//*** 업무로직 적용
for li_cnt = 1 to ag_dwo.rowcount()
	ls_chgcd  = trim(ag_dwo.getitemstring(li_cnt,"Misflag"))
	ls_tdte4 = trim(ag_dwo.getitemstring(li_cnt,"MoveConfirmDate"))
	ls_csrno = trim(ag_dwo.getitemstring(li_cnt,"MoveRequireNo"))
	ld_qty   = ag_dwo.getitemnumber(li_cnt,"TruckLoadQty")
	ls_slno   = trim(ag_dwo.getitemstring(li_cnt,"Slno"))
	ls_id     = trim(ag_dwo.getitemstring(li_cnt,"LastEmp"))
	
//	If lb_trachk = false then 
//		//*** Interface server insert
//		INSERT INTO TSHIPINV_INTERFACE 
//		      ( MoveConfirmDate, MoveRequireNo, Misflag, InterfaceFlag, TruckLoadQty,
//			     Slno, LastEmp, LastDate)
//		Values ( :ls_tdte4, :ls_csrno, :ls_chgcd, 'Y', :ld_qty,
//			      :ls_slno, :ls_id, getdate() ) 
//		using lstr_ipis.t_sqlpis;
//		
//		if lstr_ipis.t_sqlpis.sqlnrows < 1 then
//			ag_message = "Interface Server Insert Error"
//			f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tshipinv',&
//			lstr_ipis.t_sqlpis.sqlerrtext,'Interface Server Insert Error', g_s_empno, g_s_ipaddr, g_s_macaddr)
//			return -1
//		end if		
//		Continue
//	End if
	
	ls_tdte4 = f_dateedit_inv(ls_tdte4)
	
	ls_srno  = Mid(ls_csrno,1,8)
	ls_srno1 = Mid(ls_csrno,9,2)
	
	
	ls_csrno = Mid(ls_csrno,1,10)
	
	//*** 2007.7월 Before, After 
	if Len(ls_csrno) = 11 then
		ls_gubun = 'O'
	else
		ls_gubun = 'N'
	End if
	
	//*** 이체의뢰, 이체불출 DB check                                     
                                                                                
   SELECT XPLANT, DIV, XPLANT1, DIV1, ITNO, ISTCD, SLNO,                              
          REQDT, DUDT, REQTY, STCD                                         
    INTO :ls_xplant, :ls_div, :ls_xplant1, :ls_div1, :ls_itno, :ls_istcd, :ls_rqno,            
         :ls_reqdt, :ls_dudt, :ld_reqty, :ls_stcd                          
   FROM PBINV.INV620                                                             
   WHERE COMLTD = '01' AND SRNO = :ls_csrno Using lstr_ipis.t_sqlpis;
	
   If lstr_ipis.t_sqlpis.sqlcode <> 0 then                                                          
      ag_message = "이체의뢰정보 미존재"
		return -1                                                           
   End if
	
	If ls_istcd <> 'W' then
		ag_message = "이체의뢰(W) 정보가 아님"
		return -1
	End if
	
	if ls_gubun = 'N' then
		SELECT SRNO2, AQTY, STCD
		 INTO :ls_srno2, :ld_tqty3, :ls_stcd2
		FROM PBINV.INV621                                                             
		WHERE COMLTD = '01' AND SRNO = :ls_csrno  AND SLNO = :ls_slno Using lstr_ipis.t_sqlpis;
	
		If lstr_ipis.t_sqlpis.sqlcode <> 0 then                                                          
			ag_message = "이체불출정보 미존재"
			return -1                                                           
		End if	
	else
		ls_srno2 = '01'
		ld_tqty3 = ld_qty
		ls_stcd2 = ' '
	End if

	//*** item Master Check
   SELECT ITNM, SPEC, XTYPE, RVNO                                                
     INTO :ls_itnm, :ls_spec, :ls_xtype, :ls_rvno                                     
   FROM PBINV.INV002                                                             
   WHERE COMLTD = '01' AND ITNO   = :ls_itno Using lstr_ipis.t_sqlpis;
                                                                                
   If lstr_ipis.t_sqlpis.sqlcode <> 0 then                                                          
      ag_message = "품목기본정보 미존재"
		return -1                                                           
   End if
	
	//*** item Balance check (불출공장)
	SELECT CLS, SRCE,  COSTAV, OHUQTY, OHRQTY, OHSQTY, OHAMT, PDCD, XPLAN, MLAN, XUNIT                                               
    INTO  :ls_cls, :ls_srce, :ld_costav, :ld_ohuqty, :ld_ohrqty, :ld_ohsqty,     
          :ld_ohamt, :ls_pdcd, :ls_xplan, :ls_mlan, :ls_xunit                        
   FROM PBINV.INV101                                                             
   WHERE COMLTD = '01' AND XPLANT = :ls_xplant1  AND DIV = :ls_div1 AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis; 
			
	If lstr_ipis.t_sqlpis.sqlcode <> 0 then                                                          
      ag_message = "불출공장 품목상세정보 미존재"
		return -1                                                           
   End if		
                                                                                
   If Not(ls_cls = '30' or (ls_cls='10' and ls_srce ='03')) then                 
      ag_message = "불출공장 계정확인"
		return -1                                                              
   End if                                                                       
                                                                                
	
	//*** item Balance Check (입고공장)
	SELECT CLS, SRCE, PDCD, XPLAN, MLAN, XUNIT, CONVQTY                                    
    INTO :ls_cls1, :ls_srce1, :ls_pdcd1, :ls_xplan1, :ls_mlan1, :ls_xunit1, :ld_convqty             
   FROM PBINV.INV101                                                             
   WHERE COMLTD = '01' AND XPLANT = :ls_xplant  AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;                                   
                                                                                
  	If lstr_ipis.t_sqlpis.sqlcode <> 0 then                                                          
      ag_message = "입고공장 품목상세정보 미존재"
		return -1                                                           
   End if                                                                      
                                                                                
   If Not(ls_cls1='10' and ls_srce1 ='05') then                                  
      ag_message = "입고공장 계정확인"
		return -1                                                                
   End if
		
	//*** 결산년월 Check
	If f_Get_Ctlchk( ls_tdte4, "" ) = -1 Then
		ag_message = "마감이후 작업 불가"
		return -1	
	End If
	
	
	choose case ls_chgcd
		case 'C'
			//** error 조건체크.
			  If ld_costav = 0 Then                                                         
				  if Not(ls_div1 = 'A' and ls_cls='10' and ls_srce ='03') then                
						ag_message = "불출공장 이동평균단가 확인"
						return -1                                                             
					End if                                                                    
				End if                                                                       
																													  
				If ld_qty > ld_ohuqty Then                                                    
					ag_message = "불출공장 사용가 수량 확인"
					return -1                                                               
				End if
				
				If ld_qty <> ld_TQTY3 Then                 	                                   
					ag_message = "불출수량과 입고수량 오차"
					return -1                                                               
				End if
				
				 If ld_ohuqty + ld_ohrqty + ld_ohsqty = ld_qty Then                             
					 ld_amt = ld_ohamt;                                                      
				 Else                                                                           
					 ld_amt = Truncate(ld_costav * ld_qty,0);                                
				 End if
				 //*** 불출
				 UPDATE PBINV.INV101                                                       
					SET OUTQTY = OUTQTY + :ld_qty,                                             
						 OUTAMT = OUTAMT + :ld_amt,                                             
						 OHUQTY = OHUQTY - :ld_qty,                                             
						 OHAMT  = OHAMT  - :ld_amt,                                                     
						 ILUDT  = :g_s_date,                                                     
						 UPDTID = :ls_id,                                                       
						 UPDTDT = :g_s_date                                                      
				 WHERE COMLTD = '01' AND XPLANT = :ls_xplant1 AND DIV = :ls_div1 AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;	
				 
				 //*** 입고
				 UPDATE PBINV.INV101                                                       
					SET INTQTY = INTQTY + :ld_qty,                                                                                         
						 OHUQTY = OHUQTY + :ld_qty,                                                     
						 ILUDT  = :g_s_date,                                                     
						 UPDTID = :ls_id,                                                       
						 UPDTDT = :g_s_date                                                      
				 WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;
				
				if lstr_ipis.t_sqlpis.sqlnrows < 1 then
					ag_message = "Balance DB 업데이트 error invoke"
					f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tshipinv',&
					lstr_ipis.t_sqlpis.sqlerrtext,'Balance DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
					return -1
				end if
				
				ls_costdiv1 = f_get_accdiv(ls_xplant, ls_div, ls_pdcd1)
				ls_costdiv  = f_get_accdiv(ls_xplant1, ls_div1, ls_pdcd)
				ls_dept     = f_get_invdept(ls_xplant, ls_div)
				ls_slno     = Mid('EX'+ ls_slno,1,12)
				
				INSERT INTO PBINV.INV401                                                        
						( COMLTD, SLIPTYPE, SRNO, SRNO1, SRNO2, XPLANT, DIV,                            
						  COSTDIV,    SLNO, ITNO,  RVNO,  ITNM,  SPEC,  XTYPE,                          
						  XUNIT,       CLS, SRCE,  PDCD, XPLAN,  MLAN,  RQNO,                           
						  NQC,        KBCD, DUDT, PURNO, VSRNO,  VNDR,  VNDNM,                          
						  XPAY,      OTXCD, LCNO,  LCDT,  DEPT, RTNGUB,  XUSE,                          
						  RSVSRNO,    ORNO, MCHNO, EXFR,  EXTO,  RQDIV,  BLNO,                          
						  EXCH,       CURR, FOBAMT,TDTE1,TDTE2,  TDTE3, TDTE4,                          
						  TDTE5,     TDTE6,  TQTY1,TQTY2,TQTY3,   TQTY4,XCOST,                          
						  TRAMT,     TSHSL,  RTCOM,RTQTY,SSSRNO,  SSCOM,RFCD,                           
						  CHKCD,     TSAMT,  TFILL,TCTTL,  DSAG,  MAKER,PJTNO,                          
						  INVSTCD,  INVEST,   EXTD,INPTID,  INPTDT,UPDTID, UPDTDT,                      
						  IPADDR,   MACADDR  )                                                          
						VALUES                                                                          
						  ('01',          'SA', :ls_srno, :ls_srno1, :ls_srno2,  :ls_xplant1, :ls_div1,            
						  :ls_costdiv,:ls_slno, :ls_itno, :ls_rvno,   :ls_itnm,  :ls_spec,    :ls_xtype,            
						  :ls_xunit,   :ls_cls, :ls_srce, :ls_pdcd,  :ls_xplan,  :ls_mlan,    ' ',             
						  ' ',             ' ',     ' ',      ' ',     ' ',           ' ',    ' ',             
						  ' ',             ' ',     ' ',      ' ',   :ls_dept,      ' ',   '90',         
						  ' ',             ' ',     ' ',     '  ',   :ls_xplant,  :ls_div,    ' ',            
							 0,             ' ',       0, :ls_reqdt,  :ls_dudt,        ' ',  :ls_tdte4,           
						  ' ',             ' ', :ld_reqty,       0,         0,    :ld_qty,  :ld_costav,          
						 :ld_amt,          ' ',      ' ',        0,     ' ',     ' ',     ' ',           
						  '2',               0,     ' ',         0,     ' ',     ' ',     ' ',           
						  ' ',             ' ',     ' ',    :ls_id,  :g_s_date, :ls_id, :g_s_datetime,            
						  ' ',             ' ' ) Using lstr_ipis.t_sqlpis;
						  
				 if lstr_ipis.t_sqlpis.sqlcode <> 0 then
					  ag_message = "Trans 데이터 생성에 실패하였습니다."
					  f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tshipinv',&
					  lstr_ipis.t_sqlpis.sqlerrtext,'Trans 데이터 생성에 실패', g_s_empno, g_s_ipaddr, g_s_macaddr)
					  return -1
			    end if
				 
				 INSERT INTO PBINV.INV401                                                        
						( COMLTD, SLIPTYPE, SRNO, SRNO1, SRNO2, XPLANT, DIV,                            
						  COSTDIV,    SLNO, ITNO,  RVNO,  ITNM,  SPEC,  XTYPE,                          
						  XUNIT,       CLS, SRCE,  PDCD, XPLAN,  MLAN,  RQNO,                           
						  NQC,        KBCD, DUDT, PURNO, VSRNO,  VNDR,  VNDNM,                          
						  XPAY,      OTXCD, LCNO,  LCDT,  DEPT, RTNGUB,  XUSE,                          
						  RSVSRNO,    ORNO, MCHNO, EXFR,  EXTO,  RQDIV,  BLNO,                          
						  EXCH,       CURR, FOBAMT,TDTE1,TDTE2,  TDTE3, TDTE4,                          
						  TDTE5,     TDTE6,  TQTY1,TQTY2,TQTY3,   TQTY4,XCOST,                          
						  TRAMT,     TSHSL,  RTCOM,RTQTY,SSSRNO,  SSCOM,RFCD,                           
						  CHKCD,     TSAMT,  TFILL,TCTTL,  DSAG,  MAKER,PJTNO,                          
						  INVSTCD,  INVEST,   EXTD,INPTID,  INPTDT,UPDTID, UPDTDT,                      
						  IPADDR,   MACADDR  )                                                          
						VALUES                                                                          
						  ('01',            'RW', :ls_srno,  :ls_srno1,  :ls_srno2,  :ls_xplant, :ls_div,              
						  :ls_costdiv1, :ls_slno, :ls_itno,  :ls_rvno,   :ls_itnm,   :ls_spec,   :ls_xtype,           
						  :ls_xunit1,   :ls_cls1, :ls_srce1, :ls_pdcd1,  :ls_xplan1, :ls_mlan1,   ' ',          
						  ' ',               ' ',       ' ',       ' ',         ' ',       ' ',   ' ',             
						  ' ',               ' ',       ' ',       ' ',  :ls_dept,         ' ',   ' ',           
						  ' ',               ' ',       ' ',      '  ',  :ls_xplant1, :ls_div1,   ' ',          
							 0,               ' ',         0, :ls_reqdt,  :ls_dudt,         ' ',  :ls_tdte4,           
						  ' ',               ' ', :ld_reqty,        0,   :ld_tqty3,     :ld_qty, :ld_costav,          
							 0,               ' ',       ' ',        0,     ' ',            ' ',     ' ',              
						  ' ',                 0,       ' ',        0,     ' ',            ' ',     ' ',                
						  ' ',               ' ',       ' ', :ls_id,  :g_s_date, :ls_id, :g_s_datetime,          
						  ' ',               ' ') Using lstr_ipis.t_sqlpis;	
	
             if lstr_ipis.t_sqlpis.sqlcode <> 0 then
			       ag_message = "Trans 데이터 생성에 실패하였습니다."
			   	  f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tshipinv',&
				    lstr_ipis.t_sqlpis.sqlerrtext,'Trans 데이터 생성에 실패', g_s_empno, g_s_ipaddr, g_s_macaddr)
				    return -1
			    end if
				 
				 if ls_gubun = 'N' then
			  
					 UPDATE PBINV.INV621                                                      
						SET RPDT = :ls_tdte4,                                                                                         
							 BQTY = :ld_qty,                                                     
							 STCD = '4',                                                     
							 UPDTID = :ls_id,                                                       
							 UPDTDT = :g_s_date                                                      
					WHERE COMLTD = '01' AND SRNO = :ls_csrno  AND SRNO2 = :ls_srno2 Using lstr_ipis.t_sqlpis;
				 
					 if lstr_ipis.t_sqlpis.sqlnrows < 1 then
						 ag_message = "이체불출 DB 업데이트 error invoke"
						 f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tshipinv',&
						 lstr_ipis.t_sqlpis.sqlerrtext,'이체불출 DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
						return -1
					 end if
					 
					 if ld_reqty - f_get_invqty3(ls_csrno) = 0 Then
						 UPDATE PBINV.INV620                                                      
							SET STCD = '5',                                                     
								 UPDTID = :ls_id,                                                       
								 UPDTDT = :g_s_date                                                      
						 WHERE COMLTD = '01' AND SRNO = :ls_csrno  Using lstr_ipis.t_sqlpis;
					 
						 if lstr_ipis.t_sqlpis.sqlnrows < 1 then
							 ag_message = "이체의뢰 DB 업데이트 error invoke"
							 f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tshipinv',&
							 lstr_ipis.t_sqlpis.sqlerrtext,'이체의뢰 DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
							return -1
						 end if
					 End if	
				 else
					 ls_csrno = Mid(ls_csrno, 1, 10)
					 
					 UPDATE PBINV.INV620                                                      
						SET STCD = '5',                                                     
							 UPDTID = :ls_id,                                                       
							 UPDTDT = :g_s_date                                                      
					 WHERE COMLTD = '01' AND SRNO = :ls_csrno  Using lstr_ipis.t_sqlpis;
				 
					 if lstr_ipis.t_sqlpis.sqlnrows < 1 then
						 ag_message = "이체의뢰 DB 업데이트 error invoke"
						 f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tshipinv',&
						 lstr_ipis.t_sqlpis.sqlerrtext,'이체의뢰 DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
						return -1
					 end if					
				 End if
   	  		  
//		case 'D'
//			  
//			  SELECT SRNO, SRNO1, SRNO2, TQTY4, TRAMT 
//			    INTO :ls_srno, :ls_srno1, :ls_srno2, :ld_qty, :ld_amt   
//			  FROM PBINV.INV401
//			  WHERE COMLTD ='01'      AND SLIPTYPE = 'RM'   AND TDTE4 = :ls_tdte4  AND
//			        SLNO   = :ls_kbno AND TFILL = :ls_tfill Using lstr_ipis.t_sqlpis; 
//			  
//			  If lstr_ipis.t_sqlpis.sqlcode <> 0 Then
//				  ag_message = "제품입고 삭제 정보 검색 오류"
//				  return -1
//			  End if		
//			  
//			  if ld_qty > 0 and ld_amt > 0 Then
//					if (ld_ohuqty + ld_ohrqty + ld_ohsqty - ld_qty) = 0 then
//						ld_costav = 0
//					else
//				  		ld_costav = Truncate((ld_ohamt - ld_amt)/(ld_ohuqty + ld_ohrqty + ld_ohsqty - ld_qty),2)
//					end if
//                                                                                
//				  UPDATE PBINV.INV101                                                       
//					SET INTQTY = INTQTY - :ld_qty,                                             
//						 INTAMT = INTAMT - :ld_amt,                                             
//						 OHUQTY = OHUQTY - :ld_qty,                                             
//						 OHAMT  = OHAMT  - :ld_amt,                                             
//						 COSTAV = :ld_costav,                                                                                                       
//						 ILUDT  = :g_s_date,                                                     
//						 UPDTID = :ls_id,                                                       
//						 UPDTDT = :g_s_date                                                      
//					WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;					
//				Else 
//					UPDATE PBINV.INV101                                                       
//					SET INTQTY = INTQTY - :ld_qty,                                             
//						 INTAMT = INTAMT - :ld_amt,                                             
//						 OHUQTY = OHUQTY - :ld_qty,                                             
//						 OHAMT  = OHAMT  - :ld_amt,                                              
//						 ILUDT  = :g_s_date,                                                     
//						 UPDTID = :ls_id,                                                       
//						 UPDTDT = :g_s_date                                                      
//					WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;
//				End if
//				
//				if lstr_ipis.t_sqlpis.sqlnrows < 1 then
//					ag_message = "Balance DB 업데이트 error invoke"
//					f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tstock',&
//					lstr_ipis.t_sqlpis.sqlerrtext,'Balance DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
//					return -1
//				end if
//				
//				DELETE FROM PBINV.INV401
//				WHERE	COMLTD	= '01'      AND SLIPTYPE ='RM'     AND SRNO = :ls_srno AND	
//						SRNO1		= :ls_srno1 AND SRNO2 = :ls_srno2
//				using lstr_ipis.t_sqlpis; 
//				
//				if lstr_ipis.t_sqlpis.sqlcode <> 0 then
//					ag_message = "제품입고정보 삭제에 실패하였습니다."
//					f_ipis_transaction_errorlog(ls_chgcd,'','f_down_ipis_mis_inv201',&
//						lstr_ipis.t_sqlpis.sqlerrtext,'제품입고정보 삭제 에러', g_s_empno, g_s_ipaddr, g_s_macaddr)
//					return -1
//				end if
//				
//				 // 재공생성로직
//				li_retcnt = f_wip001_crud_logic( ls_chgcd, '01', 'RM', ls_srno, ls_srno1, ls_cls, ls_xplant, ls_div, &
//			  			ls_itno, ls_cls, ls_srce, ld_convqty, ' ', ' ', ls_dept, ' ', ld_qty, ld_qty, &
//						ls_tdte4, ls_tdte4, ld_amt, lstr_ipis.t_sqlpis, ag_message )
//				if li_retcnt = -1 then return -1
		case else
			  ag_message = "데이타구분 CUD에 해당하지 않습니다."
			  return -1
	end choose
next

return 0
end function

