$PBExportHeader$f_up_ipis_mis_tis.srf
$PBExportComments$반출정보
global type f_up_ipis_mis_tis from function_object
end type

forward prototypes
global function integer f_up_ipis_mis_tis (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[])
end prototypes

global function integer f_up_ipis_mis_tis (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[]);string ls_chgcd, ls_xplant, ls_div, ls_itno, ls_dept, ls_kbno, ls_tdte4, ls_tdte3, ls_tfill, ls_id, ls_invstcd, ls_kit
string ls_itnm, ls_spec, ls_xtype, ls_rvno
String ls_cls, ls_srce, ls_pdcd, ls_xplan, ls_mlan, ls_xunit, ls_kbcd, ls_vsrno, ls_vndnm, ls_vndr, ls_xuse
String ls_ckey, ls_costdiv, ls_srno, ls_srno1, ls_srno2, ls_slno, ls_flag, ls_pjtno, ls_csrno, ls_cpcnt, ls_stcd, ls_gubun
String ls_stype, ls_citno, ls_suse, ls_ordno, ls_custcd, ls_scustcd, ls_accd, ls_taxcd, ls_kitcd, ls_key
String ls_csngb,ls_ivgb, ls_tempcustcd, ls_lcno, ls_lcdt, ls_invoice
String ls_epno, ls_cur, ls_mkcd, ls_epdt, ls_paycd , ls_deptcd
dec{0} ld_saud, ld_ohamt, ld_amt, ld_cpcnt, ld_dcqty, ld_saqty, ld_compamt, ld_tramt
dec{1} ld_qty, ld_ohuqty, ld_ohrqty, ld_ohsqty, ld_uqty, ld_rqty, ld_sqty, ld_iperp1, ld_compqty, ld_tqty4
dec{2} ld_costls, ld_xcost, ld_costav
dec{3} ld_luprc, ld_muprc
dec{4} ld_convqty
dec{7} ld_ecost
integer	li_cnt, li_index, li_Retcnt, li_cpcnt, li_chk
Boolean lb_trachk = False

string ls_carno, ls_prtpln, ls_tdte, Ckey, ls_iludt
dec ld_tqty, ld_ohqty, ld_modqty
str_ipis_server lstr_ipis

//***AS400 접속여부 체크, 저녁8-아침8 인터페이스 저장
li_index = f_ipis_server_get_transaction(ag_str_ipis, 'X', 'Z')

If li_index = -1 then
		ag_message = "A/S400, INT 서버 연결에 실패하였습니다."
		return -1
End if

lstr_ipis = ag_str_ipis[li_index]

ls_chgcd  = trim(ag_dwo.getitemstring(1,"chgcd"))
//*** 업무로직 적용
choose case ls_chgcd
	case 'C'	
			ls_xplant = Trim(ag_dwo.getitemstring(1,"xplant"))
			ls_div    = Trim(ag_dwo.getitemstring(1,"div"))
			ls_vsrno  = Trim(ag_dwo.getitemstring(1,"vsrno"))
			ls_carno  = Trim(ag_dwo.getitemstring(1,"carno"))
			ls_prtpln = Trim(ag_dwo.getitemstring(1,"prtpln"))
			
			SELECT "PBCOMMON"."DAC001"."DCODE"  
			 INTO :ls_deptcd
			 FROM "PBCOMMON"."DAC001",   
					"PBCOMMON"."DAC003"  
			WHERE ( "PBCOMMON"."DAC001"."DCODE" = "PBCOMMON"."DAC003"."PEDEPT" ) and  
					( "PBCOMMON"."DAC001"."DUSE" = ' ' ) AND  
					( "PBCOMMON"."DAC001"."DTODT" = 0 ) AND  
					( "PBCOMMON"."DAC003"."PEEMPNO" = :g_s_empno ) Using lstr_ipis.t_sqlpis;					
						
			if lstr_ipis.t_sqlpis.sqlcode <> 0 then
				ag_message = "부서코드 정보 DB CHECK error"
				return -1
			end if
				
			ls_slno = f_Get_Slno( Mid( ls_deptcd,1,2 ) + '00' + Mid(g_s_date,4,3) )
				
			for li_cnt = 1 to ag_dwo.rowcount()				
				ls_itno   = Trim(ag_dwo.getitemstring(li_cnt,"itno"))
				ld_tqty   = ag_dwo.getitemdecimal(li_cnt,"tqty4")
				ls_tdte   = Trim(ag_dwo.getitemstring(li_cnt,"tdte4"))
				ls_kbno   = Trim(ag_dwo.getitemstring(li_cnt,"kbno"))
				
				//*** 결산년월 Check
				If f_Get_Ctlchk( ls_tdte, "" ) = -1 Then
					ag_message = "마감이후 작업 불가"
					return -1	
				End if
				
				//*** item Master Check                                                                                                                                              
				SELECT ITNM, SPEC, XTYPE, RVNO                                                
				  INTO :ls_itnm, :ls_spec, :ls_xtype, :ls_rvno                                     
				FROM PBINV.INV002                                                             
				WHERE COMLTD = '01' AND ITNO   = :ls_itno Using lstr_ipis.t_sqlpis;
																													  
				If lstr_ipis.t_sqlpis.sqlcode <> 0 then                                                          
					ag_message = "품목기본정보 미존재"
					return -1                                                           
				End if
				
				//*** item Balance Check
				SELECT CLS, SRCE, SUBSTR(PDCD,1,2), COSTDIV, XPLAN, MLAN, XUNIT, SAUD, OHUQTY, OHRQTY, OHSQTY,  OHAMT, COSTAV, COSTLS, IPERP1                                          
				  INTO :ls_cls, :ls_srce, :ls_pdcd, :ls_costdiv, :ls_xplan, :ls_mlan, :ls_xunit, :ld_saud, 
						 :ld_ohuqty, :ld_ohrqty, :ld_ohsqty, :ld_ohamt, :ld_costav, :ld_costls, :ld_saqty                       
				FROM PBINV.INV101                                                             
				WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;
				
				If lstr_ipis.t_sqlpis.sqlcode <> 0 then                                                          
					ag_message = "품목상세정보 미존재"
					return -1                                                           
				End if				
				
			  SELECT "PBINV"."INV108"."GUBUN" INTO :ls_xuse
				 FROM "PBINV"."INV002",   
						"PBINV"."INV108"  
				WHERE ( "PBINV"."INV002"."COMLTD" = "PBINV"."INV108"."COMLTD" ) and  
						( "PBINV"."INV002"."ITNO" = "PBINV"."INV108"."ITNO" ) and  
						( "PBINV"."INV108"."COMLTD" = '01' ) AND  
						( "PBINV"."INV108"."XPLANT" = :ls_xplant ) AND  
						( "PBINV"."INV108"."DIV" = :ls_div ) AND  
						( "PBINV"."INV108"."VSRNO" = :ls_vsrno ) AND 
						( "PBINV"."INV108"."ITNO" = :ls_itno ) AND
						( "PBINV"."INV108"."STOP" <> 'S') and
						( "PBINV"."INV108"."KBCD" <> 'K')  Using lstr_ipis.t_sqlpis;					
							
					if lstr_ipis.t_sqlpis.sqlcode <> 0 then
						ag_message = "품목별 사급업체 정보 DB CHECK error"
						return -1
					end if
				
				If ls_xuse = 'Y' Then 
					ls_xuse = '07'
				Else
					ls_xuse = '04'
				End If
	
				ld_ohqty = ld_Uqty - ld_saqty
				
				If ls_xuse = '07' Then
					
					SELECT Count("ITNO")	INTO :li_cnt
					  FROM "PBINV"."INV304"  
					WHERE "COMLTD" = '01'    AND "XPLANT" = :ls_xplant AND
							"DIV"    = :ls_div AND "ITNO"   = :ls_itno AND "VSRNO" = :ls_vsrno Using lstr_ipis.t_sqlpis;					
							
					if lstr_ipis.t_sqlpis.sqlcode <> 0 then
						ag_message = "유상사급 정보 DB CHECK error"
						return -1
					end if
							
					If li_cnt < 1 Then          
						ag_message = "유상사급단가가 존재하지 않습니다. 단가를 입력후 처리바랍니다."
						Return -1
					End If
					
				End if
				
				If ld_xcost = 0 Then   // 이동평균단가 = 0
					If	Not (ls_srce = '03' Or ls_srce = '05' or ls_srce = '50' ) Then
						ag_message = "이동평균단가가 0인 품목은 자가품이나 외주사급, 부외재고인경우에만 불출할수 있습니다."
						Return -1
					End If				
				End If
				
			
				If	Not (ls_srce = '03' ) Then
					
					If ld_tqty > ld_ohqty Then // 총불출량을 현재고량과 비교.
						ag_message = "재고량보다 많이 불출할수 없습니다."
						Return -1
					End If
					
				End If
				
				If Not ( ls_srce = '03' Or ls_cls = '50' )  Then
					
					ld_modqty = ld_ohrqty + ld_ohsqty
					
					// 선택한 재고상태 품목의 불출량이 현재고량과 같고 나머지 재고상태(부외제외)의 현재고가 없을경우.
					If ld_tqty = ld_ohqty And ld_modqty = 0 Then
										
						ld_tramt = ld_ohamt    // 남은 현재고금액이 불출금액.
						
					Else                // (이동평균단가차이때문에 현재고금액이 남는 경우를 방지.
						
						ld_tramt = Truncate( ld_xcost * ld_tqty, 0 )
						
					End If
					
				Else  // 자가품, 외주가공
					
					ld_tramt = 0
					
				End If
				
								
				///////////////////////////////////////////////////
				// ***            반출증 Detail Move(Inv401) *** //
				///////////////////////////////////////////////////
										
				Ckey = 'IS' + ls_xplant + ls_div + ls_cls + Mid( g_s_date, 4, 3 )
				
				ls_srno    = f_Get_Ctlno(Ckey)                     // Key
				ls_srno1   = ls_xplant + ls_div                    // Key                
				ls_srno2   = ls_cls              // Key
				ls_costdiv = f_Get_AccDiv( ls_xplant, ls_div, ls_pdcd )
				
				ls_vndr  = f_Vndr_Pur( ls_vsrno, 'S', 'D' )
				ls_vndnm = f_Vdnm_Pur( ls_vsrno, 'S', 'D' )
					
				INSERT INTO PBINV.INV401 (                                                      
						  COMLTD, SLIPTYPE, SRNO, SRNO1, SRNO2, XPLANT, DIV,                            
						  COSTDIV,    SLNO, ITNO,  RVNO,  ITNM,  SPEC,  XTYPE,                          
						  XUNIT,       CLS, SRCE,  PDCD, XPLAN,  MLAN,  RQNO,                           
						  NQC,        KBCD, DUDT, PURNO, VSRNO,  VNDR,  VNDNM,                          
						  XPAY,      OTXCD, LCNO,  LCDT,  DEPT, RTNGUB,  XUSE,                          
						  RSVSRNO,    ORNO, MCHNO, EXFR,  EXTO,  RQDIV,  BLNO,                          
						  EXCH,       CURR, FOBAMT,TDTE1,TDTE2,  TDTE3, TDTE4,                          
						  TDTE5,     TDTE6,  TQTY1,TQTY2,TQTY3,   TQTY4, XCOST,                          
						  TRAMT,     TSHSL,  RTCOM,RTQTY,SSSRNO,  SSCOM,RFCD,                           
						  CHKCD,     TSAMT,  TFILL,TCTTL,  DSAG,  MAKER,PJTNO,                          
						  INVSTCD,  INVEST,   EXTD,INPTID,  INPTDT,UPDTID, UPDTDT,                      
						  IPADDR,   MACADDR )                                                           
				VALUES                                                                       
						  ('01','IS',  :ls_srno, :ls_srno1, :ls_cls,  :ls_xplant, :ls_div,                     
						  :ls_costdiv, :ls_slno, :ls_itno,  :ls_rvno, :ls_itnm,   :ls_spec, :ls_xtype,            
						  :ls_xunit,   :ls_cls,  :ls_srce,  :ls_pdcd, :ls_xplan,  :ls_mlan,   ' ',             
						  ' ',         ' ',      ' ',      ' ',       :ls_vsrno,  :ls_vndr, :ls_vndnm,              
						  ' ',         ' ',      ' ',      ' ',        ' ',            ' ',  :ls_xuse,             
						  ' ',         ' ',      ' ',      ' ',        ' ',            ' ',   ' ',              
							 0,         ' ',        0,      ' ',        ' ',            ' ', :ls_tdte,              
						  ' ',         ' ',        0,        0,          0,        :ld_tqty, :ld_xcost,               
						 :ld_tramt,    ' ',      ' ',        0,        ' ',            ' ',      ' ',              
						  ' ',           0,      :ls_kbno,       0,        ' ',            ' ',      ' ',               
						  'U',         ' ',      'IPIS',    :g_s_empno,  :g_s_date, :g_s_empno, :g_s_datetime,                 
						  ' ',        ' ' ) Using lstr_ipis.t_sqlpis;	
						  
			  if lstr_ipis.t_sqlpis.sqlcode <> 0 then
				  ag_message = "Trans 데이터 생성에 실패하였습니다."
				  f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tis',&
				  lstr_ipis.t_sqlpis.sqlerrtext,'Trans 데이터 생성에 실패', g_s_empno, g_s_ipaddr, g_s_macaddr)
				  return -1
			  end if
						  
					
			//////////////////////////////////////////////////////////////////////////////
			// * 불출된 수불(Trans) Table의 정보를 기준으로 재고(Balance) Table  UPDATE. 
			//
			//////////////////////////////////////////////////////////////////////////////
			   If Not ( ls_srce = '03' ) Then 
					ls_iludt = g_s_date
				else
					ls_iludt = ' '
					ld_tqty = 0
					
				End If
				// 자가품이나 외주가공품은 수량만 영향을 준다.
				If  Not (ls_srce = '03' Or ls_srce = '05' Or ls_cls = '50' ) Then
					ld_tramt = 0
				end if			
		
				UPDATE PBINV.INV101                                                       
					SET OUTQTY = OUTQTY + :ld_tqty,                                             
						 OUTAMT = OUTAMT + :ld_tramt,                                             
						 OHUQTY = OHUQTY - :ld_tqty,
						 OHAMT  = OHAMT  - :ld_tramt,
						 ILUDT  = :ls_iludt,
						 UPDTID = :g_s_empno,                                                       
						 UPDTDT = :g_s_date                                                      
					WHERE COMLTD = '01' AND XPLANT = :ls_xplant AND DIV = :ls_div AND ITNO = :ls_itno Using lstr_ipis.t_sqlpis;					
					
					if lstr_ipis.t_sqlpis.sqlcode <> 0 then
						ag_message = "Balance DB 업데이트 error invoke"
						f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tis',&
						lstr_ipis.t_sqlpis.sqlerrtext,'Balance DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
						return -1
					end if				
				
				//재공수불반영	
				f_wip_main_update('01','IS',ls_srno,ls_srno1,ls_cls)
				
			next	
			/////////////////////////////////////////
			// ***         => 반출증 Head Move *** //
			/////////////////////////////////////////
		 
		  INSERT INTO PBINV.INV302  (
					  COMLTD,   XPLANT,   DIV,     SLNO,    VSRNO,   
					  XDATE,  CARNO,    RTNPRT,  ITYPE,   KBCD,   
					  MTYPE, COMREQPLN, COMREQDAT, COMREQTM, COMPLN,   
					  COMDAT, COMTM,    DESREQPLN, DESREQDAT, DESREQTM,   
					  PRTPLN, PRTDAT,   PRTTM,   DESPLN,     DESDAT,   
					  DESTM,  DESCD,    STCD,    EXTD,     INPTID,   
					  INPTDT, UPDTID,   UPDTDT,  IPADDR,   MACADDR )  
		  VALUES 
				  ( '01',   :ls_xplant, :ls_div, :ls_slno, :ls_vsrno,  
					 :ls_tdte, :ls_carno,'Y'   , 'A',      ' ',  
					 ' ',       ' ',      ' ',    ' ',      ' ',
					 ' ',       ' ',      ' ',    ' ',      ' ',
					 :ls_prtpln, ' ',     ' ',    ' ',      ' ',   
					 ' ',       ' ',      ' ',    'IPIS',   :g_s_empno,  
					 :g_s_date, :g_s_empno, :g_s_datetime,  ' ',  ' '    
					)  Using lstr_ipis.t_sqlpis;	
						  
		  if lstr_ipis.t_sqlpis.sqlcode <> 0 then
			  ag_message = "반출증 Header 데이터 생성에 실패하였습니다."
			  f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tis',&
			  lstr_ipis.t_sqlpis.sqlerrtext,'반출증 Header 데이터 생성에 실패', g_s_empno, g_s_ipaddr, g_s_macaddr)
			  return -1
		  end if


	case 'U'		


	case 'D'

	case else
		  ag_message = "데이타구분 CUD에 해당하지 않습니다."
		  return -1
end choose
ag_message = ls_slno

return 0
end function

