$PBExportHeader$f_pur040_cutcrlf.srf
$PBExportComments$CR(carriage return),LF(line feed)부분자르기
global type f_pur040_cutcrlf from function_object
end type

forward prototypes
global function string f_pur040_cutcrlf (string as_string, long al_byte)
end prototypes

global function string f_pur040_cutcrlf (string as_string, long al_byte);//스트링 사이에 공백이나 특수문자 있으면 안됨 => 숫자,영문대문자,한글
//Carriage Return(CR, ascii code:13)  => \r
//Line Feed(LF, ascii code:10)   => \n
long  ll_num, ll_cnt
char lc_chk, lc_chk1
string ls_string = ""
if trim(as_string) = '' or al_byte = 0 then
	return ''
end if
//asc 47 '/'이하,  58 ~ 64, 91 ~ 161
as_string = trim(as_string)
for ll_num = 1  to len(trim(as_string))
	ll_cnt = ll_cnt + 1	//size
	lc_chk  = mid(as_string,ll_num,1)
	lc_chk1 = mid(as_string,ll_num+1,1)  //다음자리
	/*
	if isnull(lc_chk) &
	or asc(lc_chk) = 13 & 
	or asc(lc_chk) = 10 then	
      ls_string = ls_string + space(1)  //CR,LF 는 공백 1자리씩 주자!
		continue
	end if	
	//ll_cnt = ll_cnt + 1		//size
	ls_string = ls_string + lc_chk
	
	IF ll_cnt =  al_byte Then
		Exit
	End IF
	*/
	
	if ( asc(lc_chk) = 13 & 
	and asc(lc_chk1) = 10  ) then
	   ls_string = ls_string + space(al_byte - ll_cnt + 1)
	   ll_num = ll_num + 1
		ll_cnt = 0
	elseif ll_cnt = al_byte then
		ls_string = ls_string + lc_chk 
	   ll_cnt = 0
	else
		//CR,LF제거 해야함.
		if asc(lc_chk) = 13 or asc(lc_chk) = 10 then
			//ls_string = ls_string + ''
		else
			ls_string = ls_string + lc_chk
		end if
	end if
	
next

Return  ls_string
end function

