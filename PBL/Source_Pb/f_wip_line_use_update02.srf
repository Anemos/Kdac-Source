$PBExportHeader$f_wip_line_use_update02.srf
$PBExportComments$Line사용량 계산(WIP002)
global type f_wip_line_use_update02 from function_object
end type

forward prototypes
global function string f_wip_line_use_update02 (string a_chk, string a_comltd, string a_slipxtype, string a_srno, string a_srno1, string a_srno2, string a_xplant, string a_div, string a_slno, string a_itno, string a_xuse, string a_rtngub, string a_dept, string a_tdte4, decimal a_tqty4)
end prototypes

global function string f_wip_line_use_update02 (string a_chk, string a_comltd, string a_slipxtype, string a_srno, string a_srno1, string a_srno2, string a_xplant, string a_div, string a_slno, string a_itno, string a_xuse, string a_rtngub, string a_dept, string a_tdte4, decimal a_tqty4);//***********************************************************************************
//
// 완성품 입고, 재공품(10/03) 불출시에 라인재공에 대한 하위품번의 사용량 계산
// WIP004에 사용수량 UPDATE 
// 인수 : 체크, 회사, 입고전표, 구매요구번호, 분할발주횟수, 분할납품회수, 지역, 공장, 거래명세표번호,
//        입고품번, 불출용도,반납구분, 부서, 입고일, 입고수량
// 반환값 : 성공('Y'), 실패('N')
//
//***********************************************************************************

string l_s_plant,l_s_div,l_s_itno,l_s_pitno,l_s_opcd,l_s_tserl,l_s_srce,l_s_opitn,l_s_option[],l_s_wkct
dec{4} l_n_qty1,l_n_return_qty,l_n_tqty4,l_n_qty[],l_n_waohqt, li_rtn, lc_convqty
integer i,j, li_chk

select count(*) into :li_chk
	from pbwip.wip004
	where wdcmcd = :a_comltd and wdprsrty = :a_slipxtype and wdprsrno = :a_srno and
			wdprsrno1 = :a_srno1 and wdprsrno2 = :a_srno2  using sqlca;
if li_chk > 0 then
	return 'N'
end if

select srce,convqty into :l_s_srce,:lc_convqty 
	from pbinv.inv101
	where comltd = :a_comltd and
			xplant = :a_xplant and
			div = :a_div and
			itno = :a_itno using sqlca;
			
if sqlca.sqlcode = 0 then
	if f_spacechk(l_s_srce) = -1 or l_s_srce = '03' then
		a_dept = '9999'
		if a_slipxtype = 'RS' then
			select tqty2 + tqty3 + tqty4  into :li_rtn
				from pbinv.inv401
				where comltd = :a_comltd and
						sliptype = :a_slipxtype and
						srno = :a_srno and
						srno1 = :a_srno1 and
						srno2 = :a_srno2 using sqlca;
			if sqlca.sqlcode <> 0 or li_rtn = 0 then
				return 'N'
			end if
			if a_xuse = '04' then
				if a_rtngub = '02' then
					return 'N'
				end if
			else
				if a_rtngub <> '02' then
					return 'N'
				end if
			end if
			l_n_tqty4 = li_rtn * lc_convqty
		else
			l_n_tqty4 = a_tqty4 * lc_convqty
		end if
	else
		return 'N'
	end if
else
	return 'N'
end if

// bom temp db 생성
f_creation_bom_after(a_tdte4,a_xplant,a_div,a_itno,'G','Y')

// 호환 부품번의 하위 품번들만 전개(수불 관리 대상 품번들만)
declare Bom_Temp Cursor for
	select tcitn,tserl,tqty1,twkct from qtemp.bomtemp,pbinv.inv101
		where tplnt = :l_s_plant and tdvsn = :l_s_div and tpitn = :l_s_itno and tplnt = xplant and tdvsn = div and tcitn = itno and
				( cls = '10' or cls = '40' or cls = '50') and srce <> '03'  and topcd = '2' and tcmcd = :g_s_company
	order by tserl
	using sqlca ;

// 호환 부품번 Find	
declare Bom_003 Cursor for
	select ofitn,srce from pbpdm.bom003,pbinv.inv101
		where ocmcd = :g_s_company and oplant = :l_s_plant and odvsn = :l_s_div and opitn = :l_s_opitn and odvsn = div and ofitn = itno and
				(( "PBPDM"."BOM003"."OEDTE" = ' '  and "PBPDM"."BOM003"."OEDTM" <= :a_tdte4 ) or  
				( "PBPDM"."BOM003"."OEDTE" <> ' ' and "PBPDM"."BOM003"."OEDTM" <= :a_tdte4 and "PBPDM"."BOM003"."OEDTE" >= :a_tdte4 ))
	using sqlca ;
// 호환 부품번의 하위품목 제외한 품번들 Find 	
declare Wip_001 Cursor for
	select topcd,tplnt,tdvsn,tpitn,tcitn,tqty1,twkct from qtemp.bomtemp,pbinv.inv101
		where tcmcd = :g_s_company and tplnt = :a_xplant and tdvsn = :a_div and 
				tcmcd = comltd and tplnt = xplant and tdvsn = div and tcitn = itno and
				( cls = '10' or cls = '40' or cls = '50') and srce <> '03' and topcd <> '2'
	using sqlca ;
open Wip_001 ;
	do while true
		fetch Wip_001 into :l_s_opcd,:l_s_plant,:l_s_div,:l_s_pitno,:l_s_itno,:l_n_qty1,:l_s_wkct ;
		if sqlca.sqlcode <> 0 then
			exit
		end if
		if l_s_wkct = '8888' then
			continue
		end if
		if l_s_itno = 'RS0115D' OR l_s_itno = '10473999D' then
			l_s_itno = l_s_itno
		end if
		l_n_return_qty = f_wip_use_update_02(a_comltd,a_slipxtype,a_Srno,a_srno1,a_srno2,l_s_plant,l_s_div,a_slno,&
																l_s_itno,a_itno,l_s_opcd,a_xuse,a_rtngub,a_Dept,a_tdte4,l_n_tqty4, &
																	l_n_qty1,'1')
//		if l_n_return_qty = -1 then
//			return 'N'
//		end if
		// 호환 주품번이면서 사용수량이 재고 수량 보다 많은 경우	
		if l_n_return_Qty <> 0 then 
			l_s_opcd = '2'
			l_n_Return_qty = l_n_return_Qty / l_n_Qty1  // 남은 수량을 원단위량으로 나눠서 재계산
			l_s_opitn = l_s_itno
			i = 0
	  // 호환 부품번의 하위 품번 및 원단위 수량 Find
			open Bom_003 ;
				do while true 
					fetch Bom_003 into:l_s_itno,:l_s_srce ;
					if sqlca.sqlcode <> 0 then
						exit
					end if
					if f_spacechk(l_s_srce) = -1 or l_s_srce = '03' then
						open Bom_Temp ;
							do while true
								fetch Bom_temp into :l_s_itno,:l_s_tserl,:l_n_qty1,:l_s_wkct ;
								if sqlca.sqlcode <> 0 then
									exit
								end if 
								if l_s_wkct = '8888' then
									continue
								end if
								i++
								l_s_option[i] = l_s_itno
								l_n_qty[i]    = l_n_qty1
							loop
						close Bom_temp ;
					else
						i++
						l_s_option[i] = l_s_itno
						select tqty1,twkct into:l_n_qty[i],:l_s_wkct from qtemp.bomtemp
							where tplnt = :l_s_plant and tdvsn = :l_s_Div and tpitn = :l_s_pitno and tcitn = :l_s_itno 
						using sqlca ;
						if l_s_wkct = '8888' then
							i = i - 1
						end if
					end if
				loop
			close Bom_003 ;
			if i = 1 then
				l_n_return_Qty = l_n_return_qty * l_n_qty[i] // 재계산된 수량에다 실제 Bom 원단위량을 곱한다
				li_rtn = f_wip_use_update_02(a_comltd,a_slipxtype,a_Srno,a_srno1,a_srno2,l_s_plant,l_s_div,a_slno,&
																l_s_option[i],a_itno,l_s_opcd,a_xuse,a_rtngub,a_Dept,a_tdte4,l_n_tqty4, &
																	l_n_return_Qty,'1')
//				if li_rtn = -1 then
//					return 'N'
//				end if
			elseif i > 1 then
				for j = 1 to i
					l_n_return_Qty = l_n_return_qty * l_n_qty[j] // 재계산된 수량에다 실제 Bom 원단위량을 곱한다
					SELECT WAOHQT INTO:l_n_waohqt   FROM "PBWIP"."WIP001" 
						WHERE WACMCD = :G_S_COMPANY AND WAPLANT = :l_s_plant AND WADVSN = :l_s_div AND 
								WAORCT = '9999' AND WAITNO = :l_s_option[j] 
					USING SQLCA;
					
					// 호환 부품번의 하위 품번들의 사용수량이 재고 수량보다 적으면 다음 하위 품번 find,아니면 DB Write후 exit
					
					if l_n_waohqt < l_n_return_Qty then
						l_n_Return_Qty -= l_n_waohqt   // 사용량에서 재고량 빼고 재고량을 사용량을 db write
						li_rtn = f_wip_use_update_02(a_comltd,a_slipxtype,a_Srno,a_srno1,a_srno2,a_xplant,l_s_div,a_slno,&
																l_s_option[j],a_itno,l_s_opcd,a_xuse,a_rtngub,a_Dept,a_tdte4,l_n_tqty4, &
																	l_n_waohqt,'1')
//						if li_rtn = -1 then
//							return 'N'
//						end if
						l_n_return_qty = l_n_return_qty / l_n_qty[j] // 남은 수량을 원단위량으로 나눠서 재계산
					else
						li_rtn = f_wip_use_update_02(a_comltd,a_slipxtype,a_Srno,a_srno1,a_srno2,a_xplant,l_s_div,a_slno,&
								   				l_s_option[j],a_itno,l_s_opcd,a_xuse,a_rtngub,a_Dept,a_tdte4,l_n_tqty4, &
														l_n_return_Qty,'1')
//						if li_rtn = -1 then
//							return 'N'
//						end if
						exit
					end if
				next
			end if
		end if
	loop
close wip_001;
return 'Y'	
			
	


end function

