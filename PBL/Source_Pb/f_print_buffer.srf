$PBExportHeader$f_print_buffer.srf
$PBExportComments$print ( print용 buffer의 값을 변경 )
global type f_print_buffer from function_object
end type

forward prototypes
global subroutine f_print_buffer (integer start, integer length, string data, ref string buffer, integer width)
end prototypes

global subroutine f_print_buffer (integer start, integer length, string data, ref string buffer, integer width);//
// 출력 buffer의 값을 변경한다. (시작위치,길이 및 Data 지정)
//
// return :		string		출력할 data
//
//	argument :	1) start,	int,		몇번째 자리부터
//					2) length,	int,		몇자리를,	(-)인 경우에는 우측정렬, 0 이면 data의 자릿수 만큼
//					3) data,		string,	채울 문자값
//					4) buffer,	string,	출력할 자료가 들어있던 곳
//					5) width,	int,		page 넓이
//

int	ii, jj
string	ls_data

//
// buffer 초기화 (빈자리를 blank로 채워준다)
//
if	isnull(buffer) or trim(buffer)='' then
	buffer = ' '
end if
for ii = len(buffer) to width step 1
	buffer = buffer + ' '
next

//
// Data 초기화  (length에 맞게 blank를 채운다)
//
if isnull(data) or trim(data)='' then	data = ' ' 
if length = 0	then	length = Len(data)		// data 길이 지정않한 경우
if length = 0	then	return
for ii = len(data) + 1 to length step 1		// 빈자리 blank로 채우기
	data = data + ' '
next
	
// 우측정렬
if length < 0 then
	length = - length

	if len(data) > length then								// data가 옮길 자리보다 길은 경우
		data = mid(data, len(data) - length + 1, len(data))

	elseif len(data) < length then						// data가 옮길 자리보다 짧은 경우
		ls_data = data
		data = ' '
		for ii = length - len(ls_data) - 1 to 1 step -1
			data = data + ' '
		next
		data = data + ls_data
	end if

end if
	
// buffer의 값 변경
if start <= 1	then
	start = 1
	buffer = mid(data, 1, length) + mid(buffer, length + 1, width)

elseif start + length > width then
	buffer = mid(buffer, 1, start - 1) + mid(data, 1, length)

else
	buffer = mid(buffer, 1, start - 1) &
			 + mid(data, 1, length) &
			 + mid(buffer, start + length, width)
end if
buffer = mid(buffer, 1, width)
end subroutine

