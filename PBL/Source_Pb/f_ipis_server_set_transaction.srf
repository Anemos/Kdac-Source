$PBExportHeader$f_ipis_server_set_transaction.srf
$PBExportComments$트랜잭션 객체생성 함수
global type f_ipis_server_set_transaction from function_object
end type

forward prototypes
global function any f_ipis_server_set_transaction (string ag_gubun, any ag_areadivision[])
end prototypes

global function any f_ipis_server_set_transaction (string ag_gubun, any ag_areadivision[]);//************************
//* ag_gubun 			: 전공장서버('ALL'), 선택공장('EACH'), 설비관리('CMMS')
//* ag_areadivision	: 'EACH' 인 경우에 지역공장 배열
//* return 			: str_ipis_server배열 구조체 ( IPIS 트랜잭션 객체, 서버 ID )
//************************
Integer li_cnt
string ls_serverid, ls_area, ls_division
DateTime ldt_now
str_ipis_server lstr_ipis_svr[], lstr_ipis
transaction l_transaction

if ag_gubun = 'EACH' then
	if isnull(UpperBound(ag_areadivision)) or UpperBound(ag_areadivision) < 1 then
		return lstr_ipis_svr	
	end if
	
	//****
	//*  선택적 공장별로 트랜잭션 생성
	//****
	for li_cnt = 1 to UpperBound(ag_areadivision)
		ls_area = mid(ag_areadivision[li_cnt],1,1)
		ls_division = mid(ag_areadivision[li_cnt],2,1)
		CHOOSE CASE Trim(ls_area + ls_division)
			CASE 'DA','DM','DS','DH','DV','D'		
				lstr_ipis.s_serverid = 'DAEGU'
//			CASE 'DM','DS'		
//				lstr_ipis.s_serverid = 'MOR'
//			CASE 'DH','DV'		
//				lstr_ipis.s_serverid = 'HVA'
			CASE 'JH','JM','JS','J'		
				lstr_ipis.s_serverid = 'JIN'
			CASE 'YY','Y'		
				lstr_ipis.s_serverid = 'YEO'
			CASE 'BA','BM','BS','BH','BV','BY','B'		
				lstr_ipis.s_serverid = 'BUP'
			CASE 'KH','KM','KS','KY','KV','K'		
				lstr_ipis.s_serverid = 'KUN'
			CASE 'XZ'
				lstr_ipis.s_serverid = 'AS400'
			CASE ELSE
				return lstr_ipis_svr
	  	END CHOOSE
		l_transaction = CREATE transaction
		if lstr_ipis.s_serverid = 'AS400' then
			// 먼저 시간대를 체크한다.
			SELECT CURRENT TIMESTAMP Into :ldt_now FROM PBCOMMON.COM000 ;
			
			//if string(ldt_now,"hh") >= "08" and string(ldt_now,"hh") < "20" then
				// AS400 Connection
				l_transaction.DBMS       = "ODBC"
				l_transaction.autocommit = false
				l_transaction.DBParm     = "ConnectString='DSN=CA/400 ODBC for PB;UID=CASINV;PWD=DPAINV',PBCatalogOwner='PBCOMMON',CommitOnDisconnect='No',DisableBind=1"
			//end if
		else
			// MSSQL Connection
			l_transaction.ServerName = ProfileString(gs_ini_file,lstr_ipis.s_serverid,"ServerName",	" ")
			l_transaction.DBMS       = ProfileString(gs_ini_file,lstr_ipis.s_serverid,"DBMS",			" ")
			l_transaction.Database   = trim(ProfileString(gs_ini_file,lstr_ipis.s_serverid,"DataBase",			" "))
			l_transaction.LogID      = ProfileString(gs_ini_file,lstr_ipis.s_serverid,"LogId",			" ")
			l_transaction.LogPass    = trim(ProfileString(gs_ini_file,lstr_ipis.s_serverid,"LogPass",		" "))
			l_transaction.DbParm     = "appname='INTERFACE for KDAC', host='str_ipis_server', CommitOnDisconnect='No'"
			l_transaction.AutoCommit = false
		end if
		
		connect using l_transaction;
	
		If l_transaction.sqlcode <> 0 then
			disconnect using l_transaction ;
			destroy l_transaction
			continue
		else
			lstr_ipis.t_sqlpis = l_transaction
			lstr_ipis_svr[UpperBound(lstr_ipis_svr) + 1] = lstr_ipis
		end if
	next
	
	// 공무자재 마스타(inv101)를 위한 인터페이스 트랜잭션 생성
	// Interface DB Connection
	l_transaction = CREATE transaction
	
	lstr_ipis.s_serverid 		= 'INT'
	l_transaction.ServerName 	= ProfileString(gs_ini_file,'DAEGU',"ServerName",	" ")
	l_transaction.DBMS       	= ProfileString(gs_ini_file,'DAEGU',"DBMS",			" ")
	l_transaction.Database   	= "INTERFACE"
	l_transaction.LogID      	= ProfileString(gs_ini_file,'DAEGU',"LogId",			" ")
	l_transaction.LogPass    	= trim(ProfileString(gs_ini_file,'DAEGU',"LogPass",		" "))
	l_transaction.DbParm     	= "appname='INTERFACE for KDAC', host='str_ipis_server', CommitOnDisconnect='No'"
	l_transaction.AutoCommit 	= false
	
	connect using l_transaction;

	If l_transaction.sqlcode <> 0 then
		disconnect using l_transaction ;
		destroy l_transaction
	else
		lstr_ipis.t_sqlpis = l_transaction
		lstr_ipis_svr[UpperBound(lstr_ipis_svr) + 1] = lstr_ipis
	end if
	
	return lstr_ipis_svr
end if

if ag_gubun = 'CMMS' then
	if isnull(UpperBound(ag_areadivision)) or UpperBound(ag_areadivision) < 1 then
		return lstr_ipis_svr	
	end if
	
	//****
	//*  선택적 공장별로 트랜잭션 생성
	//****
	for li_cnt = 1 to UpperBound(ag_areadivision)
		ls_area = mid(ag_areadivision[li_cnt],1,1)
		ls_division = mid(ag_areadivision[li_cnt],2,1)
		CHOOSE CASE Trim(ls_area + ls_division)
			CASE 'DA','DM','DS','DH','DV','D'		
				lstr_ipis.s_serverid = 'DAEGU'
//			CASE 'DM','DS'		
//				lstr_ipis.s_serverid = 'MOR'
//			CASE 'DH','DV'		
//				lstr_ipis.s_serverid = 'HVA'
			CASE 'JH','JM','JS','J'		
				lstr_ipis.s_serverid = 'JIN'
			CASE 'YY','Y'		
				lstr_ipis.s_serverid = 'YEO'
			CASE 'BA','BM','BS','BH','BV','BY','B'		
				lstr_ipis.s_serverid = 'BUP'
			CASE 'KH','KM','KS','KY','KV','K'		
				lstr_ipis.s_serverid = 'KUN'
			CASE 'XZ'
				lstr_ipis.s_serverid = 'AS400'		
			CASE ELSE
				return lstr_ipis_svr
	  	END CHOOSE
		l_transaction = CREATE transaction
		if lstr_ipis.s_serverid = 'AS400' then
			// 먼저 시간대를 체크한다.
			SELECT CURRENT TIMESTAMP Into :ldt_now FROM PBCOMMON.DAC001 FETCH FIRST 1 ROW ONLY;
			
			//if string(ldt_now,"hh") >= "08" and string(ldt_now,"hh") < "20" then
				// AS400 Connection
				l_transaction.DBMS       = "ODBC"
				l_transaction.autocommit = false
				l_transaction.DBParm     = "ConnectString='DSN=CA/400 ODBC for PB;UID=CASINV;PWD=DPAINV',PBCatalogOwner='PBCOMMON',CommitOnDisconnect='No',DisableBind=1"
			//end if
		else
			// MSSQL Connection
			l_transaction.ServerName = ProfileString(gs_ini_file,lstr_ipis.s_serverid,"ServerName",	" ")
			l_transaction.DBMS       = ProfileString(gs_ini_file,lstr_ipis.s_serverid,"DBMS",			" ")
			l_transaction.Database   = "CMMS"
			l_transaction.LogID      = ProfileString(gs_ini_file,lstr_ipis.s_serverid,"LogId",			" ")
			l_transaction.LogPass    = trim(ProfileString(gs_ini_file,lstr_ipis.s_serverid,"LogPass",		" "))
			l_transaction.DbParm     = "appname='INTERFACE for KDAC', host='str_ipis_server', CommitOnDisconnect='No'"
			l_transaction.AutoCommit = false
		end if
		
		connect using l_transaction;
	
		If l_transaction.sqlcode <> 0 then
			disconnect using l_transaction ;
			destroy l_transaction
			continue
		else
			lstr_ipis.t_sqlpis = l_transaction
			lstr_ipis_svr[UpperBound(lstr_ipis_svr) + 1] = lstr_ipis
		end if
	next
	
	// Interface DB Connection
	l_transaction = CREATE transaction
	
	lstr_ipis.s_serverid 	 = 'INT'
	l_transaction.ServerName = ProfileString(gs_ini_file,'DAEGU',"ServerName",	" ")
	l_transaction.DBMS       = ProfileString(gs_ini_file,'DAEGU',"DBMS",			" ")
	l_transaction.Database   = "INTERFACE"
	l_transaction.LogID      = ProfileString(gs_ini_file,'DAEGU',"LogId",			" ")
	l_transaction.LogPass    = trim(ProfileString(gs_ini_file,'DAEGU',"LogPass",		" "))
	l_transaction.DbParm     = "appname='INTERFACE for KDAC', host='str_ipis_server', CommitOnDisconnect='No'"
	l_transaction.AutoCommit = false
	
	connect using l_transaction;

	If l_transaction.sqlcode <> 0 then
		disconnect using l_transaction ;
		destroy l_transaction
	else
		lstr_ipis.t_sqlpis = l_transaction
		lstr_ipis_svr[UpperBound(lstr_ipis_svr) + 1] = lstr_ipis
	end if
	
	return lstr_ipis_svr
end if

if ag_gubun = 'ALL' then
	//****
	//*  전공장 트랜잭션 생성은 속도문제로 잠시보류함 ( 2007.03.13 )
	//****
	//for li_cnt = 1 to 7
	//	CHOOSE CASE li_cnt
	//		CASE 1
	//	 		lstr_ipis.s_serverid = 'ELE'
	//		CASE 2
	//			lstr_ipis.s_serverid = 'MOR'
	//		CASE 3
	//			lstr_ipis.s_serverid = 'HVA'
	//		CASE 4
	//			lstr_ipis.s_serverid = 'JIN'
	//		CASE 5
	//			lstr_ipis.s_serverid = 'YEO'
	//		CASE 6
	//			lstr_ipis.s_serverid = 'BUP'
	//		CASE 7
	//			lstr_ipis.s_serverid = 'KUN'
	//  	END CHOOSE
	//  	l_transaction = CREATE transaction
	//	l_transaction.ServerName = ProfileString(gs_ini_file,lstr_ipis.s_serverid,"ServerName",	" ")
	//	l_transaction.DBMS       = ProfileString(gs_ini_file,lstr_ipis.s_serverid,"DBMS",			" ")
	//	l_transaction.Database   = trim(ProfileString(gs_ini_file,lstr_ipis.s_serverid,"DataBase",			" "))
	//	l_transaction.LogID      = ProfileString(gs_ini_file,lstr_ipis.s_serverid,"LogId",			" ")
	//	l_transaction.LogPass    = trim(ProfileString(gs_ini_file,lstr_ipis.s_serverid,"LogPass",		" "))
	//	l_transaction.DbParm     = "appname='INTERFACE for KDAC', host='str_ipis_server'"
	//	l_transaction.AutoCommit = FALSE
	//
	//	connect using l_transaction;
	//
	//	If l_transaction.sqlcode <> 0 then
	//		disconnect using l_transaction ;
	//		destroy l_transaction
	// 		continue
	//	end if
	//	lstr_ipis.t_sqlpis = l_transaction
	//	lstr_ipis_svr[UpperBound(lstr_ipis_svr) + 1] = lstr_ipis
	//next
	
	//****
	//* 인터페이스 DB Connection 추가, 공통인 경우에는 인터페이스트랜잭션만 생성함.
	//****
	l_transaction = CREATE transaction
	l_transaction.ServerName = ProfileString(gs_ini_file,'DAEGU',"ServerName",	" ")
	l_transaction.DBMS       = ProfileString(gs_ini_file,'DAEGU',"DBMS",			" ")
	l_transaction.Database   = "INTERFACE"
	l_transaction.LogID      = ProfileString(gs_ini_file,'DAEGU',"LogId",			" ")
	l_transaction.LogPass    = trim(ProfileString(gs_ini_file,'DAEGU',"LogPass",		" "))
	l_transaction.DbParm     = "appname='INTERFACE for KDAC', host='str_ipis_server', CommitOnDisconnect='No'"
	l_transaction.AutoCommit = false
	
	connect using l_transaction;
	
	If l_transaction.sqlcode <> 0 then
		disconnect using l_transaction ;
		destroy l_transaction
		return lstr_ipis_svr
	end if
	lstr_ipis.s_serverid = 'INT'
	lstr_ipis.t_sqlpis = l_transaction
	lstr_ipis_svr[UpperBound(lstr_ipis_svr) + 1] = lstr_ipis
end if

return lstr_ipis_svr
end function

