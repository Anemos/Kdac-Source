$PBExportHeader$f_pur040_setunbl.srf
$PBExportComments$외자미입고발주처리
global type f_pur040_setunbl from function_object
end type

forward prototypes
global subroutine f_pur040_setunbl (string as_purno, string as_srno, string as_itno)
end prototypes

global subroutine f_pur040_setunbl (string as_purno, string as_srno, string as_itno);////////////////////////////////////////////////
// : 발주미선적량unbl취소, offer도 처리
//	 
////////////////////////////////////////////////

dec {2} ld_unof, ld_unbl, ld_pamt, ld_ofqty
string ls_srno1
 
  SELECT "PBPUR"."OPM102"."UNOF" ,"PBPUR"."OPM102"."UNBL"   
  INTO :ld_unof, :ld_unbl  
  FROM "PBPUR"."OPM102"  
  WHERE ("PBPUR"."OPM102"."COMLTD" = '01' ) and  
         ( "PBPUR"."OPM102"."PURNO" = :as_purno ) AND  
         ( "PBPUR"."OPM102"."SRNO" = :as_srno ) AND  
         ( "PBPUR"."OPM102"."ITNO" = :as_itno )   
           ;
  if sqlca.sqlcode <> 0 then
	//  Rollback Using sqlca;
	  return
  end if
  if ld_unof > 0 then
	  if ld_unof >= ld_unbl then 
	    ld_unof = ld_unof - ld_unbl
	    ld_unbl = 0
	  else 
	    ld_unbl = ld_unbl - ld_unof
	    ld_unof = 0 
	  end if
  end if	  
  UPDATE "PBPUR"."OPM102" 
    SET "PQTY1" = PQTY1 - UNBL,   
	      "PCNL" = PCNL + UNBL,  
	      "UNBL" = 0,   
			"UNOF" = :ld_unof,   
         "PAMT" = (PQTY1 - UNBL) *  XCOST,   
         "STCD" = 'C',   
         "UPDTID" = :g_s_empno,
			"UPDTDT" = :g_s_datetime,
			"IPADDR" = :g_s_macaddr,
			"MACADDR" = :g_s_ipaddr
   WHERE ( "PBPUR"."OPM102"."COMLTD" = '01' ) AND  
         ( "PBPUR"."OPM102"."PURNO" = :as_purno ) AND  
         ( "PBPUR"."OPM102"."SRNO" = :as_srno ) AND  
         ( "PBPUR"."OPM102"."ITNO" = :as_itno )   
           ;
  
  SELECT sum("PBPUR"."OPM102"."PAMT")  
  INTO :ld_pamt  
  FROM "PBPUR"."OPM102"  
  WHERE ( "PBPUR"."OPM102"."COMLTD" = '01' ) AND  
        ( "PBPUR"."OPM102"."PURNO" = :as_purno ) AND  
        ( "PBPUR"."OPM102"."SRNO" = :as_srno )   ;

   UPDATE "PBPUR"."OPM101"  
   SET   "PAMT" = :ld_pamt,
			"UPDTID" = :g_s_empno,
			"UPDTDT" = :g_s_datetime,
			"IPADDR" = :g_s_macaddr,
			"MACADDR" = :g_s_ipaddr
   WHERE ( "PBPUR"."OPM101"."COMLTD" = '01' ) AND  
         ( "PBPUR"."OPM101"."PURNO" = :as_purno ) AND  
         ( "PBPUR"."OPM101"."SRNO" = :as_srno )   ;

if ld_unbl <= 0 then
	return
end if

DECLARE cur_1 CURSOR FOR  
  SELECT "PBPUR"."OPM104"."SRNO1", 
         "PBPUR"."OPM104"."OFQTY" 
	FROM "PBPUR"."OPM104"  
   WHERE ( "PBPUR"."OPM104"."COMLTD" = '01' ) AND  
         ( "PBPUR"."OPM104"."PURNO" = :as_purno ) AND  
         ( "PBPUR"."OPM104"."SRNO" = :as_srno )   and
			( "PBPUR"."OPM104"."ITNO" = :as_itno ) 
	order by 1 desc ;  
OPEN CUR_1;
 DO WHILE TRUE
	FETCH CUR_1 INTO  :ls_srno1, :ld_ofqty;
	if sqlca.sqlcode <> 0 or ld_unbl = 0 then
		exit
	end if
   
	UPDATE "PBPUR"."OPM104"  
     SET "OCNQT" = "OCNQT" + :ld_unbl,
		   "OFQTY" = "OFQTY" - :ld_unbl,  
			"OFAMT" = ("OFQTY" - :ld_unbl) * "XCOST",  
		   "UPDTID" = :g_s_empno,
			"UPDTDT" = :g_s_datetime,
			"IPADDR" = :g_s_macaddr,
			"MACADDR" = :g_s_ipaddr
       WHERE ( "PBPUR"."OPM104"."COMLTD" = '01' ) AND  
         ( "PBPUR"."OPM104"."PURNO" = :as_purno ) AND  
         ( "PBPUR"."OPM104"."SRNO" = :as_srno ) and
			( "PBPUR"."OPM104"."SRNO1" = :ls_srno1 ) and
			( "PBPUR"."OPM104"."ITNO" = :as_itno ) ;
	ld_unbl = ld_unbl - ld_ofqty		
 
 LOOP
CLOSE CUR_1;
return

end subroutine

