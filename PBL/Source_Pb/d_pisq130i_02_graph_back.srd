$PBExportHeader$d_pisq130i_02_graph_back.srd
$PBExportComments$수입검사 불량율(월별 불량율 그래프-LOT별)
release 7;
datawindow(units=0 timer_interval=0 color=0 processing=3 HTMLDW=no print.documentname="" print.orientation = 1 print.margin.left = 110 print.margin.right = 110 print.margin.top = 96 print.margin.bottom = 96 print.paper.source = 0 print.paper.size = 0 print.prompt=no print.buttons=no print.preview.buttons=no )
summary(height=0 color="536870912" )
footer(height=0 color="536870912" )
detail(height=0 color="536870912" )
table(column=(type=char(1) updatewhereclause=yes name=as_areacode dbname="AS_AREACODE" )
 column=(type=char(7) updatewhereclause=yes name=as_month dbname="AS_MONTH" )
 column=(type=number updatewhereclause=yes name=as_rate dbname="AS_RATE" )
 retrieve="SELECT AS_AREACODE, 
       AS_MONTH,
       AS_RATE FROM (

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -11, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B11) as float) / cast(sum(M_I11) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -11, :as_qcdate_fm), 102) <= A.QCDATE AND 
			   A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -11, :as_qcdate_to), 102) THEN count(*) END AS M_I11,
				 0 AS M_B11
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -11, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I11,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -11, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -11, :as_qcdate_to), 102) THEN count(*) END AS M_B11
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -11, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP11
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -10, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B10) as float) / cast(sum(M_I10) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -10, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -10, :as_qcdate_to), 102) THEN count(*) END AS M_I10,
				 0 AS M_B10
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -10, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I10,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -10, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -10, :as_qcdate_to), 102) THEN count(*) END AS M_B10
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -10, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP10
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -09, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B09) as float) / cast(sum(M_I09) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -09, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -09, :as_qcdate_to), 102) THEN count(*) END AS M_I09,
				 0 AS M_B09
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -09, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I09,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -09, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -09, :as_qcdate_to), 102) THEN count(*) END AS M_B09
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -09, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP09
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -08, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B08) as float) / cast(sum(M_I08) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -08, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -08, :as_qcdate_to), 102) THEN count(*) END AS M_I08,
				 0 AS M_B08
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -08, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I08,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -08, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -08, :as_qcdate_to), 102) THEN count(*) END AS M_B08
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -08, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP08
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -07, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B07) as float) / cast(sum(M_I07) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -07, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -07, :as_qcdate_to), 102) THEN count(*) END AS M_I07,
				 0 AS M_B07
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -07, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I07,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -07, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -07, :as_qcdate_to), 102) THEN count(*) END AS M_B07
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -07, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP07
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -06, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B06) as float) / cast(sum(M_I06) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -06, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -06, :as_qcdate_to), 102) THEN count(*) END AS M_I06,
				 0 AS M_B06
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -06, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I06,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -06, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -06, :as_qcdate_to), 102) THEN count(*) END AS M_B06
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -06, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP06
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -05, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B05) as float) / cast(sum(M_I05) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -05, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -05, :as_qcdate_to), 102) THEN count(*) END AS M_I05,
				 0 AS M_B05
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -05, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I05,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -05, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -05, :as_qcdate_to), 102) THEN count(*) END AS M_B05
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -05, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP05
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -04, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B04) as float) / cast(sum(M_I04) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -04, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -04, :as_qcdate_to), 102) THEN count(*) END AS M_I04,
				 0 AS M_B04
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -04, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I04,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -04, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -04, :as_qcdate_to), 102) THEN count(*) END AS M_B04
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -04, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP04
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -03, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B03) as float) / cast(sum(M_I03) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -03, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -03, :as_qcdate_to), 102) THEN count(*) END AS M_I03,
				 0 AS M_B03
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -03, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I03,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -03, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -03, :as_qcdate_to), 102) THEN count(*) END AS M_B03
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -03, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP03
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -02, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B02) as float) / cast(sum(M_I02) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -02, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -02, :as_qcdate_to), 102) THEN count(*) END AS M_I02,
				 0 AS M_B02
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -02, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I02,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -02, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -02, :as_qcdate_to), 102) THEN count(*) END AS M_B02
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -02, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP02
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -01, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B01) as float) / cast(sum(M_I01) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -01, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -01, :as_qcdate_to), 102) THEN count(*) END AS M_I01,
				 0 AS M_B01
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -01, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I01,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -01, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -01, :as_qcdate_to), 102) THEN count(*) END AS M_B01
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -01, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP01
GROUP BY AS_AREACODE

UNION ALL

SELECT AS_AREACODE, 
       CONVERT(CHAR(7), DATEADD(month, -00, :as_qcdate_fm), 102) AS AS_MONTH,
       (cast(SUM(M_B00) as float) / cast(sum(M_I00) as float)) * 100 AS AS_RATE FROM (
		SELECT A.AREACODE AS AS_AREACODE,
				 CASE WHEN CONVERT(CHAR(10), DATEADD(month, -00, :as_qcdate_fm), 102) <= A.QCDATE AND 
		       A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -00, :as_qcdate_to), 102) THEN count(*) END AS M_I00,
				 0 AS M_B00
		  FROM TQQCRESULT  A
       WHERE A.AREACODE	    =	   :as_areacode
         AND A.DIVISIONCODE =	   :as_divisioncode
         AND A.SUPPLIERCODE LIKE :as_suppliercode
         AND A.ITEMCODE     LIKE :as_itemcode
         AND A.QCDATE		 >=   CONVERT(CHAR(10), DATEADD(month, -00, :as_qcdate_fm), 102)
         AND A.QCDATE		 <=   :as_qcdate_to
		 GROUP BY A.AREACODE, A.QCDATE

UNION ALL
	
		SELECT A.AREACODE AS AS_AREACODE,
				 0 AS M_I00,
             CASE WHEN CONVERT(CHAR(10), DATEADD(month, -00, :as_qcdate_fm), 102) <= A.QCDATE AND 
           A.QCDATE <= CONVERT(CHAR(10), DATEADD(month, -00, :as_qcdate_to), 102) THEN count(*) END AS M_B00
		  FROM TQQCRESULT  A
  	     WHERE A.AREACODE	  =	   :as_areacode
           AND A.DIVISIONCODE =	   :as_divisioncode
           AND A.SUPPLIERCODE LIKE :as_suppliercode
           AND A.ITEMCODE     LIKE :as_itemcode
           AND A.QCDATE		  >=   CONVERT(CHAR(10), DATEADD(month, -00, :as_qcdate_fm), 102)
           AND A.QCDATE		  <=   :as_qcdate_to
           AND A.JUDGEFLAG    IN   ('2', '3')
       GROUP BY A.AREACODE, A.QCDATE
) TMP00
GROUP BY AS_AREACODE
) TEMP" arguments=(("as_areacode", string),("as_divisioncode", string),("as_suppliercode", string),("as_itemcode", string),("as_qcdate_fm", string),("as_qcdate_to", string)) )
graph(band=background height="2372" width="3159" graphtype="12" perspective="2" rotation="-20" color="0" backcolor="12632256" shadecolor="8355711" range= 0 border="3" overlappercent="0" spacing="100" elevation="20" depth="100"x="0" y="0" height="2372" width="3159"  name=gr_1  sizetodisplay=1  category="mid(as_month,3,5)"  values="as_rate"  title="월별 불량율"  title.dispattr.backcolor="553648127"  title.dispattr.alignment="2"  title.dispattr.autosize="0"  title.dispattr.font.charset="0"  title.dispattr.font.escapement="0"  title.dispattr.font.face="굴림체"  title.dispattr.font.family="2"  title.dispattr.font.height="-19"  title.dispattr.font.italic="0"  title.dispattr.font.orientation="0"  title.dispattr.font.pitch="2"  title.dispattr.font.strikethrough="0"  title.dispattr.font.underline="1"  title.dispattr.font.weight="700"  title.dispattr.format="[general]"  title.dispattr.textcolor="0"  title.dispattr.displayexpression="title"  legend="4"  legend.dispattr.backcolor="553648127"  legend.dispattr.alignment="0"  legend.dispattr.autosize="1"  legend.dispattr.font.charset="0"  legend.dispattr.font.escapement="0"  legend.dispattr.font.face="Arial"  legend.dispattr.font.family="2"  legend.dispattr.font.height="0"  legend.dispattr.font.italic="0"  legend.dispattr.font.orientation="0"  legend.dispattr.font.pitch="2"  legend.dispattr.font.strikethrough="0"  legend.dispattr.font.underline="0"  legend.dispattr.font.weight="400"  legend.dispattr.format="[general]"  legend.dispattr.textcolor="0"  legend.dispattr.displayexpression="series" 
	series.autoscale="1" 
	series.displayeverynlabels="0"  series.droplines="0"  series.frame="1"  series.label="Series"  series.majordivisions="0"  series.majorgridline="0"  series.majortic="3"  series.maximumvalue="0"  series.minimumvalue="0"  series.minordivisions="0"  series.minorgridline="0"  series.minortic="1"  series.originline="1"  series.primaryline="1"  series.roundto="0"  series.roundtounit="0"  series.scaletype="1"  series.scalevalue="1"  series.secondaryline="0"  series.shadebackedge="0"  series.dispattr.backcolor="553648127"  series.dispattr.alignment="0"  series.dispattr.autosize="1"  series.dispattr.font.charset="0"  series.dispattr.font.escapement="0"  series.dispattr.font.face="Arial"  series.dispattr.font.family="2"  series.dispattr.font.height="0"  series.dispattr.font.italic="0"  series.dispattr.font.orientation="0"  series.dispattr.font.pitch="2"  series.dispattr.font.strikethrough="0"  series.dispattr.font.underline="0"  series.dispattr.font.weight="400"  series.dispattr.format="[general]"  series.dispattr.textcolor="0"  series.dispattr.displayexpression="series"  series.labeldispattr.backcolor="553648127"  series.labeldispattr.alignment="2"  series.labeldispattr.autosize="0"  series.labeldispattr.font.charset="0"  series.labeldispattr.font.escapement="0"  series.labeldispattr.font.face="Arial"  series.labeldispattr.font.family="2"  series.labeldispattr.font.height="-8"  series.labeldispattr.font.italic="0"  series.labeldispattr.font.orientation="0"  series.labeldispattr.font.pitch="2"  series.labeldispattr.font.strikethrough="0"  series.labeldispattr.font.underline="0"  series.labeldispattr.font.weight="700"  series.labeldispattr.format="[general]"  series.labeldispattr.textcolor="0"  series.labeldispattr.displayexpression="seriesaxislabel"  series.sort="1" 
	category.autoscale="1" 
	category.displayeverynlabels="0"  category.droplines="0"  category.frame="1"  category.label="일 자"  category.majordivisions="0"  category.majorgridline="0"  category.majortic="3"  category.maximumvalue="0"  category.minimumvalue="0"  category.minordivisions="0"  category.minorgridline="0"  category.minortic="1"  category.originline="0"  category.primaryline="1"  category.roundto="0"  category.roundtounit="0"  category.scaletype="1"  category.scalevalue="1"  category.secondaryline="0"  category.shadebackedge="1"  category.dispattr.backcolor="553648127"  category.dispattr.alignment="2"  category.dispattr.autosize="0"  category.dispattr.font.charset="0"  category.dispattr.font.escapement="0"  category.dispattr.font.face="Arial"  category.dispattr.font.family="2"  category.dispattr.font.height="-9"  category.dispattr.font.italic="0"  category.dispattr.font.orientation="0"  category.dispattr.font.pitch="2"  category.dispattr.font.strikethrough="0"  category.dispattr.font.underline="0"  category.dispattr.font.weight="400"  category.dispattr.format="[general]"  category.dispattr.textcolor="0"  category.dispattr.displayexpression="category"  category.labeldispattr.backcolor="553648127"  category.labeldispattr.alignment="2"  category.labeldispattr.autosize="0"  category.labeldispattr.font.charset="0"  category.labeldispattr.font.escapement="0"  category.labeldispattr.font.face="Arial"  category.labeldispattr.font.family="2"  category.labeldispattr.font.height="-15"  category.labeldispattr.font.italic="0"  category.labeldispattr.font.orientation="0"  category.labeldispattr.font.pitch="2"  category.labeldispattr.font.strikethrough="0"  category.labeldispattr.font.underline="0"  category.labeldispattr.font.weight="700"  category.labeldispattr.format="[general]"  category.labeldispattr.textcolor="0"  category.labeldispattr.displayexpression="categoryaxislabel"  category.sort="1" 
	values.autoscale="1" 
	values.displayeverynlabels="0"  values.droplines="0"  values.frame="1"  values.label="불량율(%)"  values.majordivisions="0"  values.majorgridline="0"  values.majortic="3"  values.maximumvalue="250"  values.minimumvalue="0"  values.minordivisions="0"  values.minorgridline="0"  values.minortic="1"  values.originline="1"  values.primaryline="1"  values.roundto="0"  values.roundtounit="0"  values.scaletype="1"  values.scalevalue="1"  values.secondaryline="0"  values.shadebackedge="0"  values.dispattr.backcolor="553648127"  values.dispattr.alignment="1"  values.dispattr.autosize="0"  values.dispattr.font.charset="0"  values.dispattr.font.escapement="0"  values.dispattr.font.face="Arial"  values.dispattr.font.family="2"  values.dispattr.font.height="-9"  values.dispattr.font.italic="0"  values.dispattr.font.orientation="0"  values.dispattr.font.pitch="2"  values.dispattr.font.strikethrough="0"  values.dispattr.font.underline="0"  values.dispattr.font.weight="400"  values.dispattr.format="[General]"  values.dispattr.textcolor="0"  values.dispattr.displayexpression="value"  values.labeldispattr.backcolor="553648127"  values.labeldispattr.alignment="2"  values.labeldispattr.autosize="0"  values.labeldispattr.font.charset="0"  values.labeldispattr.font.escapement="900"  values.labeldispattr.font.face="Arial"  values.labeldispattr.font.family="2"  values.labeldispattr.font.height="-15"  values.labeldispattr.font.italic="0"  values.labeldispattr.font.orientation="900"  values.labeldispattr.font.pitch="2"  values.labeldispattr.font.strikethrough="0"  values.labeldispattr.font.underline="0"  values.labeldispattr.font.weight="700"  values.labeldispattr.format="[general]"  values.labeldispattr.textcolor="0"  values.labeldispattr.displayexpression="valuesaxislabel" )
htmltable(border="1" )
htmlgen(clientevents="1" clientvalidation="1" clientcomputedfields="1" clientformatting="0" clientscriptable="0" generatejavascript="1" )
  