$PBExportHeader$f_bom_check_bpm.srf
$PBExportComments$MBOM에서 상위품번을 체크하는 함수
global type f_bom_check_bpm from function_object
end type

forward prototypes
global function string f_bom_check_bpm (string a_year, string a_revno, string a_plant, string a_div, string a_itno, string a_sitno, string a_oedtm, string a_oedte)
end prototypes

global function string f_bom_check_bpm (string a_year, string a_revno, string a_plant, string a_div, string a_itno, string a_sitno, string a_oedtm, string a_oedte);string ls_chkdate
integer 	li_chkop, li_chkof

if f_spacechk(a_oedtm) = -1 then
	a_oedtm = g_s_date
end if

ls_chkdate = f_relativedate(g_s_date,1)
// 상위품목수 체크
SELECT count(*) into :li_chkop FROM pbbpm.bpm504
WHERE	pcitn = :a_itno   and xyear = :a_year and revno = :a_revno   and
		plant = :a_plant 	and pdvsn = :a_div 		and
		   ((	trim(pedte) =  ''  	and pedtm <= :ls_chkdate ) 	or  
			(  trim(pedte) <> ''  	and pedtm <= :ls_chkdate  	and pedte >= :ls_chkdate ))
using sqlca;

SELECT count(*) into :li_chkof FROM pbbpm.bpm504
WHERE	pcitn = :a_sitno   and xyear = :a_year and revno = :a_revno   and
		plant = :a_plant 	and pdvsn = :a_div 		and
		   ((	trim(pedte) =  ''  	and pedtm <= :ls_chkdate ) 	or  
			(  trim(pedte) <> ''  	and pedtm <= :ls_chkdate  	and pedte >= :ls_chkdate ))
using sqlca;

if li_chkop <> li_chkof then
	return 	'i'
end if

// 적용완료일 체크
select count(*) into :li_chkop
from ( SELECT ppitn, pedte FROM pbbpm.bpm504
WHERE	pcitn = :a_itno   and xyear = :a_year and revno = :a_revno   and
		plant = :a_plant 	and pdvsn = :a_div 		and
		   ((	trim(pedte) =  ''  	and pedtm <= :ls_chkdate ) 	or  
			(  trim(pedte) <> ''  	and pedtm <= :ls_chkdate  	and pedte >= :ls_chkdate )) ) tmp_op,
( SELECT ppitn, pedte FROM pbbpm.bpm504
WHERE	pcitn = :a_itno   and xyear = :a_year and revno = :a_revno   and
		plant = :a_plant 	and pdvsn = :a_div 		and
		   ((	trim(pedte) =  ''  	and pedtm <= :ls_chkdate ) 	or  
			(  trim(pedte) <> ''  	and pedtm <= :ls_chkdate  	and pedte >= :ls_chkdate )) ) tmp_of
where tmp_op.ppitn = tmp_of.ppitn and tmp_op.pedte <> tmp_of.pedte
using sqlca;

if li_chkop <> 0 then
	return "d" 
end if
return 	""
 
end function

