$PBExportHeader$f_m2_selectrow.srf
$PBExportComments$<<< 조회 및 수정용 >>> Multi-Select
global type f_m2_selectrow from function_object
end type

forward prototypes
global subroutine f_m2_selectrow (datawindow adw_dw, long al_row, long al_prerow)
end prototypes

global subroutine f_m2_selectrow (datawindow adw_dw, long al_row, long al_prerow);///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// * 다중 Row 선택... *  <<< 조회 및 수정용 >>>
//
// 사용상 주의점 : 1. 이함수를 반드시 적은량의 Data를 조회해서 수정하는 경우에 사용하십시요. ( 1000건(Row) 이하 )
//                 ---> 이경고를 무시할 경우~  마우스 클릭시나 키보드 방향키 사용시 화면일시정지현상을 목격하실겁니다.
//                 2. 단순 조회시에는 역쉬 자체함수인 SelectRow함수가 최고임다~
//
// 장점 : 보기가 좋다. 앗싸! 좋고~
// 단점 : 1. 파워빌더가 지원안하는걸 자체함수로 해결하다보니 DataWindow 설정이 조금 번거롭습니다. --;
//        2. 지원(SelectRow)함수보다 속도가 떨어집니다.(당근) ^^;
//
// adw_dw:    DataWindow
// al_row:    Clicked Row
// al_prerow: Previously Clicked Row      2002.11.26 박병주
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


If al_Row <= 0 Then Return

adw_dw.SetReDraw( False )

Long ll_i

If KeyDown(KeyShift!) Then   // Shift키를 누른상태로 클릭시.
	
	If al_preRow > 0 Then     // 먼저 선택한 Row가 있는경우.
	
		For ll_i = 1 To adw_dw.RowCount( )
			If adw_dw.GetItemStatus( ll_i, 0, Primary! ) = NewModified! Or &
				adw_dw.GetItemStatus( ll_i, 0, Primary! ) = DataModified! Then
				adw_dw.Object.Row_Up[ll_i] = 0
			Else
				adw_dw.Object.Row_Up[ll_i] = 0
				adw_dw.SetItemStatus( ll_i, 0, Primary!, NotModified! )
			End If
		Next
		
		For ll_i = Min(al_Row, al_preRow) To Max(al_Row, al_preRow)               
			If adw_dw.GetItemStatus( ll_i, 0, Primary! ) = NewModified! Or &
				adw_dw.GetItemStatus( ll_i, 0, Primary! ) = DataModified! Then      
				adw_dw.Object.Row_Up[ll_i] = 1                    
			Else
				adw_dw.Object.Row_Up[ll_i] = 1
				adw_dw.SetItemStatus( ll_i, 0, Primary!, NotModified! )
			End If
		Next
	Else        // 먼저 선택한 Row가 없는경우.
		If adw_dw.GetItemStatus( al_Row, 0, Primary! ) = NewModified! Or &
			adw_dw.GetItemStatus( al_Row, 0, Primary! ) = DataModified! Then
			adw_dw.Object.Row_Up[al_Row] = 1
		Else
			adw_dw.Object.Row_Up[al_Row] = 1
			adw_dw.SetItemStatus( al_Row, 0, Primary!, NotModified! )
		End If
	End If
	
ElseIf KeyDown(KeyControl!) Then        // Control키를 누른상태로 클릭시.
	
	If adw_dw.Object.Row_Up[al_Row] = 1 Then
		If adw_dw.GetItemStatus( al_Row, 0, Primary! ) = NewModified! Or &
			adw_dw.GetItemStatus( al_Row, 0, Primary! ) = DataModified! Then
			adw_dw.Object.Row_Up[al_Row] = 0
		Else
			adw_dw.Object.Row_Up[al_Row] = 0
			adw_dw.SetItemStatus( al_Row, 0, Primary!, NotModified! )
		End If	
	Else
		If adw_dw.GetItemStatus( al_Row, 0, Primary! ) = NewModified! Or &
			adw_dw.GetItemStatus( al_Row, 0, Primary! ) = DataModified! Then
			adw_dw.Object.Row_Up[al_Row] = 1
		Else
			adw_dw.Object.Row_Up[al_Row] = 1
			adw_dw.SetItemStatus( al_Row, 0, Primary!, NotModified! )
		End If		
	End If
	
Else	                                 // 기냥 클릭시.
	
	For ll_i = 1 To adw_dw.RowCount( )
			If adw_dw.GetItemStatus( ll_i, 0, Primary! ) = NewModified! Or &
				adw_dw.GetItemStatus( ll_i, 0, Primary! ) = DataModified! Then
				adw_dw.Object.Row_Up[ll_i] = 0
			Else
				adw_dw.Object.Row_Up[ll_i] = 0
				adw_dw.SetItemStatus( ll_i, 0, Primary!, NotModified! )
			End If
		Next
	
	If adw_dw.GetItemStatus( al_Row, 0, Primary! ) = NewModified! Or &
		adw_dw.GetItemStatus( al_Row, 0, Primary! ) = DataModified! Then
		adw_dw.Object.Row_Up[al_Row] = 1
	Else
		adw_dw.Object.Row_Up[al_Row] = 1
		adw_dw.SetItemStatus( al_Row, 0, Primary!, NotModified! )
	End If
	
End If

adw_dw.SetReDraw( True )
end subroutine

