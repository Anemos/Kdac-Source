$PBExportHeader$f_wip_inout_seterr002.srf
$PBExportComments$에러항목 등록(이월후) Sub Function
global type f_wip_inout_seterr002 from function_object
end type

forward prototypes
global subroutine f_wip_inout_seterr002 (string arg_date, string arg_cmcd, string arg_plant, string arg_dvsn, string arg_orct, string arg_itno, datastore ds_src, datawindow dw_src, long arg_findrow, decimal arg_qty[], decimal arg_amt[], string arg_iocd)
end prototypes

global subroutine f_wip_inout_seterr002 (string arg_date, string arg_cmcd, string arg_plant, string arg_dvsn, string arg_orct, string arg_itno, datastore ds_src, datawindow dw_src, long arg_findrow, decimal arg_qty[], decimal arg_amt[], string arg_iocd);long ll_currow, ll_cntx, ll_cnty, ll_chkerr
string ls_year, ls_month, ls_srce, ls_itcl, ls_pdcd, ls_unit, ls_type, ls_desc, ls_spec, ls_rvno, ls_todt
string ls_colcount, ls_nextdt, ls_nextyear, ls_nextmonth
dec{4} lc_wqty[1 to 13], lc_convqty
dec{0} lc_wamt[1 to 13], lc_wbusat9
dec{5} lc_waavrg

ls_colcount = dw_src.Object.DataWindow.Column.Count
ls_year = mid(arg_date,1,4)
ls_month = mid(arg_date,5,2)
ls_nextdt = uf_wip_addmonth(arg_date,1)
ls_nextyear = mid(ls_nextdt,1,4)
ls_nextmonth = mid(ls_nextdt,5,2)
//기초(1),투입(2),정상(3),반출(4),유상(5),출하(6),타계정(7),타부서(8),불량(9),조정(10),실사(11),현재공(12)
lc_wqty[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
//기초(1),투입1(2),투입2(3),정상(4),반출(5),유상(6),출하(7),타계정(8),타부서(9),불량(10),조정(11),실사(12),현재공(13)
lc_wamt[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
ll_chkerr = 0
lc_waavrg = 0

if arg_findrow < 1 then
	if arg_qty[2] = 0 and arg_qty[3] = 0 and arg_qty[4] = 0 and arg_qty[5] = 0 and &
		arg_qty[6] = 0 and arg_qty[7] = 0 and arg_qty[8] = 0 and arg_qty[9] = 0 and &
		arg_qty[10] = 0 and arg_amt[2] = 0 and arg_amt[3] = 0 then 
		return
	end if
	
	//품목Master에서 기본정보 가져오기
	SELECT "PBINV"."INV002"."ITNM",   
         "PBINV"."INV002"."SPEC",
         "PBINV"."INV002"."RVNO",
			"PBINV"."INV101"."CONVQTY"
    INTO :ls_desc,   
         :ls_spec,
         :ls_rvno,
			:lc_convqty
    FROM "PBINV"."INV002" INNER JOIN "PBINV"."INV101" 
	 	ON "PBINV"."INV002"."COMLTD" = "PBINV"."INV101"."COMLTD" AND
		 	"PBINV"."INV002"."ITNO" = "PBINV"."INV101"."ITNO"
  	 WHERE ( "PBINV"."INV101"."COMLTD" = :arg_cmcd ) AND  
          ( "PBINV"."INV101"."XPLANT" = :arg_plant ) AND  
          ( "PBINV"."INV101"."DIV" = :arg_dvsn ) AND 
          ( "PBINV"."INV101"."ITNO" = :arg_itno )   using sqlca;
	
	if sqlca.sqlcode <> 0 then
		MessageBox("품목미등록 확인요망!", "품번 : " + arg_itno)
	end if
	
	//품목재고 테이블에서 기존정보가져오기
	SELECT "PBINV"."INV402"."CLS",   
         "PBINV"."INV402"."SRCE",   
         "PBINV"."INV402"."PDCD",
			"PBINV"."INV402"."XUNIT",
			"PBINV"."INV402"."XTYPE",
			"PBINV"."INV402"."COSTAV"
    INTO :ls_itcl,   
         :ls_srce,   
         :ls_pdcd,
			:ls_unit,
			:ls_type,
			:lc_waavrg
    FROM "PBINV"."INV402"  
    WHERE ( "PBINV"."INV402"."COMLTD" = :arg_cmcd ) AND  
          ( "PBINV"."INV402"."XPLANT" = :arg_plant ) AND  
          ( "PBINV"."INV402"."DIV" = :arg_dvsn ) AND 
			 ( "PBINV"."INV402"."XYEAR" = :arg_date ) AND
          ( "PBINV"."INV402"."ITNO" = :arg_itno )   using sqlca;
	if sqlca.sqlcode <> 0 or ls_itcl = '20' or ls_itcl = '30' then
		return
	end if
	
	if (ls_itcl = '10' and ls_srce = '03') or (ls_itcl <> '10' and ls_srce = '04') then
		arg_amt[13] = arg_amt[13] - arg_amt[2]
		arg_amt[2] = 0
	end if
	
	if arg_iocd = '3' then
		// 유상업체재공 단가계산 및 금액수불체크
		ls_todt = f_relativedate( uf_wip_addmonth(arg_date,1) + '01', -1)
		SELECT PBINV.F_XCOST1(:arg_plant, :arg_dvsn, :arg_itno, :arg_orct, :ls_todt) INTO :lc_waavrg
		FROM PBCOMMON.COMM000
		using sqlca;
	
		if sqlca.sqlcode <> 0 then
			lc_waavrg = 0
		else
			lc_waavrg = lc_waavrg  / lc_convqty
		end if
	end if
	
	ls_pdcd = mid(ls_pdcd,1,2)
	ll_currow = dw_src.insertrow(0)
	lc_wbusat9 = arg_amt[1] + arg_amt[2] + arg_amt[3] - (arg_amt[4] + arg_amt[5] + arg_amt[6] + arg_amt[7] &
						+ arg_amt[8] + arg_amt[9] + arg_amt[10] + arg_amt[11] + arg_amt[12] + arg_amt[13])
	dw_src.setitem(ll_currow,"wip002_wbyear",ls_year)
	dw_src.setitem(ll_currow,"wip002_wbmonth",ls_month)
	dw_src.setitem(ll_currow,"wip002_wbcmcd",arg_cmcd)
	dw_src.setitem(ll_currow,"wip002_wbplant",arg_plant)
	dw_src.setitem(ll_currow,"wip002_wbdvsn",arg_dvsn)
	dw_src.setitem(ll_currow,"wip002_wborct",arg_orct)
	dw_src.setitem(ll_currow,"wip002_wbitno",arg_itno )
	dw_src.setitem(ll_currow,"wip002_wbrev",ls_rvno)
	dw_src.setitem(ll_currow,"wip002_wbiocd",arg_iocd)
	dw_src.setitem(ll_currow,"wip002_wbitcl",ls_itcl)
	dw_src.setitem(ll_currow,"wip002_wbsrce",ls_srce)
	dw_src.setitem(ll_currow,"wip002_wbpdcd",ls_pdcd)
	dw_src.setitem(ll_currow,"wip002_wbunit",ls_unit)
	dw_src.setitem(ll_currow,"wip002_wbtype",ls_type)
	dw_src.setitem(ll_currow,"wip002_wbdesc",ls_desc)
	dw_src.setitem(ll_currow,"wip002_wbspec",ls_spec)
	dw_src.setitem(ll_currow,"wip002_wbscrp",0)
	dw_src.setitem(ll_currow,"wip002_wbretn",0)
	dw_src.setitem(ll_currow,"wip002_wbavrg1",lc_waavrg)
	dw_src.setitem(ll_currow,"wip002_wbavrg2",0)
	dw_src.setitem(ll_currow,"wip002_wbbgqt",0)
	dw_src.setitem(ll_currow,"wip002_wbbgat1",0)
	dw_src.setitem(ll_currow,"wip002_wbbgat2",0)
	dw_src.setitem(ll_currow,"wip002_wbinqt",arg_qty[2])
	dw_src.setitem(ll_currow,"wip002_wbinat1",arg_amt[2])     	//정상투입금액
	dw_src.setitem(ll_currow,"wip002_wbinat2",arg_amt[3])			//금액만 투입된 경우
	dw_src.setitem(ll_currow,"wip002_wbinat3",0)							//소재자재 투입
	dw_src.setitem(ll_currow,"wip002_wbinat4",0)							//타공장제작이체품 금액
	dw_src.setitem(ll_currow,"wip002_wbusqt1",arg_qty[3])
	dw_src.setitem(ll_currow,"wip002_wbusat1",arg_amt[4])
	dw_src.setitem(ll_currow,"wip002_wbusqt2",arg_qty[4])
	dw_src.setitem(ll_currow,"wip002_wbusat2",arg_amt[5])
	dw_src.setitem(ll_currow,"wip002_wbusqt3",arg_qty[5])
	dw_src.setitem(ll_currow,"wip002_wbusat3",arg_amt[6])
	dw_src.setitem(ll_currow,"wip002_wbusqt4",arg_qty[6])
	dw_src.setitem(ll_currow,"wip002_wbusat4",arg_amt[7])
	dw_src.setitem(ll_currow,"wip002_wbusqt5",arg_qty[7])
	dw_src.setitem(ll_currow,"wip002_wbusat5",arg_amt[8])
	dw_src.setitem(ll_currow,"wip002_wbusqt6",arg_qty[8])
	dw_src.setitem(ll_currow,"wip002_wbusat6",arg_amt[9])
	dw_src.setitem(ll_currow,"wip002_wbusqt7",arg_qty[9])
	dw_src.setitem(ll_currow,"wip002_wbusat7",arg_amt[10])
	dw_src.setitem(ll_currow,"wip002_wbusqt8",arg_qty[10])
	dw_src.setitem(ll_currow,"wip002_wbusat8",arg_amt[11])
	dw_src.setitem(ll_currow,"wip002_wbusat9",lc_wbusat9)
	dw_src.setitem(ll_currow,"wip002_wbusqta",arg_qty[11])
	dw_src.setitem(ll_currow,"wip002_wbusata",arg_amt[12])
	dw_src.setitem(ll_currow,"wip002_com_ohqt",arg_qty[12])
	dw_src.setitem(ll_currow,"wip002_wbplan",' ')
	dw_src.setitem(ll_currow,"wip002_wbipaddr",' ')
	dw_src.setitem(ll_currow,"wip002_wbmacaddr",' ')
	dw_src.setitem(ll_currow,"wip002_wbinptdt",' ')
	dw_src.setitem(ll_currow,"wip002_wbupdtdt",' ')
	
	insert into pbwip.wip002(wbcmcd,wbplant,wbdvsn,wborct,wbitno,
       wbyear,wbmonth,wbrev,wbiocd,wbitcl,wbsrce,wbpdcd,
       wbunit,wbtype,wbdesc,wbspec,wbscrp,wbretn,wbavrg1,
       wbavrg2,wbbgqt,wbbgat1,wbbgat2,wbinqt,wbinat1,
       wbinat2,wbinat3,wbinat4,wbusqt1,wbusat1,wbusqt2,
       wbusat2,wbusqt3,wbusat3,wbusqt4,wbusat4,wbusqt5,
       wbusat5,wbusqt6,wbusat6,wbusqt7,wbusat7,wbusqt8,
       wbusat8,wbusat9,wbusqta,wbusata,wbplan,wbipaddr,
       wbmacaddr,wbinptdt,wbupdtdt)
	values(:arg_cmcd,:arg_plant,:arg_dvsn,:arg_orct,:arg_itno,
		:ls_nextyear,:ls_nextmonth,:ls_rvno,:arg_iocd,:ls_itcl,:ls_srce,:ls_pdcd,
		:ls_unit,:ls_type,:ls_desc,:ls_spec,0,0,:lc_waavrg,
		0,:arg_qty[12],:arg_amt[13],0,0,0,
		0,0,0,0,0,0,
		0,0,0,0,0,0,
		0,0,0,0,0,0,
		0,0,0,0,' ',' ',' ',:g_s_date,' ')
	using sqlca;
else
	lc_wqty[1]  = ds_src.getitemdecimal(arg_findrow,"wip002_wbbgqt")
	lc_wqty[2]  = ds_src.getitemdecimal(arg_findrow,"wip002_wbinqt")
	lc_wqty[3]  = ds_src.getitemdecimal(arg_findrow,"wip002_wbusqt1")
	lc_wqty[4]  = ds_src.getitemdecimal(arg_findrow,"wip002_wbusqt2")
	lc_wqty[5]  = ds_src.getitemdecimal(arg_findrow,"wip002_wbusqt3")
	lc_wqty[6]  = ds_src.getitemdecimal(arg_findrow,"wip002_wbusqt4")
	lc_wqty[7]  = ds_src.getitemdecimal(arg_findrow,"wip002_wbusqt5")
	lc_wqty[8]  = ds_src.getitemdecimal(arg_findrow,"wip002_wbusqt6")
	lc_wqty[9]  = ds_src.getitemdecimal(arg_findrow,"wip002_wbusqt7")
	lc_wqty[10] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusqt8")
	lc_wqty[11] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusqta")
	arg_qty[11] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusqta") 
	lc_wqty[12] = lc_wqty[1] + lc_wqty[2] - (lc_wqty[3] + lc_wqty[4] + lc_wqty[5] + lc_wqty[6] + lc_wqty[7] &
						+ lc_wqty[8] + lc_wqty[9] + lc_wqty[10] + lc_wqty[11])
	lc_wamt[1] = ds_src.getitemdecimal(arg_findrow,"wip002_wbbgat1")
	lc_wamt[2] = ds_src.getitemdecimal(arg_findrow,"wip002_wbinat1")
	lc_wamt[3] = ds_src.getitemdecimal(arg_findrow,"wip002_wbinat2")
	lc_wamt[4] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusat1")
	lc_wamt[5] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusat2")
	lc_wamt[6] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusat3")
	lc_wamt[7] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusat4")
	lc_wamt[8] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusat5")
	lc_wamt[9] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusat6")
	lc_wamt[10] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusat7")
	lc_wamt[11] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusat8")
	lc_wbusat9 = ds_src.getitemdecimal(arg_findrow,"wip002_wbusat9")
	lc_wamt[12] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusata")
	arg_amt[12] = ds_src.getitemdecimal(arg_findrow,"wip002_wbusata")
	lc_waavrg = ds_src.getitemdecimal(arg_findrow,"wip002_wbavrg1")
	lc_wamt[13] = lc_wamt[1] + lc_wamt[2] + lc_wamt[3] - (lc_wamt[4] + lc_wamt[5] + lc_wamt[6] + lc_wamt[7] &
						+ lc_wamt[8] + lc_wamt[9] + lc_wamt[10] + lc_wamt[11] + lc_wamt[12] + lc_wbusat9)
	
	ls_itcl = ds_src.getitemstring(arg_findrow,"wip002_wbitcl")
	ls_srce = ds_src.getitemstring(arg_findrow,"wip002_wbsrce")
	if (ls_itcl = '10' and ls_srce = '03') or (ls_itcl <> '10' and ls_srce = '04') then
		arg_amt[13] = arg_amt[13] - arg_amt[2]
		arg_amt[2] = 0
	end if					
	
	if arg_amt[1] <> lc_wamt[1] or arg_amt[2] <> lc_wamt[2] or arg_amt[3] <> lc_wamt[3] then
		ll_chkerr = 1
	end if
	for ll_cntx = 1 to 13
		if (arg_qty[ll_cntx] <> lc_wqty[ll_cntx]) or (arg_amt[ll_cntx] <> lc_wamt[ll_cntx]) then
//		if (arg_qty[ll_cntx] <> lc_wqty[ll_cntx]) then
			ll_chkerr = 1
		end if
	next
	if ll_chkerr = 1 or arg_iocd = '3' then
		lc_wbusat9 = arg_amt[1] + arg_amt[2] + arg_amt[3] - (arg_amt[4] + arg_amt[5] + arg_amt[6] + arg_amt[7] &
						+ arg_amt[8] + arg_amt[9] + arg_amt[10] + arg_amt[11] + arg_amt[12] + arg_amt[13])
		ll_currow = dw_src.insertrow(0)
		dw_src.setitem(ll_currow,"wip002_wbyear",ds_src.getitemstring(arg_findrow,"wip002_wbyear"))
		dw_src.setitem(ll_currow,"wip002_wbmonth",ds_src.getitemstring(arg_findrow,"wip002_wbmonth"))
		dw_src.setitem(ll_currow,"wip002_wbcmcd",ds_src.getitemstring(arg_findrow,"wip002_wbcmcd"))
		dw_src.setitem(ll_currow,"wip002_wbplant",ds_src.getitemstring(arg_findrow,"wip002_wbplant"))
		dw_src.setitem(ll_currow,"wip002_wbdvsn",ds_src.getitemstring(arg_findrow,"wip002_wbdvsn"))
		dw_src.setitem(ll_currow,"wip002_wborct",ds_src.getitemstring(arg_findrow,"wip002_wborct"))
		dw_src.setitem(ll_currow,"wip002_wbitno",ds_src.getitemstring(arg_findrow,"wip002_wbitno"))
		dw_src.setitem(ll_currow,"wip002_wbrev",ds_src.getitemstring(arg_findrow,"wip002_wbrev"))
		dw_src.setitem(ll_currow,"wip002_wbiocd",ds_src.getitemstring(arg_findrow,"wip002_wbiocd"))
		dw_src.setitem(ll_currow,"wip002_wbitcl",ds_src.getitemstring(arg_findrow,"wip002_wbitcl"))
		dw_src.setitem(ll_currow,"wip002_wbsrce",ds_src.getitemstring(arg_findrow,"wip002_wbsrce"))
		dw_src.setitem(ll_currow,"wip002_wbpdcd",ds_src.getitemstring(arg_findrow,"wip002_wbpdcd"))
		dw_src.setitem(ll_currow,"wip002_wbunit",ds_src.getitemstring(arg_findrow,"wip002_wbunit"))
		dw_src.setitem(ll_currow,"wip002_wbtype",ds_src.getitemstring(arg_findrow,"wip002_wbtype"))
		dw_src.setitem(ll_currow,"wip002_wbdesc",ds_src.getitemstring(arg_findrow,"wip002_wbdesc"))
		dw_src.setitem(ll_currow,"wip002_wbspec",ds_src.getitemstring(arg_findrow,"wip002_wbspec"))
		dw_src.setitem(ll_currow,"wip002_wbscrp",ds_src.getitemdecimal(arg_findrow,"wip002_wbscrp"))
		dw_src.setitem(ll_currow,"wip002_wbretn",ds_src.getitemdecimal(arg_findrow,"wip002_wbretn"))
		dw_src.setitem(ll_currow,"wip002_wbavrg1",ds_src.getitemdecimal(arg_findrow,"wip002_wbavrg1"))
		dw_src.setitem(ll_currow,"wip002_wbavrg2",ds_src.getitemdecimal(arg_findrow,"wip002_wbavrg2"))
		dw_src.setitem(ll_currow,"wip002_wbbgqt",ds_src.getitemdecimal(arg_findrow,"wip002_wbbgqt"))
		dw_src.setitem(ll_currow,"wip002_wbbgat1",ds_src.getitemdecimal(arg_findrow,"wip002_wbbgat1"))
		dw_src.setitem(ll_currow,"wip002_wbbgat2",ds_src.getitemdecimal(arg_findrow,"wip002_wbbgat2"))
		dw_src.setitem(ll_currow,"wip002_wbinqt",lc_wqty[2])
		dw_src.setitem(ll_currow,"wip002_wbinat1",lc_wamt[2])
		dw_src.setitem(ll_currow,"wip002_wbinat2",lc_wamt[3])
		dw_src.setitem(ll_currow,"wip002_wbinat3",0)
		dw_src.setitem(ll_currow,"wip002_wbinat4",0)
		dw_src.setitem(ll_currow,"wip002_wbusqt1",lc_wqty[3])
		dw_src.setitem(ll_currow,"wip002_wbusat1",lc_wamt[4])
		dw_src.setitem(ll_currow,"wip002_wbusqt2",lc_wqty[4])
		dw_src.setitem(ll_currow,"wip002_wbusat2",lc_wamt[5])
		dw_src.setitem(ll_currow,"wip002_wbusqt3",lc_wqty[5])
		dw_src.setitem(ll_currow,"wip002_wbusat3",lc_wamt[6])
		dw_src.setitem(ll_currow,"wip002_wbusqt4",lc_wqty[6])
		dw_src.setitem(ll_currow,"wip002_wbusat4",lc_wamt[7])
		dw_src.setitem(ll_currow,"wip002_wbusqt5",lc_wqty[7])
		dw_src.setitem(ll_currow,"wip002_wbusat5",lc_wamt[8])
		dw_src.setitem(ll_currow,"wip002_wbusqt6",lc_wqty[8])
		dw_src.setitem(ll_currow,"wip002_wbusat6",lc_wamt[9])
		dw_src.setitem(ll_currow,"wip002_wbusqt7",lc_wqty[9])
		dw_src.setitem(ll_currow,"wip002_wbusat7",lc_wamt[10])
		dw_src.setitem(ll_currow,"wip002_wbusqt8",lc_wqty[10])
		dw_src.setitem(ll_currow,"wip002_wbusat8",lc_wamt[11])
		dw_src.setitem(ll_currow,"wip002_wbusat9",0)
		dw_src.setitem(ll_currow,"wip002_wbusqta",lc_wqty[11])
		dw_src.setitem(ll_currow,"wip002_wbusata",lc_wamt[12])
		dw_src.setitem(ll_currow,"wip002_com_ohqt",lc_wqty[12])
		dw_src.setitem(ll_currow,"wip002_wbplan",ds_src.getitemstring(arg_findrow,"wip002_wbplan"))
		dw_src.setitem(ll_currow,"wip002_wbipaddr",ds_src.getitemstring(arg_findrow,"wip002_wbipaddr"))
		dw_src.setitem(ll_currow,"wip002_wbmacaddr",ds_src.getitemstring(arg_findrow,"wip002_wbmacaddr"))
		dw_src.setitem(ll_currow,"wip002_wbinptdt",ds_src.getitemstring(arg_findrow,"wip002_wbinptdt"))
		dw_src.setitem(ll_currow,"wip002_wbupdtdt",ds_src.getitemstring(arg_findrow,"wip002_wbupdtdt"))
		FOR  ll_cnty = 1  TO Dec(ls_colcount)
			dw_src.setitemstatus(ll_currow,ll_cnty,primary!,NotModified!)
		NEXT
		dw_src.setitemstatus(ll_currow,0,primary!,NotModified!)
		
		ll_currow = dw_src.insertrow(0)
		dw_src.setitem(ll_currow,"wip002_wbyear",ds_src.getitemstring(arg_findrow,"wip002_wbyear"))
		dw_src.setitem(ll_currow,"wip002_wbmonth",ds_src.getitemstring(arg_findrow,"wip002_wbmonth"))
		dw_src.setitem(ll_currow,"wip002_wbcmcd",ds_src.getitemstring(arg_findrow,"wip002_wbcmcd"))
		dw_src.setitem(ll_currow,"wip002_wbplant",ds_src.getitemstring(arg_findrow,"wip002_wbplant"))
		dw_src.setitem(ll_currow,"wip002_wbdvsn",ds_src.getitemstring(arg_findrow,"wip002_wbdvsn"))
		dw_src.setitem(ll_currow,"wip002_wborct",ds_src.getitemstring(arg_findrow,"wip002_wborct"))
		dw_src.setitem(ll_currow,"wip002_wbitno",ds_src.getitemstring(arg_findrow,"wip002_wbitno"))
		dw_src.setitem(ll_currow,"wip002_wbrev",ds_src.getitemstring(arg_findrow,"wip002_wbrev"))
		dw_src.setitem(ll_currow,"wip002_wbiocd",ds_src.getitemstring(arg_findrow,"wip002_wbiocd"))
		dw_src.setitem(ll_currow,"wip002_wbitcl",ds_src.getitemstring(arg_findrow,"wip002_wbitcl"))
		dw_src.setitem(ll_currow,"wip002_wbsrce",ds_src.getitemstring(arg_findrow,"wip002_wbsrce"))
		dw_src.setitem(ll_currow,"wip002_wbpdcd",ds_src.getitemstring(arg_findrow,"wip002_wbpdcd"))
		dw_src.setitem(ll_currow,"wip002_wbunit",ds_src.getitemstring(arg_findrow,"wip002_wbunit"))
		dw_src.setitem(ll_currow,"wip002_wbtype",ds_src.getitemstring(arg_findrow,"wip002_wbtype"))
		dw_src.setitem(ll_currow,"wip002_wbdesc",ds_src.getitemstring(arg_findrow,"wip002_wbdesc"))
		dw_src.setitem(ll_currow,"wip002_wbspec",ds_src.getitemstring(arg_findrow,"wip002_wbspec"))
		dw_src.setitem(ll_currow,"wip002_wbscrp",ds_src.getitemdecimal(arg_findrow,"wip002_wbscrp"))
		dw_src.setitem(ll_currow,"wip002_wbretn",ds_src.getitemdecimal(arg_findrow,"wip002_wbretn"))
		dw_src.setitem(ll_currow,"wip002_wbavrg1",ds_src.getitemdecimal(arg_findrow,"wip002_wbavrg1"))
		dw_src.setitem(ll_currow,"wip002_wbavrg2",ds_src.getitemdecimal(arg_findrow,"wip002_wbavrg2"))
		dw_src.setitem(ll_currow,"wip002_wbbgqt",ds_src.getitemdecimal(arg_findrow,"wip002_wbbgqt"))
		dw_src.setitem(ll_currow,"wip002_wbbgat1",ds_src.getitemdecimal(arg_findrow,"wip002_wbbgat1"))
		dw_src.setitem(ll_currow,"wip002_wbbgat2",ds_src.getitemdecimal(arg_findrow,"wip002_wbbgat2"))
		dw_src.setitem(ll_currow,"wip002_wbinqt",arg_qty[2])
		dw_src.setitem(ll_currow,"wip002_wbinat1",arg_amt[2])     	//정상투입금액
		dw_src.setitem(ll_currow,"wip002_wbinat2",arg_amt[3])			//금액만 투입된 경우
		dw_src.setitem(ll_currow,"wip002_wbinat3",0)						//소재자재 투입
		dw_src.setitem(ll_currow,"wip002_wbinat4",0)						//타공장제작이체품 금액
		dw_src.setitem(ll_currow,"wip002_wbusqt1",arg_qty[3])
		dw_src.setitem(ll_currow,"wip002_wbusat1",arg_amt[4])
		dw_src.setitem(ll_currow,"wip002_wbusqt2",arg_qty[4])
		dw_src.setitem(ll_currow,"wip002_wbusat2",arg_amt[5])
		dw_src.setitem(ll_currow,"wip002_wbusqt3",arg_qty[5])
		dw_src.setitem(ll_currow,"wip002_wbusat3",arg_amt[6])
		dw_src.setitem(ll_currow,"wip002_wbusqt4",arg_qty[6])
		dw_src.setitem(ll_currow,"wip002_wbusat4",arg_amt[7])
		dw_src.setitem(ll_currow,"wip002_wbusqt5",arg_qty[7])
		dw_src.setitem(ll_currow,"wip002_wbusat5",arg_amt[8])
		dw_src.setitem(ll_currow,"wip002_wbusqt6",arg_qty[8])
		dw_src.setitem(ll_currow,"wip002_wbusat6",arg_amt[9])
		dw_src.setitem(ll_currow,"wip002_wbusqt7",arg_qty[9])
		dw_src.setitem(ll_currow,"wip002_wbusat7",arg_amt[10])
		dw_src.setitem(ll_currow,"wip002_wbusqt8",arg_qty[10])
		dw_src.setitem(ll_currow,"wip002_wbusat8",arg_amt[11])
		dw_src.setitem(ll_currow,"wip002_wbusat9",lc_wbusat9)
		dw_src.setitem(ll_currow,"wip002_wbusqta",arg_qty[11])
		dw_src.setitem(ll_currow,"wip002_wbusata",arg_amt[12])
		dw_src.setitem(ll_currow,"wip002_com_ohqt",arg_qty[12])
		dw_src.setitem(ll_currow,"wip002_wbplan",ds_src.getitemstring(arg_findrow,"wip002_wbplan"))
		dw_src.setitem(ll_currow,"wip002_wbipaddr",ds_src.getitemstring(arg_findrow,"wip002_wbipaddr"))
		dw_src.setitem(ll_currow,"wip002_wbmacaddr",ds_src.getitemstring(arg_findrow,"wip002_wbmacaddr"))
		dw_src.setitem(ll_currow,"wip002_wbinptdt",ds_src.getitemstring(arg_findrow,"wip002_wbinptdt"))
		dw_src.setitem(ll_currow,"wip002_wbupdtdt",g_s_date)

		FOR  ll_cnty = 1  TO Dec(ls_colcount)
		  dw_src.setitemstatus(ll_currow,ll_cnty,primary!,DataModified!)
		NEXT
		dw_src.setitemstatus(ll_currow,0,primary!,DataModified!)	
	end if
	
	UPDATE PBWIP.WIP002
		SET WBAVRG1 = :lc_waavrg, WBBGQT  = :arg_qty[12], WBBGAT1 = :arg_amt[13]
		WHERE WBCMCD = '01' AND WBPLANT = :arg_plant AND WBDVSN = :arg_dvsn 
			AND WBORCT = :arg_orct AND WBITNO = :arg_itno
			AND WBYEAR = :ls_nextyear AND WBMONTH = :ls_nextmonth AND WBIOCD = :arg_iocd
			using sqlca;
			
	if sqlca.sqlnrows <> 1 then
		insert into pbwip.wip002(wbcmcd,wbplant,wbdvsn,wborct,wbitno,
			 wbyear,wbmonth,wbrev,wbiocd,wbitcl,wbsrce,wbpdcd,
			 wbunit,wbtype,wbdesc,wbspec,wbscrp,wbretn,wbavrg1,
			 wbavrg2,wbbgqt,wbbgat1,wbbgat2,wbinqt,wbinat1,
			 wbinat2,wbinat3,wbinat4,wbusqt1,wbusat1,wbusqt2,
			 wbusat2,wbusqt3,wbusat3,wbusqt4,wbusat4,wbusqt5,
			 wbusat5,wbusqt6,wbusat6,wbusqt7,wbusat7,wbusqt8,
			 wbusat8,wbusat9,wbusqta,wbusata,wbplan,wbipaddr,
			 wbmacaddr,wbinptdt,wbupdtdt)
		select aa.comltd,aa.xplant,aa.div,:arg_orct,aa.itno,
			 :ls_nextyear,:ls_nextmonth,bb.rvno,:arg_iocd,aa.cls,aa.srce,substring(aa.pdcd,1,2),
			 aa.xunit,bb.xtype,bb.itnm,bb.spec,0,0,:lc_waavrg,
			 0,:arg_qty[12], :arg_amt[13],
			 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
			 0,0,0,0,0,' ','','',:g_s_date,''
		from pbinv.inv101 aa inner join pbinv.inv002 bb
			on aa.comltd = bb.comltd and aa.itno = bb.itno
		where aa.comltd = '01' and aa.xplant = :arg_plant and
			aa.div = :arg_dvsn and aa.itno = :arg_itno
		using sqlca;
	end if
		
	UPDATE PBWIP.WIP001
		SET WABGQT  = :arg_qty[12], WABGAT1 = :arg_amt[13],
			WAOHQT = :arg_qty[12] + WAINQT - ( WAUSQT1 + WAUSQT2 + WAUSQT3 + WAUSQT4 
				+ WAUSQT5 + WAUSQT7 + WAUSQT8)
		WHERE WACMCD = '01' AND WAPLANT = :arg_plant AND WADVSN = :arg_dvsn 
			AND WAORCT = :arg_orct AND WAITNO = :arg_itno AND WAIOCD = :arg_iocd
	using sqlca;
	if sqlca.sqlnrows <> 1 then
		insert into pbwip.wip001(wacmcd,waplant,wadvsn,waorct,
		  waitno,waiocd,waavrg1,waavrg2,wabgqt,wabgat1,wabgat2,
		  wainqt,wainat1,wainat2,wainat3,wainat4,wausqt1,wausat1,
		  wausqt2,wausat2,wausqt3,wausat3,wausqt4,wausat4,
		  wausqt5,wausat5,wausqt6,wausat6,wausqt7,wausat7,
		  wausqt8,wausat8,wausat9,waohqt,waohat1,waohat2,wascrp,
		  waretn,waplan,waipaddr,wamacaddr,wainptdt,waupdtdt)
		select aa.comltd,aa.xplant,aa.div,:arg_orct,
		aa.itno,:arg_iocd,:lc_waavrg,0,:arg_qty[12], :arg_amt[13],0,
			 0,0,0,0,0,0,0,
			 0,0,0,0,0,0,
			 0,0,0,0,0,0,
			 0,0,0,0,0,0,0,
			 0,'','','',:g_s_date,''
		from pbinv.inv101 aa inner join pbinv.inv002 bb
			on aa.comltd = bb.comltd and aa.itno = bb.itno
		where aa.comltd = '01' and aa.xplant = :arg_plant and
			aa.div = :arg_dvsn and aa.itno = :arg_itno
		using sqlca;
	end if
end if

end subroutine

