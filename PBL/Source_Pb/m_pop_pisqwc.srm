$PBExportHeader$m_pop_pisqwc.srm
$PBExportComments$Warranty Claim Reponse window
forward
global type m_pop_pisqwc from menu
end type
type m_action from menu within m_pop_pisqwc
end type
type m_claimupload from menu within m_action
end type
type m_claimdownload from menu within m_action
end type
type m_confirmupload from menu within m_action
end type
type m_bar01 from menu within m_action
end type
type m_applyobjection from menu within m_action
end type
type m_cancelobjection from menu within m_action
end type
type m_bar02 from menu within m_action
end type
type m_confirmobjection from menu within m_action
end type
type m_bar3 from menu within m_action
end type
type m_confirmdivision from menu within m_action
end type
type m_canceldivision from menu within m_action
end type
type m_bar4 from menu within m_action
end type
type m_insertinfo from menu within m_action
end type
type m_basicinfo from menu within m_action
end type
type m_action from menu within m_pop_pisqwc
m_claimupload m_claimupload
m_claimdownload m_claimdownload
m_confirmupload m_confirmupload
m_bar01 m_bar01
m_applyobjection m_applyobjection
m_cancelobjection m_cancelobjection
m_bar02 m_bar02
m_confirmobjection m_confirmobjection
m_bar3 m_bar3
m_confirmdivision m_confirmdivision
m_canceldivision m_canceldivision
m_bar4 m_bar4
m_insertinfo m_insertinfo
m_basicinfo m_basicinfo
end type
global type m_pop_pisqwc from menu
m_action m_action
end type
end forward

global type m_pop_pisqwc from menu
m_action m_action
end type
global m_pop_pisqwc m_pop_pisqwc

on m_pop_pisqwc.create
m_pop_pisqwc=this
call super::create
this.text = "m_pop_mpms"
this.m_action=create m_action
this.Item[UpperBound(this.Item)+1]=this.m_action
end on

on m_pop_pisqwc.destroy
call super::destroy
destroy(this.m_action)
end on

type m_action from menu within m_pop_pisqwc
m_claimupload m_claimupload
m_claimdownload m_claimdownload
m_confirmupload m_confirmupload
m_bar01 m_bar01
m_applyobjection m_applyobjection
m_cancelobjection m_cancelobjection
m_bar02 m_bar02
m_confirmobjection m_confirmobjection
m_bar3 m_bar3
m_confirmdivision m_confirmdivision
m_canceldivision m_canceldivision
m_bar4 m_bar4
m_insertinfo m_insertinfo
m_basicinfo m_basicinfo
end type

on m_action.create
call super::create
this.text = "기능"
this.m_claimupload=create m_claimupload
this.m_claimdownload=create m_claimdownload
this.m_confirmupload=create m_confirmupload
this.m_bar01=create m_bar01
this.m_applyobjection=create m_applyobjection
this.m_cancelobjection=create m_cancelobjection
this.m_bar02=create m_bar02
this.m_confirmobjection=create m_confirmobjection
this.m_bar3=create m_bar3
this.m_confirmdivision=create m_confirmdivision
this.m_canceldivision=create m_canceldivision
this.m_bar4=create m_bar4
this.m_insertinfo=create m_insertinfo
this.m_basicinfo=create m_basicinfo
this.Item[UpperBound(this.Item)+1]=this.m_claimupload
this.Item[UpperBound(this.Item)+1]=this.m_claimdownload
this.Item[UpperBound(this.Item)+1]=this.m_confirmupload
this.Item[UpperBound(this.Item)+1]=this.m_bar01
this.Item[UpperBound(this.Item)+1]=this.m_applyobjection
this.Item[UpperBound(this.Item)+1]=this.m_cancelobjection
this.Item[UpperBound(this.Item)+1]=this.m_bar02
this.Item[UpperBound(this.Item)+1]=this.m_confirmobjection
this.Item[UpperBound(this.Item)+1]=this.m_bar3
this.Item[UpperBound(this.Item)+1]=this.m_confirmdivision
this.Item[UpperBound(this.Item)+1]=this.m_canceldivision
this.Item[UpperBound(this.Item)+1]=this.m_bar4
this.Item[UpperBound(this.Item)+1]=this.m_insertinfo
this.Item[UpperBound(this.Item)+1]=this.m_basicinfo
end on

on m_action.destroy
call super::destroy
destroy(this.m_claimupload)
destroy(this.m_claimdownload)
destroy(this.m_confirmupload)
destroy(this.m_bar01)
destroy(this.m_applyobjection)
destroy(this.m_cancelobjection)
destroy(this.m_bar02)
destroy(this.m_confirmobjection)
destroy(this.m_bar3)
destroy(this.m_confirmdivision)
destroy(this.m_canceldivision)
destroy(this.m_bar4)
destroy(this.m_insertinfo)
destroy(this.m_basicinfo)
end on

type m_claimupload from menu within m_action
end type

on m_claimupload.create
call super::create
this.text = "보상청구 엑셀업로드"
end on

on m_claimupload.destroy
call super::destroy
end on

event clicked;integer 		li_findrow
str_pisqwc_parm lstr
string 		ls_manageno, ls_custcode
window		lw_this
datawindow 	ldw_this

lstr 		= Message.PowerObjectParm
lw_this 	= lstr.w_parm
ldw_this = lstr.dw_parm[1]
ls_manageno = lstr.s_parm[1]
ls_custcode = lstr.s_parm[2]

openwithparm(w_pisq613u_01,lstr)

lw_this.triggerevent('ue_retrieve')
li_findrow = ldw_this.find("manageno = '" + ls_manageno + "'", 1, ldw_this.rowcount())
if li_findrow > 0 then
	ldw_this.Post Event RowFocusChanged(li_findrow)
	ldw_this.scrolltorow(li_findrow)
	ldw_this.setrow(li_findrow)
end if

end event

type m_claimdownload from menu within m_action
end type

on m_claimdownload.create
call super::create
this.text = "보상확정 엑셀다운"
end on

on m_claimdownload.destroy
call super::destroy
end on

event clicked;integer 		li_findrow
str_pisqwc_parm lstr
string 		ls_manageno, ls_custcode
window		lw_this
datawindow 	ldw_this

lstr 		= Message.PowerObjectParm
lw_this 	= lstr.w_parm
ldw_this = lstr.dw_parm[2]
ls_manageno = lstr.s_parm[1]
ls_custcode = lstr.s_parm[2]

f_save_to_excel(ldw_this)
end event

type m_confirmupload from menu within m_action
end type

on m_confirmupload.create
call super::create
this.text = "정산확정 엑셀업로드"
end on

on m_confirmupload.destroy
call super::destroy
end on

event clicked;integer 		li_findrow
str_pisqwc_parm lstr
string 		ls_manageno, ls_custcode
window		lw_this
datawindow 	ldw_this

lstr 		= Message.PowerObjectParm
lw_this 	= lstr.w_parm
ldw_this = lstr.dw_parm[1]
ls_manageno = lstr.s_parm[1]
ls_custcode = lstr.s_parm[2]

openwithparm(w_pisq613u_02,lstr)

lw_this.triggerevent('ue_retrieve')
li_findrow = ldw_this.find("manageno = '" + ls_manageno + "'", 1, ldw_this.rowcount())
if li_findrow > 0 then
	ldw_this.Post Event RowFocusChanged(li_findrow)
	ldw_this.scrolltorow(li_findrow)
	ldw_this.setrow(li_findrow)
end if
end event

type m_bar01 from menu within m_action
end type

on m_bar01.create
call super::create
this.text = "-"
end on

on m_bar01.destroy
call super::destroy
end on

type m_applyobjection from menu within m_action
end type

on m_applyobjection.create
call super::create
this.text = "이의요청 실행(QA)"
end on

on m_applyobjection.destroy
call super::destroy
end on

event clicked;integer 		li_findrow, li_cnt, li_rowcnt
str_pisqwc_parm lstr
string 		ls_manageno, ls_mail_body
window		lw_this
datawindow 	ldw_this

lstr 		= Message.PowerObjectParm
lw_this 	= lstr.w_parm
ldw_this = lstr.dw_parm[1]
ls_manageno = lstr.s_parm[1]

f_pism_working_msg('이의요청실행','이의제기데이타를 생성중입니다.')
//청구접수데이타를 가지고 이의제기로 이동
DECLARE up_applyobjection PROCEDURE FOR sp_pisq613u_applyobjection  
         @ps_manageno = :ls_manageno  using sqleis;
			
Execute up_applyobjection;

If IsValid(w_pism_working) Then Close(w_pism_working)
if sqleis.sqlcode < 0 then
	MessageBox("알림","처리중에 에러가 발생하였습니다.")
else
	
	UPDATE twadminlist
	Set Ingstatus = 'B', Objectiondate = convert(char(10),cast(:g_s_date as datetime),102)
	Where ManageNo = :ls_manageno using sqleis;
	
	UPDATE twclaimlist
	Set Status = 'B'
	Where ManClaimNo = :ls_manageno using sqleis;
	
	lw_this.triggerevent('ue_retrieve')
	li_findrow = ldw_this.find("manageno = '" + ls_manageno + "'", 1, ldw_this.rowcount())
	if li_findrow > 0 then
		ldw_this.Post Event RowFocusChanged(li_findrow)
		ldw_this.scrolltorow(li_findrow)
		ldw_this.setrow(li_findrow)
	end if
	ls_mail_body = "<html><head/><body>" &
		+ "<font size='3' color='red'>" &
		+ "<b>보상관리번호 : " + ls_manageno + " </b></font>" &
		+ "<p>해당보상청구건에 대해서 품질보증에서 이의제기데이타를 생성하였으므로" &
		+ "<br>이의제기작업을 진행해 주시기 바랍니다." &
		+ "</body></html>"
	//QC담당자에게 메일발송
	f_wc_send_email('%','%','C','이의제기작성', ls_mail_body,ls_manageno)
	//끝
	MessageBox("확인","정상적으로 처리되었습니다.")
end if

return 
end event

type m_cancelobjection from menu within m_action
end type

on m_cancelobjection.create
call super::create
this.text = "이의요청 취소(QA)"
end on

on m_cancelobjection.destroy
call super::destroy
end on

event clicked;integer 		li_findrow, li_rtn, li_count
str_pisqwc_parm lstr
string 		ls_manageno, ls_errormsg, ls_mail_body
window		lw_this
datawindow 	ldw_this

lstr 		= Message.PowerObjectParm
lw_this 	= lstr.w_parm
ldw_this = lstr.dw_parm[1]
ls_manageno = lstr.s_parm[1]

Select count(*) Into :li_count
From twclaimlist
Where ManClaimNo = :ls_manageno and Status > 'B' using sqleis;

if li_count > 0 then
	MessageBox("확인", "이의확정데이타가 존제합니다. 취소할 수 없습니다.")
	return 
end if
li_rtn = MessageBox("확인", "이의요청취소를 하시면 보상청구번호 " + ls_manageno &
	+ "와 관련된 이의제기데이타가 삭제됩니다. 취소하시겠습니까? ",Exclamation!, OKCancel!, 2)
if li_rtn = 2 then
	return
end if
//청구접수데이타를 가지고 이의제기로 이동
sqleis.AutoCommit = False

UPDATE twclaimlist
Set Status = 'A'
Where ManClaimNo = :ls_manageno using sqleis;

if sqleis.sqlnrows < 1 then
	ls_errormsg = 'Error03'
	Goto RollBack_
end if

Delete From twobjectionlist
Where ManClaimNo = :ls_manageno using sqleis;

if sqleis.sqlcode <> 0 then
	ls_errormsg = 'Error01'
	Goto Rollback_
end if

UPDATE twadminlist
Set Ingstatus = 'A'
Where ManageNo = :ls_manageno using sqleis;

if sqleis.sqlnrows < 1 then
	ls_errormsg = 'Error02'
	Goto RollBack_
end if

Commit using sqleis;
sqleis.AutoCommit = True

lw_this.triggerevent('ue_retrieve')
li_findrow = ldw_this.find("manageno = '" + ls_manageno + "'", 1, ldw_this.rowcount())
if li_findrow > 0 then
	ldw_this.Post Event RowFocusChanged(li_findrow)
	ldw_this.scrolltorow(li_findrow)
	ldw_this.setrow(li_findrow)
end if

ls_mail_body = "<html><head/><body>" &
		+ "<font size='4' color='red'>" &
		+ "<b>보상관리번호 : " + ls_manageno + " </b></font><br/>" &
		+ "<p>해당보상청구건에 대해서 품질보증에서 이의제기데이타를 삭제하였으므로" &
		+ "<br>이의제기작업을 중지하시기 바랍니다." &
		+ "</body></html>"
//QC담당자에게 메일발송
f_wc_send_email('%','%','C','이의요청취소', ls_mail_body, ls_manageno)
//끝

MessageBox("확인","정상적으로 처리되었습니다.")
return

RollBack_:
RollBack using sqleis;
sqleis.AutoCommit = True
MessageBox("확인","처리중에 에러가 발생하였습니다." + ls_errormsg)
return

end event

type m_bar02 from menu within m_action
end type

on m_bar02.create
call super::create
this.text = "-"
end on

on m_bar02.destroy
call super::destroy
end on

type m_confirmobjection from menu within m_action
end type

on m_confirmobjection.create
call super::create
this.text = "이의제기 확정/취소(QA)"
end on

on m_confirmobjection.destroy
call super::destroy
end on

event clicked;integer 		li_findrow, li_rtn, li_count
str_pisqwc_parm lstr
string 		ls_manageno, ls_errormsg
window		lw_this
datawindow 	ldw_this

lstr 		= Message.PowerObjectParm
lw_this 	= lstr.w_parm
ldw_this = lstr.dw_parm[1]
ls_manageno = lstr.s_parm[1]

openwithparm(w_pisq613u_03,lstr)

lw_this.triggerevent('ue_retrieve')
li_findrow = ldw_this.find("manageno = '" + ls_manageno + "'", 1, ldw_this.rowcount())
if li_findrow > 0 then
	ldw_this.Post Event RowFocusChanged(li_findrow)
	ldw_this.scrolltorow(li_findrow)
	ldw_this.setrow(li_findrow)
end if

return

end event

type m_bar3 from menu within m_action
end type

on m_bar3.create
call super::create
this.text = "-"
end on

on m_bar3.destroy
call super::destroy
end on

type m_confirmdivision from menu within m_action
end type

on m_confirmdivision.create
call super::create
this.text = "이의제기 확정실행(QC)"
end on

on m_confirmdivision.destroy
call super::destroy
end on

event clicked;integer 		li_findrow, li_rtn, li_count
str_pisqwc_parm lstr
string 		ls_manageno, ls_errormsg, ls_areacode, ls_divisioncode
window		lw_this
datawindow 	ldw_this

lstr 		= Message.PowerObjectParm
lw_this 	= lstr.w_parm
ldw_this = lstr.dw_parm[1]
ls_manageno = lstr.s_parm[1]
ls_areacode = lstr.s_parm[2]
ls_divisioncode = lstr.s_parm[3]

Select count(*) Into :li_count
From twclaimlist
Where ManClaimNo = :ls_manageno and Areacode like :ls_areacode and
	Divisioncode like :ls_divisioncode
using sqleis;

if li_count < 1 then
	MessageBox("확인", "이의제기데이타가 없습니다. 확정할 수 없습니다.")
	return 
end if

//청구접수데이타를 가지고 이의제기로 이동
sqleis.AutoCommit = False

UPDATE twclaimlist
Set Status = 'C'
Where ManClaimNo = :ls_manageno and Areacode like :ls_areacode and
	Divisioncode like :ls_divisioncode
using sqleis;

if sqleis.sqlnrows < 1 then
	ls_errormsg = 'Error03'
	Goto RollBack_
end if

Commit using sqleis;
sqleis.AutoCommit = True

lw_this.triggerevent('ue_retrieve')
li_findrow = ldw_this.find("manageno = '" + ls_manageno + "'", 1, ldw_this.rowcount())
if li_findrow > 0 then
	ldw_this.Post Event RowFocusChanged(li_findrow)
	ldw_this.scrolltorow(li_findrow)
	ldw_this.setrow(li_findrow)
end if
MessageBox("확인","정상적으로 처리되었습니다.")
return

RollBack_:
RollBack using sqleis;
sqleis.AutoCommit = True
MessageBox("확인","처리중에 에러가 발생하였습니다." + ls_errormsg)
return

end event

type m_canceldivision from menu within m_action
end type

on m_canceldivision.create
call super::create
this.text = "이의제기 확정취소(QC)"
end on

on m_canceldivision.destroy
call super::destroy
end on

event clicked;integer 		li_findrow, li_rtn, li_count
str_pisqwc_parm lstr
string 		ls_manageno, ls_errormsg, ls_areacode, ls_divisioncode
window		lw_this
datawindow 	ldw_this

lstr 		= Message.PowerObjectParm
lw_this 	= lstr.w_parm
ldw_this = lstr.dw_parm[1]
ls_manageno = lstr.s_parm[1]
ls_areacode = lstr.s_parm[2]
ls_divisioncode = lstr.s_parm[3]

Select count(*) Into :li_count
From twclaimlist
Where ManClaimNo = :ls_manageno and Areacode like :ls_areacode and
	Divisioncode like :ls_divisioncode
using sqleis;

if li_count < 1 then
	MessageBox("확인", "이의제기데이타가 없습니다. 취소할 수 없습니다.")
	return 
end if

//청구접수데이타를 가지고 이의제기로 이동
sqleis.AutoCommit = False

UPDATE twclaimlist
Set Status = 'B'
Where ManClaimNo = :ls_manageno and Areacode like :ls_areacode and
	Divisioncode like :ls_divisioncode
using sqleis;

if sqleis.sqlnrows < 1 then
	ls_errormsg = 'Error03'
	Goto RollBack_
end if

Commit using sqleis;
sqleis.AutoCommit = True

lw_this.triggerevent('ue_retrieve')
li_findrow = ldw_this.find("manageno = '" + ls_manageno + "'", 1, ldw_this.rowcount())
if li_findrow > 0 then
	ldw_this.Post Event RowFocusChanged(li_findrow)
	ldw_this.scrolltorow(li_findrow)
	ldw_this.setrow(li_findrow)
end if
MessageBox("확인","정상적으로 처리되었습니다.")
return

RollBack_:
RollBack using sqleis;
sqleis.AutoCommit = True
MessageBox("확인","처리중에 에러가 발생하였습니다." + ls_errormsg)
return

end event

type m_bar4 from menu within m_action
end type

on m_bar4.create
call super::create
this.text = "-"
end on

on m_bar4.destroy
call super::destroy
end on

type m_insertinfo from menu within m_action
end type

on m_insertinfo.create
call super::create
this.text = "분담율정보입력"
end on

on m_insertinfo.destroy
call super::destroy
end on

event clicked;integer 		li_findrow, li_rtn, li_count
str_pisqwc_parm lstr
string 		ls_code
window		lw_this
datawindow 	ldw_this

lstr 		= Message.PowerObjectParm
lw_this 	= lstr.w_parm
ldw_this = lstr.dw_parm[1]

openwithparm(w_pisq611u_04,lstr)
ls_code = Message.StringParm
lw_this.triggerevent('ue_retrieve')
li_findrow = ldw_this.find("assureid = '" + ls_code + "'", 1, ldw_this.rowcount())
if li_findrow > 0 then
	ldw_this.Post Event RowFocusChanged(li_findrow)
	ldw_this.scrolltorow(li_findrow)
	ldw_this.setrow(li_findrow)
end if

return
end event

type m_basicinfo from menu within m_action
end type

on m_basicinfo.create
call super::create
this.text = "기본정보업로드"
end on

on m_basicinfo.destroy
call super::destroy
end on

event clicked;integer 		li_findrow, li_rtn, li_count
str_pisqwc_parm lstr
string 		ls_code
window		lw_this
datawindow 	ldw_this

lstr 		= Message.PowerObjectParm
lw_this 	= lstr.w_parm
ldw_this = lstr.dw_parm[1]
ls_code = lstr.s_parm[1]

openwithparm(w_pisq611u_01,lstr)

//lw_this.triggerevent('ue_retrieve')
li_findrow = ldw_this.find("cocode = '" + ls_code + "'", 1, ldw_this.rowcount())
if li_findrow > 0 then
	ldw_this.Post Event RowFocusChanged(li_findrow)
	ldw_this.scrolltorow(li_findrow)
	ldw_this.setrow(li_findrow)
end if

return
end event

