$PBExportHeader$f_insert_comm140.srf
$PBExportComments$개인정보등록 window 권한부여 함수
global type f_insert_comm140 from function_object
end type

forward prototypes
global function boolean f_insert_comm140 (string ag_empno)
end prototypes

global function boolean f_insert_comm140 (string ag_empno);////////////////////////////////////////////////////////////////////
//////////사번등록시 자동적으로 개인자력window권한부여//////////////
////////////////////////////////////////////////////////////////////
integer i,ln_count, j, li_cnt
string  ls_area, ls_wlist[], ls_window

ls_wlist = { 'w_comm902u','w_per016u','w_pay066u','w_pay069i','w_pay070u', 'w_psm111u'}

datastore ds_1

sqlxx = CREATE transaction
ds_1	= Create Datastore
ds_1.dataobject = 'd_comm001_retrieve'
ds_1.settransobject(Sqlpis)

ln_count = ds_1.retrieve()

for i = 1 to ln_count
	// remote autodown 관련
	ls_area 				= trim(ds_1.object.serverid[i])
	sqlxx.ServerName 	= trim(ds_1.object.servername[i])
	sqlxx.DBMS       	= trim(ds_1.object.serverdbms[i])
	sqlxx.Database   	= trim(ds_1.object.serverdatabase[i])
	sqlxx.LogId      	= trim(ds_1.object.serverlogid[i])
	sqlxx.LogPass    	= trim(ds_1.object.serverpassword[i])
//	if trim(ds_1.object.serverautocommit[i]) = "T" then
		sqlxx.autocommit = true
//	else
//		sqlxx.autocommit = false
//	end if
//	
	sqlxx.DBParm     = trim(ds_1.object.serverdbparm[i])

	connect using sqlxx;
	if sqlxx.sqlcode <> 0 then
		messagebox('경고',  ls_area + ' 서버가 연결되지 않습니다.')
		disconnect using sqlxx;
		destroy sqlxx 
		destroy ds_1
		return false
	end if
	
   for j= 1 to UpperBound(ls_wlist)
		
		ls_window = ls_wlist[j]	
		
		if sqlxx.dbms	=	"ODBC"	then		
			select count(*)
			into  :li_cnt
			from  pbcommon.comm140
			where emp_no  = :ag_empno  and
					use_win = :ls_window
			using sqlxx ;
		else
			select count(*)
			into  :li_cnt
			from  comm140
			where emp_no  = :ag_empno  and
					use_win = :ls_window
			using sqlxx ;
		end if
				
		IF li_cnt = 0  then
			
			if sqlxx.dbms	=	"ODBC"	then
				insert into pbcommon.comm140
				values ( :ag_empno , :ls_window , '5', 'ADMIN' , :g_s_datetime, '' ,'' ,:g_s_ipaddr ,:g_s_macaddr )
				using sqlxx ;
			else
				insert into comm140 
				values ( :ag_empno , :ls_window , '5', 'ADMIN' , :g_s_datetime, '' ,'' ,:g_s_ipaddr ,:g_s_macaddr )
				using sqlxx ;
			End if
			
			if sqlxx.sqlcode <> 0  then
				messagebox("확인",sqlxx.sqlerrtext)
				disconnect using sqlxx;
				destroy sqlxx 
				destroy ds_1
				return false
			END IF
		end if
	next
	disconnect using sqlxx;
next

destroy sqlxx 
destroy ds_1
return true


//int  ln_cnt, i
//string  ls_area
//sqlxx 		= CREATE transaction
//sqlxx.DBMS  = "MSS Microsoft SQL Server 6.x"
//
//for i = 1 to 7
//	// remote autodown 관련
//	if i = 1 then
//		sqlxx.ServerName = "192.168.113.248,1433"
//		sqlxx.Database   = "IPIS"
//		sqlxx.LogId      = "sa"
//		sqlxx.LogPass    = "goipis"
//		ls_area         = "군산"
//	elseif i = 2 then
//		sqlxx.ServerName = "192.168.103.249,1433"
//		sqlxx.Database   = "IPIS"
//		sqlxx.LogId      = "sa"
//		sqlxx.LogPass    = "goipis"
//		ls_area         = "전장"
//	elseif i = 3 then
//		sqlxx.ServerName = "192.168.108.249,1433"
//		sqlxx.Database   = "IPIS"
//		sqlxx.LogId      = "sa"
//		sqlxx.LogPass    = "goipis"
//		ls_area         = "기계"
//	elseif i = 4 then
//		sqlxx.ServerName = "192.168.109.249,1433"
//		sqlxx.Database   = "IPIS"
//		sqlxx.LogId      = "sa"
//		sqlxx.LogPass    = "goipis"
//		ls_area         = "공조"
//	elseif i = 5 then
//		sqlxx.ServerName = "192.168.112.72,1433"
//		sqlxx.Database   = "IPIS"
//		sqlxx.LogId      = "sa"
//		sqlxx.LogPass    = "goipis"
//		ls_area         = "진천"
//	elseif i = 6 then
//		sqlxx.ServerName = "192.168.115.93,1433"
//		sqlxx.Database   = "IPIS"
//		sqlxx.LogId      = "sa"
//		sqlxx.LogPass    = "goipis"
//		ls_area          = "Bupyong"
//	elseif i = 7 then
//		sqlxx.DBMS       = "ODBC"
//		sqlxx.autocommit = true
//		sqlxx.DBParm     =  "ConnectString='DSN=CA/400 ODBC FOR PB;UID=casinv;PWD=dpainv',PBCatalogOwner='PBCOMMON',CommitOnDisconnect='No',DisableBind=1" 
//		ls_area          = "대구"	
//	end if 
//	connect using sqlxx;
//	if sqlxx.sqlcode <> 0 then
//		messagebox('경고',  ls_area + ' 서버가 연결되지 않습니다. update 불가.')
//		continue
//	end if
//	///////////////////////////////////////////////////////////////////////////////////////
//	select count(*)
//	into  :ln_cnt
//	from  comm140
//	where emp_no = :ag_empno  and
//			use_win  = 'w_per016u'
//	using sqlxx ;
//	
//	if sqlxx.sqlcode <> 0  then
//		messagebox('1:개인정보등록 WINDOW 입력 ERROR' , '개인정보등록 WINDOW 입력 ERROR , 시스템개발팀으로 연락주세요.')
//		RETURN
//	END IF
//	
//	IF ln_cnt = 0  then
//		insert into comm140
//		values ( :ag_empno , 'w_per016u' , '5', 'ADMIN' , :g_s_datetime, '' ,'' ,:g_s_ipaddr ,:g_s_macaddr )
//		using sqlxx ;
//		if sqlxx.sqlcode <> 0  then
//			messagebox('2:개인정보등록 WINDOW 입력 ERROR' , '개인정보등록 WINDOW 입력 ERROR , 시스템개발팀으로 연락주세요.')
//			RETURN
//		END IF
//	else
//		
//	end if
//	ln_cnt = 0
//	select count(*)
//	into  :ln_cnt
//	from  comm140
//	where emp_no = :ag_empno  and
//			use_win  = 'w_comm902u'
//	using sqlxx ;
//	
//	if sqlxx.sqlcode <> 0  then
//		messagebox('1:전산장비 관리권한 WINDOW 입력 ERROR' , '개인정보등록 WINDOW 입력 ERROR , 시스템개발팀으로 연락주세요.')
//		RETURN
//	END IF
//	
//	IF ln_cnt = 0  then
//		insert into comm140
//		values ( :ag_empno , 'w_comm902u' , '5', 'ADMIN' , :g_s_datetime, '' ,'' ,:g_s_ipaddr ,:g_s_macaddr )
//		using sqlxx ;
//		if sqlxx.sqlcode <> 0  then
//			messagebox('2:전산장비 관리권한 WINDOW 입력 ERROR' , '개인정보등록 WINDOW 입력 ERROR , 시스템개발팀으로 연락주세요.')
//			RETURN
//		END IF
//	else
//		
//	end if
//	ln_cnt = 0
//	select count(*)
//	into  :ln_cnt
//	from  comm140
//	where emp_no = :ag_empno  and
//			use_win  = 'w_pay070u'
//	using sqlxx ;
//	
//	if sqlxx.sqlcode <> 0  then
//		messagebox('1:연말정산관리 WINDOW 입력 ERROR' , '개인정보등록 WINDOW 입력 ERROR , 시스템개발팀으로 연락주세요.')
//		RETURN
//	END IF
//	
//	IF ln_cnt = 0  then
//		insert into comm140
//		values ( :ag_empno , 'w_pay070u' , '5', 'ADMIN' , :g_s_datetime, '' ,'' ,:g_s_ipaddr ,:g_s_macaddr )
//		using sqlxx ;
//		if sqlxx.sqlcode <> 0  then
//			messagebox('2:연말정산관리 WINDOW 입력 ERROR' , '개인정보등록 WINDOW 입력 ERROR , 시스템개발팀으로 연락주세요.')
//			RETURN
//		END IF
//	else
//		
//	end if
//	ln_cnt = 0
//	select count(*)
//	into  :ln_cnt
//	from  comm140
//	where emp_no = :ag_empno  and
//			use_win  = 'w_pay066u'
//	using sqlxx ;
//	
//	if sqlxx.sqlcode <> 0  then
//		messagebox('1:연말정산관리 WINDOW 입력 ERROR' , '개인정보등록 WINDOW 입력 ERROR , 시스템개발팀으로 연락주세요.')
//		RETURN
//	END IF
//	
//	IF ln_cnt = 0  then
//		insert into comm140
//		values ( :ag_empno , 'w_pay066u' , '5', 'ADMIN' , :g_s_datetime, '' ,'' ,:g_s_ipaddr ,:g_s_macaddr )
//		using sqlxx ;
//		if sqlxx.sqlcode <> 0  then
//			messagebox('2:연말정산관리 WINDOW 입력 ERROR' , '개인정보등록 WINDOW 입력 ERROR , 시스템개발팀으로 연락주세요.')
//			RETURN
//		END IF
//	else
//		
//	end if
//	ln_cnt = 0
//	select count(*)
//	into  :ln_cnt
//	from  comm140
//	where emp_no = :ag_empno  and
//			use_win  = 'w_pay069i'
//	using sqlxx ;
//	
//	if sqlxx.sqlcode <> 0  then
//		messagebox('1:연말정산관리 WINDOW 입력 ERROR' , '개인정보등록 WINDOW 입력 ERROR , 시스템개발팀으로 연락주세요.')
//		RETURN
//	END IF
//	
//	IF ln_cnt = 0  then
//		insert into comm140
//		values ( :ag_empno , 'w_pay069i' , '5', 'ADMIN' , :g_s_datetime, '' ,'' ,:g_s_ipaddr ,:g_s_macaddr )
//		using sqlxx ;
//		if sqlxx.sqlcode <> 0  then
//			messagebox('2:연말정산관리 WINDOW 입력 ERROR' , '개인정보등록 WINDOW 입력 ERROR , 시스템개발팀으로 연락주세요.')
//			RETURN
//		END IF
//	else
//		
//	end if
//	////////////////////////////////////////////////////////////////////////////////////
//	if sqlxx.sqlcode = 0 then
//		commit using sqlxx;
//	else
//		messagebox("확인",sqlxx.sqlerrtext)
//		rollback using sqlxx;
//	end if
//	disconnect using sqlxx;
//next
//destroy sqlxx 
end function

