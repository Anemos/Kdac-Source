$PBExportHeader$f_lookup_code.srf
$PBExportComments$코드 찾기, Lookup Code
global type f_lookup_code from function_object
end type

forward prototypes
global function integer f_lookup_code (string ps_colname, datawindow pdw, long pl_currentrow, string ps_value, window ps_window)
end prototypes

global function integer f_lookup_code (string ps_colname, datawindow pdw, long pl_currentrow, string ps_value, window ps_window);/********************************************************************
    용도: Lookup 화면 실행(코드찾기)											
    적용대상: 모든 윈도우
    parameters:   
						ps_colname 		- 컬럼 이름
						pdw 				- datawindow
						pl_currentrow  - datawindow의 현재 row
						ps_value			- datawindow 컬럼의 현재 데이터
						window 			- function을 call하는 window name
	return:  1	- 값이 변경된경우
	         0  - 변경이 안된경우
*********************************************************************/

string ls_return
str_lookup str_param
str_param.ls_value = ps_value
str_param.ls_col = ps_colname
choose case lower(ps_colname)
	case 'action'
		str_param.ls_dataobject = 'd_lookup_action'
	case 'attendcode'
		str_param.ls_dataobject = 'd_lookup_attendcode'
	case 'assettype'
		str_param.ls_dataobject = 'd_lookup_assettype'
	case 'certifname'
		str_param.ls_dataobject = 'd_lookup_certif'
	case 'cbmunit'
		str_param.ls_dataobject = 'd_lookup_cbmunit'
	case 'compcode', 'vendorcode'
		str_param.ls_dataobject = 'd_lookup_compcode'
	case 'comptype'
		str_param.ls_dataobject = 'd_lookup_comptype'
	case 'deptcode'
		str_param.ls_dataobject = 'd_lookup_deptcode'
	case 'equiptype'
		str_param.ls_dataobject = 'd_lookup_equiptype'
	case 'equipclass'
		str_param.ls_dataobject = 'd_lookup_equipclass'
	case 'invunit'
		str_param.ls_dataobject = 'd_lookup_invunit'
	case 'location'
		str_param.ls_dataobject = 'd_lookup_location'
	case 'laborcode'
		str_param.ls_dataobject = 'd_lookup_laborcode'
	case 'managercodea', 'managercodeb', 'opcode', 'empcode','authemp'
		str_param.ls_dataobject = 'd_lookup_empcode'
	case 'manualcode'
		str_param.ls_dataobject = 'd_lookup_manual'
	case 'parttypecode'
		str_param.ls_dataobject = 'd_lookup_parttype'
	case 'parttranstype'
		str_param.ls_dataobject = 'd_lookup_parttranstype'
	case 'partlocation'
		str_param.ls_dataobject = 'd_lookup_partlocation'
	case 'partcode'
		str_param.ls_dataobject = 'd_lookup_partcode'
	case 'paycode'
		str_param.ls_dataobject = 'd_lookup_payway'
	case 'postatuscode'
		str_param.ls_dataobject = 'd_lookup_postatus'		
	case 'purunit'
		str_param.ls_dataobject = 'd_lookup_purunit'
	case 'reason'
		str_param.ls_dataobject = 'd_lookup_reason'
	case 'runcode'
		str_param.ls_dataobject = 'd_lookup_runcode'
	case 'shipcode'
		str_param.ls_dataobject = 'd_lookup_shipway'
	case 'skillcode'
		str_param.ls_dataobject = 'd_lookup_skillcode'
	case 'schedtype'
		str_param.ls_dataobject = 'd_lookup_schedtype'
	case 'symptom'
		str_param.ls_dataobject = 'd_lookup_symptom'
	case 'spcode'
		str_param.ls_dataobject = 'd_lookup_sparepart'
	case 'safemancode'
		str_param.ls_dataobject = 'd_lookup_safemancode'
	case 'title'
		str_param.ls_dataobject = 'd_lookup_title'
	case 'team'
		str_param.ls_dataobject = 'd_lookup_team'
	case 'tbmunit'
		str_param.ls_dataobject = 'd_lookup_tbmunit'
	case 'wostatcode'
		str_param.ls_dataobject = 'd_lookup_workstatus'
	case 'worktypecode'
		str_param.ls_dataobject = 'd_lookup_worktype'
	case 'tooltype'
		str_param.ls_dataobject = 'd_lookup_tooltype'
	case 'toolcode'
		str_param.ls_dataobject = 'd_lookup_toolcode'
	case 'floorcode'   // 설비 위치 : 층
		str_param.ls_dataobject = 'd_lookup_equipfloor'
	case else
		return 0
end choose

str_param.ll_x = w_frame.getactivesheet().workspacex() + w_frame.getactivesheet().workspacewidth()/2 - 2761/2
str_param.ll_y = w_frame.getactivesheet().workspacey() + w_frame.getactivesheet().workspaceheight()/2 - 1808/2

openwithparm(w_lookup, str_param)

ls_return = Message.StringParm
if ls_return <> '' and not isnull(ls_return) then pdw.SetItem(pl_currentrow, ps_colname, ls_return)
pdw.AcceptText()

if ( ps_value = '' or isnull(ps_value) ) and ( ls_return <> '' and isnull(ls_return) ) then 
	return 1
elseif ps_value = ls_return or ls_return = '' or isnull(ls_return) then	
	return 0
else 
	return 1
end if

	

end function

