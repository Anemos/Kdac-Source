$PBExportHeader$f_pur041_setpur114f.srf
$PBExportComments$결재용 장기품목단가hitory(구분,dw)
global type f_pur041_setpur114f from function_object
end type

forward prototypes
global function integer f_pur041_setpur114f (string as_gubun, string as_wsrno, datawindow adw_1, ref string as_msg)
end prototypes

global function integer f_pur041_setpur114f (string as_gubun, string as_wsrno, datawindow adw_1, ref string as_msg);////구분별로 업체품목단가정보 pur114구조를 pur114f에 기록처리
long ll_row, ll_rcnt
//string ls_wsrno

dec {2} ld_xcost, ld_wcost, ld_wacost, ld_xcost2,ld_xcost3,ld_xcost4
dec {5} ld_ecost
string  ls_COMLTD, ls_VSRC,ls_DEPT,ls_VSRNO,ls_ITNO,ls_CHGDT,ls_wdate, ls_xcause, ls_sheet
string  ls_adjdt2,ls_adjdt3,ls_adjdt4
string  ls_EXTD
//2008.09.08
dec {2} ld_xcost5
String  ls_adjdt5, ls_code2, ls_code3,ls_code4, ls_code5, ls_codeall, ls_enddt

//2009.04.28
String ls_pmul, ls_mul, ls_cmul, ls_sogubdt
Dec{4} ld_pcost1, ld_pcost2, ld_ingot
//2009.06.18
String ls_pmul2, ls_mul2, ls_cmul2
Dec{4} ld_pcost3, ld_pcost4
String ls_pxunit1, ls_pxunit2, ls_pbxunit1, ls_pbxunit2	//2009.07.09

for ll_row = 1 to adw_1.rowcount() 
	ls_COMLTD =  adw_1.object.COMLTD[ll_row]
	ls_DEPT =  adw_1.object.DEPT[ll_row]
	ls_VSRNO =  adw_1.object.VSRNO[ll_row]
	ls_ITNO =  adw_1.object.ITNO[ll_row]
	ls_CHGDT =  adw_1.object.CHGDT[ll_row]
//	ls_WDATE =  adw_1.object.WDATE[ll_row]
//	ls_WSRNO =  adw_1.object.WSRNO[ll_row]
	ls_XCAUSE =  adw_1.object.XCAUSE[ll_row]
	ls_SHEET =  adw_1.object.SHEET[ll_row]
	ld_XCOST =  adw_1.object.XCOST[ll_row]
	ld_WCOST =  adw_1.object.WCOST[ll_row]
	ld_WACOST =  adw_1.object.WACOST[ll_row]
	ld_XCOST2 =  adw_1.object.XCOST2[ll_row]
	ls_ADJDT2 =  adw_1.object.ADJDT2[ll_row]
	ld_XCOST3 =  adw_1.object.XCOST3[ll_row]
	ls_ADJDT3 =  adw_1.object.ADJDT3[ll_row]
	ld_XCOST4 =  adw_1.object.XCOST4[ll_row]
	ls_ADJDT4 =  adw_1.object.ADJDT4[ll_row]
	ls_EXTD =  adw_1.object.EXTD[ll_row]
	//2008.09.08
	ld_XCOST5 =  adw_1.object.XCOST5[ll_row]
	ls_ADJDT5 =  adw_1.object.ADJDT5[ll_row]
	ls_code2  =  adw_1.object.CODE2[ll_row]
	ls_code3  =  adw_1.object.CODE3[ll_row]
	ls_code4  =  adw_1.object.CODE4[ll_row]
	ls_code5  =  adw_1.object.CODE5[ll_row]
	
	ls_codeALL  =  adw_1.object.CODEALL[ll_row]
	ls_ENDDT    =  adw_1.object.ENDDT[ll_row]
	
	//2009.04.28
	ls_pmul  	=  adw_1.object.pmul[ll_row]
	ls_mul  		=  adw_1.object.mul[ll_row]
	ls_cmul  	=  adw_1.object.cmul[ll_row]
	ld_pcost1  	=  adw_1.object.pcost1[ll_row]
	ld_pcost2  	=  adw_1.object.pcost2[ll_row]
	ld_ingot  	=  adw_1.object.ingot[ll_row]
	ls_sogubdt  =  adw_1.object.sogubdt[ll_row]
	//end : 2009.04.28
	
	//2009.06.18
	ls_pmul2  	=  adw_1.object.pmul2[ll_row]
	ls_mul2  	=  adw_1.object.mul2[ll_row]
	ls_cmul2  	=  adw_1.object.cmul2[ll_row]
	ld_pcost3  	=  adw_1.object.pcost3[ll_row]
	ld_pcost4  	=  adw_1.object.pcost4[ll_row]
	//end : 2009.06.18
	//2009.07.09
	ls_pxunit1 	=  adw_1.object.pxunit1[ll_row]
	ls_pxunit2  =  adw_1.object.pxunit2[ll_row]
	ls_pbxunit1 =  adw_1.object.pbxunit1[ll_row]
	ls_pbxunit2 =  adw_1.object.pbxunit2[ll_row]
	//end : 2009.07.09
	
//	ls_INPTID =  adw_1.object.INPTID[ll_row]
//	ls_INPTDT =  adw_1.object.INPTDT[ll_row]
//	ls_UPDTID =  adw_1.object.UPDTID[ll_row]
//	ls_UPDTDT =  adw_1.object.UPDTDT[ll_row]
//	ls_IPADDR =  adw_1.object.IPADDR[ll_row]
//	ls_MACADDR =  adw_1.object.MACADDR[ll_row]
//	ls_GUBUN =  adw_1.object.GUBUN[ll_row]
//	ls_STCD =  adw_1.object.STCD[ll_row]
	 
//	select coalesce(max(wsrno),'00000')
//	into :ls_wsrno
//	from pbpur.pur103f
//	where comltd = '01'
//	and  vsrc = :ls_vsrc
//	and  dept = :ls_dept
//	and  vsrno = :ls_vsrno
//	and  itno  = :ls_itno
//	and  chgdt = :g_s_date;
	//pur103f 그대로 넣기
	//ls_wsrno = string(long(ls_wsrno) + 1,'00000')
	  INSERT INTO PBPUR.PUR114F  
         (   COMLTD,          DEPT,             VSRNO,            ITNO,             CHGDT,            WDATE,   
				WSRNO,   			XCAUSE,   			SHEET,   			XCOST,   			WCOST,   			WACOST,   
				XCOST2,   			ADJDT2,   			XCOST3,   			ADJDT3,   			XCOST4,   			ADJDT4,   
				EXTD,   				INPTID,   			INPTDT,   			UPDTID,   			UPDTDT,   			IPADDR,   
				MACADDR,   			GUBUN,   			STCD  ,				ADJDT5,				XCOST5,			   CODE2,
				CODE3	 ,          CODE4,            CODE5 ,           CODEALL,          ENDDT,
				PMUL,					MUL,					CMUL,					PCOST1,				PCOST2,				INGOT,
				SOGUBDT,				PMUL2,				MUL2,					CMUL2,				PCOST3,				PCOST4,
				PXUNIT1,				PXUNIT2,		  		PBXUNIT1,			PBXUNIT2
			)  
     values
         (  :ls_COMLTD, 		:ls_DEPT,			:ls_VSRNO,			:ls_ITNO,			:ls_CHGDT,			:g_s_date,
				:as_WSRNO,			:ls_XCAUSE,			:ls_SHEET,			:ld_XCOST,			:ld_WCOST,			:ld_WACOST,
				:ld_XCOST2,			:ls_ADJDT2,			:ld_XCOST3,			:ls_ADJDT3,			:ld_XCOST4,			:ls_ADJDT4,
				:ls_EXTD,         :g_s_empno,       :g_s_date,         '',         	   '',              :g_s_IPADDR,  
				:g_s_MACADDR,     :as_gubun,           'A',				:ls_ADJDT5,			:ld_XCOST5,		   :ls_code2,
				:ls_code3,			:ls_code4,			:ls_code5,			:ls_codeall,		:ls_enddt,
				:ls_pmul,			:ls_mul,				:ls_cmul,			:ld_pcost1,			:ld_pcost2,			:ld_ingot,
				:ls_sogubdt,		:ls_pmul2,			:ls_mul2,			:ls_cmul2,			:ld_pcost3,			:ld_pcost4,
				:ls_pxunit1,		:ls_pxunit2,  		:ls_pbxunit1, 		:ls_pbxunit2
			)
		using sqlca;
	if SQLCA.SQLCODE <> 0  OR SQLCA.SQLNROWS <= 0 then
		messagebox('확인','승인요청용 장기품목단가History정보(PUR114F) 등록중, 오류발생! 급히 연락바랍니다!  ~r~n' + string(sqlca.sqlerrtext) ,Exclamation!)
		as_msg = '승인요청용 장기품목단가History정보(PUR114F) 등록중, 오류발생! [오류코드: ' + string(sqlca.sqlerrtext) +' ]'
		return -1
	end if
	////MESSAGEBOX('SQLCOCE',STRING(SQLCA.SQLCODE))		  
	//
next

return 0


end function

