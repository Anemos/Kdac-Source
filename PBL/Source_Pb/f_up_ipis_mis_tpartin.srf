$PBExportHeader$f_up_ipis_mis_tpartin.srf
$PBExportComments$여주인터페이스 내/외자 입고정보
global type f_up_ipis_mis_tpartin from function_object
end type

forward prototypes
global function integer f_up_ipis_mis_tpartin (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[])
end prototypes

global function integer f_up_ipis_mis_tpartin (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[]);string ls_chgcd, ls_xplant, ls_div, ls_itno, ls_tdte3, ls_tdte4, ls_tdte5, ls_id, ls_tidno
String ls_srno, ls_srno1, ls_srno2, ls_slno, ls_rqdiv, ls_error, ls_srce
String ls_vsrno, ls_vndr, ls_vndnm, ls_dept, ls_Jscd, ls_dudt, ls_dsag, ls_stcd, ls_cls, ls_purno, ls_comp, ls_invc, ls_blno, ls_curr
dec{0} ld_amt, ld_ohamt, ld_intamt
dec{1} ld_qty, ld_dcqt, ld_qty3, ld_qty4, ld_Uqty, ld_Rqty, ld_Sqty, ld_intQty, ld_Outqty
dec{2} ld_xcost, ld_costav, ld_fobamt
Dec{4}  ld_exch
integer li_cnt, li_index, li_Retcnt, li_rowcnt, ii, li_sqlcode

//datastore 선언
Datastore ds_Retr201, ds_trans_01
String ls_orgsql, ls_newsql

str_ipis_server lstr_ipis

//***AS400 접속여부 체크, 저녁8-아침8 인터페이스 저장
li_index = f_ipis_server_get_transaction(ag_str_ipis, 'X', 'Z')

If li_index = -1 then
	ag_message = "A/S400, INT 서버 연결에 실패하였습니다."
	return -1
End if

lstr_ipis = ag_str_ipis[li_index]

//*** 업무로직 적용
for li_cnt = 1 to ag_dwo.rowcount()
	ls_chgcd   = trim(ag_dwo.getitemstring(li_cnt,"Gubun"))
	ls_xplant  = trim(ag_dwo.getitemstring(li_cnt,"Areacode"))
	ls_div     = trim(ag_dwo.getitemstring(li_cnt,"Divisioncode"))
	ls_slno    = trim(ag_dwo.getitemstring(li_cnt,"Slno"))
	ls_tdte4   = trim(ag_dwo.getitemstring(li_cnt,"Incomedate"))
	ls_itno    = trim(ag_dwo.getitemstring(li_cnt,"Itemcode"))
	ls_srce    = trim(ag_dwo.getitemstring(li_cnt,"Itemsource"))
	ls_tidno   = trim(ag_dwo.getitemstring(li_cnt,"Tidno"))
	ls_id      = trim(ag_dwo.getitemstring(li_cnt,"LastEmp"))
	
	ls_tidno   = Mid(ls_tidno,4,12)
	
	if f_yeo_spacechk(ls_srce) = -1 then ls_srce = ''
	
	//외자품일경우
	if ls_srce = '01' then
		choose case ls_chgcd
		    case 'C'
				ds_Retr201 = create datastore                  			              
				ds_Retr201.dataobject = "d_invdomin_01"
				ds_Retr201.settransobject(lstr_ipis.t_sqlpis)
				ls_orgsql = ds_Retr201.getsqlselect()
				ls_newsql = ls_orgsql + &
								" AND ( ~"PBINV~".~"INV101~".~"SRCE~" = '01') AND ~"PBINV~".~"INV101~".~"CLS~" IN ('10', '20', '35') " 
				
				ds_Retr201.setsqlselect(ls_newsql)
			
				li_rowcnt = ds_Retr201.Retrieve(ls_slno, ls_xplant, ls_div, ls_itno)
				
				If li_rowcnt < 1 Then 
					ag_message = "납품정보가 조회된 데이타가 없음."
					Return -1 // 조회된 데이타가 없음.
				End if
				
				For ii=1 To li_rowcnt
					
					ls_srno  = ds_Retr201.object.inv201_srno[ii]
					ls_srno1 = ds_Retr201.object.inv201_srno1[ii]
					ls_srno2 = ds_Retr201.object.inv201_srno2[ii]
					
					// 입고정보 유무 check
					SELECT  count(*) 	 
					  INTO :li_Retcnt
					 FROM "PBINV"."INV401"  
					WHERE "PBINV"."INV401"."COMLTD" = '01'      AND "PBINV"."INV401"."SRNO" = :ls_srno   AND "PBINV"."INV401"."SLIPTYPE" = 'RF' AND
							"PBINV"."INV401"."SRNO1"  = :ls_srno1 AND "PBINV"."INV401"."SRNO2" = :ls_srno2 using lstr_ipis.t_sqlpis  ;
					if li_Retcnt > 0 then
						ag_message = "외자 입고정보가 존재함."
						return -1
					end if	
				
					//	입고수량 CHECK   
					ld_qty4 = ds_Retr201.object.inv201_dexqt[ii]   // 합격량
					ld_qty3 = ds_Retr201.object.inv201_ndexqt[ii]  // 불합격량
					ld_dcqt = ds_Retr201.object.inv201_dckqt[ii]   // 납품량
					ld_amt  = ds_Retr201.object.inv201_dcamt[ii]
					
					 // 입고단가 계산(= 금액 / 수량)
					ld_xcost  = truncate(ld_amt / ld_qty4,2)
					
					 // 외자 Overage 일때 
					ls_itno  = ds_Retr201.object.inv201_itno[ii]
					ls_purno = ds_Retr201.object.inv201_purno[ii]
					ls_comp  = ds_Retr201.object.inv201_comp[ii]
					ls_invc  = ds_Retr201.object.inv201_invc[ii]
					
					if ls_comp <> 'O' then  //전수품..
						if ld_qty4 > 0 and ld_qty3 > 0 then
							ag_message = "수량을 재확인하십시오"
							return -1
						end if
					else
						if (ld_qty4 + ld_qty3) <> ld_dcqt then
							ag_message = "합격량 + 불합격량 <> 납품량"
							return -1
						end if
					end if
					
					// 입고일자	check (월마감시/중간마감시)
					if f_yeo_Get_Ctlchk(ls_tdte4,' ') = -1 then
						ag_message = "마감일이 지나서 입력 불가"
						return -1
					End if
				 
					 // Window value => Db field
					 ls_xplant = ds_Retr201.object.inv201_xplant[ii]  // 지역
					 ls_div   = ds_Retr201.object.inv201_div[ii]     // 공장
					 ls_slno  = ds_Retr201.object.inv201_slno[ii]    // 전표번호
					 ls_itno  = ds_Retr201.object.inv201_itno[ii]    // 품번 
					 ls_cls   = ds_Retr201.object.inv101_cls[ii]     // 계정
					 ls_srce  = ds_Retr201.object.inv101_srce[ii]    // 구입선
					 ls_tdte3 = ds_Retr201.object.inv201_dckdt[ii]   // 납품일
					 ls_vndr  = ds_Retr201.object.inv201_vndr[ii]    // 업체코드
					 ls_blno  = ds_Retr201.object.inv201_blno[ii]    // b/l no
					 ls_purno = ds_Retr201.object.inv201_purno[ii]   // 발주번호
					 ld_exch  = ds_Retr201.object.inv201_exch[ii]    // 환율
					 ls_curr   = ds_Retr201.object.inv201_curr[ii]    // 통화단위 
					 ld_fobamt = ds_Retr201.object.inv201_fobamt[ii]
					 
					 // 입고정보 생성
					if ld_qty3 = ld_dcqt then       // 전수불합격일경우
						 li_sqlcode = f_inv401_rfss_insert(ls_srno,ls_srno1,ls_srno2,ls_xplant,ls_div,ls_itno,ls_cls,ld_qty4,ld_qty3, &
							ld_dcqt,ld_xcost,ld_amt,ls_tdte3,ls_tdte4,ls_slno,ld_exch,ls_curr,ls_blno,ls_purno,ls_vndr,ls_tidno, ls_id, g_s_date, ls_error, ld_fobamt)
						if li_sqlcode = -1 then
							ag_message = "전수불합격일경우 Trans & Balane 생성 에러"
							Return -1
						End if
						
					else                            //합격일경우
						li_sqlcode = f_inv401_rf_insert(ls_srno,ls_srno1,ls_srno2,ls_xplant,ls_div,ls_itno,ls_cls,ld_qty4,ld_qty3, &
							ld_dcqt,ld_xcost,ld_amt,ls_tdte3,ls_tdte4,ls_slno,ld_exch,ls_curr,ls_blno,ls_purno,ls_vndr,ls_tidno, ls_id, g_s_date,ls_error, ld_fobamt)
						if li_sqlcode = -1 then
							ag_message = "전수합격일경우 Trans & Balane 생성 에러"
							Return -1
						End if
						
					end if
					
					UPDATE "PBINV"."INV201" 
					  SET "COMP" = 'C'
					WHERE "COMLTD" = '01' AND "SRNO" = :ls_srno AND	"SRNO1" = :ls_srno1 AND "SRNO2" = :ls_srno2  Using lstr_ipis.t_sqlpis;
					
					if lstr_ipis.t_sqlpis.sqlnrows <> 1 then
						f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tpartin',&
					   lstr_ipis.t_sqlpis.sqlerrtext,'외자납품 상태정보 Update error', g_s_empno, g_s_ipaddr, g_s_macaddr)
						ag_message = "외자납품 상태정보 Update error"
						return -1
					end if					
					
				Next
				destroy ds_Retr201
				
			 Case 'D'
				ds_trans_01 = create datastore                  			              
				ds_trans_01.dataobject = "d_inv_out_01"
				ds_trans_01.settransobject(lstr_ipis.t_sqlpis)
				
				li_rowcnt = ds_trans_01.Retrieve('RF', ls_xplant, ls_div, ls_itno, ls_tidno)
				
				If li_rowcnt < 1 Then
					ag_message = "외자입고 삭제할 데이타가 없음"
					Return -1 
				End if
				
				// 입고일자	check (월마감시/중간마감시)
				if f_yeo_Get_Ctlchk(ls_tdte4,' ') = -1 then
					ag_message = "마감일이 지나서 입력 불가"
					return -1
				End if
				
				For ii=1 To li_rowcnt
										
					ls_srno  = ds_trans_01.object.srno[ii]
					ls_srno1 = ds_trans_01.object.srno1[ii]
					ls_srno2 = ds_trans_01.object.srno2[ii]	
					ld_qty4  = ds_trans_01.object.tqty4[ii]      //수량
					ld_amt   = ds_trans_01.object.tramt[ii]      //금액
			
					SELECT "OHUQTY", "OHRQTY", "OHSQTY", "OHAMT", "COSTAV", "INTQTY", "INTAMT" 
					 INTO :ld_uQty, :ld_rQty, :ld_sQty, :ld_ohAmt, :ld_CostAv, :ld_intQty, :ld_intAmt
					  FROM "PBINV"."INV101"
					WHERE "COMLTD" = '01' AND "XPLANT" = :ls_xplant AND "DIV" = :ls_div AND "ITNO" = :ls_Itno	Using	lstr_ipis.t_sqlpis ;
					
					If lstr_ipis.t_sqlpis.SQLCode <> 0 Then 
						ag_message = "품목재고 테이블 조회 불가"
						Return -1
					End If
					
					// 입고수량(+) & 현재고수량 (+)
					ld_intqty = ld_intqty - ld_qty4
					ld_uqty   = ld_uqty   - ld_qty4
					
					if ld_uqty < 0 then
						ag_message = "품목재고 (-)발생, 삭제할 수 없음!"
						Return -1			
					End if
					
					// 입고금액(+) & 현재고금액 (+)
					ld_intamt = ld_intamt - ld_amt
					ld_ohamt  = ld_ohamt  - ld_amt
					
					// 이동평균단가 계산
					if ld_ohamt > 0 and ( ld_Uqty + ld_Rqty + ld_Sqty ) > 0 then
						ld_costav = truncate(ld_ohamt / (ld_Uqty + ld_Rqty + ld_Sqty ),2)
					end if					
											
					UPDATE "PBINV"."INV101"
						SET "OHAMT"  = :ld_ohAmt,  "OHUQTY" = :ld_uQty,   
						    "INTQTY" = :ld_intQty, "INTAMT" = :ld_intAmt, 
							 "COSTAV" = :ld_costav, "ILUDT"  = :g_s_date,
							 "UPDTID" = :ls_id,     "UPDTDT" = :g_s_date
					WHERE "COMLTD" = '01' AND "XPLANT" = :ls_xplant AND "DIV" = :ls_div AND "ITNO" = :ls_Itno	Using	lstr_ipis.t_sqlpis ;
					
					If lstr_ipis.t_sqlpis.sqlnrows <> 1 Then
						f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tpartin',&
					   lstr_ipis.t_sqlpis.sqlerrtext,'INV101 Update error', g_s_empno, g_s_ipaddr, g_s_macaddr)
						ag_message = "INV101 Update error"
						Return -1
					End If
					
					// trans 삭제
					DELETE FROM "PBINV"."INV401" 
					WHERE "COMLTD" = '01'       AND "SLIPTYPE" = 'RF' AND "SRNO" = :ls_srno AND 
						  "SRNO1"  = :ls_srno1 AND "SRNO2"    = :ls_srno2  using lstr_ipis.t_sqlpis ;
					
					If lstr_ipis.t_sqlpis.SQLCode <> 0 Then
						f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tpartin',&
					   lstr_ipis.t_sqlpis.sqlerrtext,'품목재고 테이블 Update 실패', g_s_empno, g_s_ipaddr, g_s_macaddr)
						ag_message = "품목재고 테이블 Update 실패"
						Return -1
					End If	
					
					UPDATE "PBINV"."INV201" 
					  SET "COMP" = ' '
					WHERE "COMLTD" = '01' AND "SRNO" = :ls_srno AND	"SRNO1" = :ls_srno1 AND "SRNO2" = :ls_srno2  Using lstr_ipis.t_sqlpis;
					
					if lstr_ipis.t_sqlpis.sqlnrows <> 1 then
						f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tpartin',&
					   lstr_ipis.t_sqlpis.sqlerrtext,'외자납품 상태정보 Update error', g_s_empno, g_s_ipaddr, g_s_macaddr)
						ag_message = "외자납품 상태정보 Update error"
						return -1
					end if				
						
				Next	
				
				destroy ds_trans_01

			 case else
			  ag_message = "데이타구분 CUD에 해당하지 않습니다."
			  return -1	
		end choose
		
	else 
	// 내자품일경우
	   choose case ls_chgcd
		    case 'C'
				ds_Retr201 = create datastore                  			              
				ds_Retr201.dataobject = "d_invdomin_01"
				ds_Retr201.settransobject(lstr_ipis.t_sqlpis)
				ls_orgsql = ds_Retr201.getsqlselect()
				ls_newsql = ls_orgsql + &
								" AND ( ~"PBINV~".~"INV101~".~"SRCE~" <> '01') AND ~"PBINV~".~"INV101~".~"CLS~" IN ('10', '20', '24', '30', '35', '40', '50') " 
				
				ds_Retr201.setsqlselect(ls_newsql)
			
				li_rowcnt = ds_Retr201.Retrieve(ls_slno, ls_xplant, ls_div, ls_itno)
				
				If li_rowcnt < 1 Then 
					ag_message = "납품DB에 조회할 데이터가 없음"
					Return -1
				End if
				
				For ii=1 To li_rowcnt
					ls_srno  = ds_Retr201.object.inv201_srno[ii]
					ls_srno1 = ds_Retr201.object.inv201_srno1[ii]
					ls_srno2 = ds_Retr201.object.inv201_srno2[ii]
					
					// 입고정보 유무 check
					SELECT  count(*) 	 
					  INTO :li_Retcnt
					 FROM "PBINV"."INV401"  
					WHERE "PBINV"."INV401"."COMLTD" = '01'      AND "PBINV"."INV401"."SRNO" = :ls_srno   AND "PBINV"."INV401"."SLIPTYPE" = 'RP' AND
							"PBINV"."INV401"."SRNO1"  = :ls_srno1 AND "PBINV"."INV401"."SRNO2" = :ls_srno2 Using lstr_ipis.t_sqlpis;
							
					If li_Retcnt > 0 then
						ag_message = "수불정보 기 입력"
						return -1
					end if	
				
					ls_vsrno  = ds_Retr201.object.inv201_vndr[ii]
					ls_vndr   = f_yeo_vndr_pur(ls_vsrno,'S','D')
					ls_jscd   = f_yeo_vndr_jscd1('Y',ls_vsrno)
					ls_tdte5  = ds_Retr201.object.inv201_inptdt[1]
				
					// 입고일자	check (월마감시/중간마감시)
					if f_yeo_Get_Ctlchk(ls_tdte4,ls_jscd) = -1 then
						ag_message = "마감일이 지나서는 입력 하였음."
						Return -1                              
					end if
				
					//	입고수량 CHECK   
					ld_qty4 = ds_Retr201.object.inv201_dexqt[ii]   // 합격량
					ld_qty3 = ds_Retr201.object.inv201_ndexqt[ii]  // 불합격량
					ld_dcqt = ds_Retr201.object.inv201_dckqt[ii]   // 납품량
					
					if ld_qty4 >= 0 then
						if ld_dcqt <> (ld_qty4 + ld_qty3) then     
							ag_message = "납품량 <> 입고량 + 불합격량"
							return -1   
						End if
					else
						ag_message = "합격량 0보다 작음"
						Return -1                                  
					end if
			 
					SELECT "PBPUR"."PUR402"."XCOST"  
					   INTO :ld_xcost     // 발주단가
					  FROM "PBPUR"."PUR402"  
					WHERE "PBPUR"."PUR402"."COMLTD" = '01' AND "PBPUR"."PUR402"."SRNO" = :ls_srno AND 
						   "PBPUR"."PUR402"."SRNO1"  = :ls_srno1 using lstr_ipis.t_sqlpis;
					 
					 // Window value => Db field
					 ls_xplant = ds_Retr201.object.inv201_xplant[ii]   // 지역
					 ls_rqdiv = Trim(ds_Retr201.object.inv201_drwcd[ii])   // 납품지역
					 ls_div   = ds_Retr201.object.inv201_div[ii]      // 공장
					 ls_itno  = ds_Retr201.object.inv201_itno[ii]     // 품번 
					 ls_vsrno = ds_Retr201.object.inv201_vndr[ii]     // 업체코드
					 ls_tdte5 = ds_Retr201.object.inv201_inptdt[ii]   // 입력납품일
					 ld_qty3  = ds_Retr201.object.inv201_ndexqt[ii]   // 불합격량
					 ld_qty4  = ds_Retr201.object.inv201_dexqt[ii]    // 합격량
					 ld_dcqt  = ds_Retr201.object.inv201_dckqt[ii]    // 납품량
					 ls_slno  = ds_Retr201.object.inv201_slno[ii]     // 전표번호
					 ls_dudt  = ds_Retr201.object.inv201_dckdt[ii]    // 납품일 
					 ls_dsag  = ds_Retr201.object.inv201_dsag[ii]     // 고객사 유상
					 ld_amt   = truncate(ld_xcost * ld_qty4,0)        // 금액 = 발주단가 * 합격량
					 
					 li_sqlcode = f_inv401_dinsert(ls_srno, ls_srno1, ls_srno2, ls_xplant, ls_div,  ls_itno, ls_vsrno, &
												  ld_qty4, ld_dcqt,  ld_amt, ls_tdte4, ls_dudt, ls_tdte5, ls_slno, ls_rqdiv, ls_dsag, ls_tidno, ls_id, g_s_date, ls_error)
					if li_sqlcode = 1 then
						
						// 미입고량 = 0 이면 발주상태 'C'
						if f_yeo_get_invpqty(ls_srno,ls_srno1) - f_yeo_get_invqty1(ls_srno,ls_srno1) = 0 then   
							ls_stcd = 'C' 
						else
							ls_stcd = ' '
						end if
						
						UPDATE "PBPUR"."PUR402"  
							SET "STCD"    = :ls_stcd
						WHERE ( "PBPUR"."PUR402"."COMLTD" = '01' ) AND ( "PBPUR"."PUR402"."SRNO" = :ls_srno) AND
								( "PBPUR"."PUR402"."SRNO1"  = :ls_srno1) using lstr_ipis.t_sqlpis;
								
						if lstr_ipis.t_sqlpis.sqlnrows <> 1 then
							f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tpartin',&
					      lstr_ipis.t_sqlpis.sqlerrtext,'품목 상세,수불정보 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
							ag_message = "발주 DB(PB402) DATA Upload ERROR"
							return -1
						end if
						
					else
						f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tpartin',&
					   lstr_ipis.t_sqlpis.sqlerrtext,'품목 상세,수불정보 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
						ag_message = "입고정보 생성 실패"
						return -1
					end if
					
				Next				
				destroy ds_Retr201
				
			case 'D'
				//입고정보 삭제시
				ds_trans_01 = create datastore                  			              
				ds_trans_01.dataobject = "d_inv_out_01"
				ds_trans_01.settransobject(lstr_ipis.t_sqlpis)
				
				li_Rowcnt = ds_trans_01.Retrieve('RP', ls_xplant, ls_div, ls_itno, ls_srno)
				
				If li_Rowcnt < 1 Then
					ag_message = "Tran_DB 삭제할 데이타가 존재하지 않음"
					Return -1 
				End if
				
				For ii=1 To li_Rowcnt
					
					// 입고일자	check (월마감시/중간마감시)
					ls_vsrno = ds_trans_01.object.vsrno[ii]
					ls_jscd = f_yeo_vndr_jscd1('Y',ls_vsrno)
					
					if f_yeo_Get_Ctlchk(ls_tdte4, ls_jscd) = -1 then
						ag_message = "마감일이 지난 데이터는 삭제 불가"
						Return -1
					End If
					
					ls_srno  = ds_trans_01.object.srno[ii]
					ls_srno1 = ds_trans_01.object.srno1[ii]
					ls_srno2 = ds_trans_01.object.srno2[ii]	
					ld_qty4  = ds_trans_01.object.tqty4[ii]      //수량
					ld_amt   = ds_trans_01.object.tramt[ii]      //금액
					
					SELECT "OHUQTY", "OHRQTY", "OHSQTY", "OHAMT", "INTQTY", "INTAMT" , "OUTQTY", "CLS", "COSTAV"
					  INTO :ld_Uqty, :ld_Rqty, :ld_Sqty, :ld_ohAmt, :ld_intQty, :ld_intAmt, :ld_Outqty, :ls_cls, :ld_costav
					FROM "PBINV"."INV101"
					WHERE "COMLTD" = '01' AND "XPLANT" = :ls_xplant AND "DIV" = :ls_div AND "ITNO" = :ls_Itno	Using	lstr_ipis.t_sqlpis;
									
					If ld_uqty <  ld_qty4 Then
						ag_message = "현재고수량 < 삭제수량 삭제불가"
						Return -1
					End If
						
					// 거래명세표 상태코드 Update
					UPDATE "PBPUR"."PUR507"  
					 SET  "BQTY" = 0, "STCD" = ' '
					WHERE ( "PBPUR"."PUR507"."COMLTD" = '01' )     AND ( "PBPUR"."PUR507"."VSRNO" = :ls_vsrno ) AND
							( "PBPUR"."PUR507"."SLNO"  = :ls_slno )  AND ( "PBPUR"."PUR507"."SRNO"  = :ls_srno  ) AND 
							( "PBPUR"."PUR507"."SRNO1" = :ls_srno1 ) using lstr_ipis.t_sqlpis ;
					
					if lstr_ipis.t_sqlpis.sqlnrows <> 1 then
						f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tpartin',&
					   lstr_ipis.t_sqlpis.sqlerrtext,'거래명세표 정보 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
						ag_message = "거래명세표 Update 실패"
						Return -1
					end if
							
					// 입고수량(+) & 현재고수량 (+)
					ld_intqty = ld_intqty - ld_qty4
					ld_Uqty   = ld_Uqty   - ld_qty4
					
					// 입고금액(+) & 현재고금액 (+)
					ld_intamt   = ld_intamt - ld_amt
					ld_ohamt    = ld_ohamt  - ld_amt
					
					// 외주가공품 금액미관리
					if (ls_cls = '50' and ls_srce = '04') then
						ld_intamt = 0
						ld_ohamt  = 0
						ld_outqty = ld_outqty - ld_qty4
						ld_Uqty   = 0
					end if
					
					// 이동평균단가 계산
					if ld_ohamt > 0 and ( ld_Uqty + ld_Rqty + ld_Sqty ) > 0 then
						ld_costav = truncate(ld_ohamt / (ld_Uqty + ld_Rqty + ld_Sqty ),2)
					end if
					
					// 품목재고 Update
					UPDATE "PBINV"."INV101"
						SET "OHUQTY" = :ld_Uqty,   "OHAMT"  = :ld_ohAmt,   "INTQTY" = :ld_intQty,  "INTAMT"  = :ld_intAmt, 
							 "OUTQTY" = :ld_OutQty, "COSTAV" = :ld_costav,  "ILUDT"  = :g_s_date,
							 "UPDTID" = :ls_id,     "UPDTDT" = :g_s_date
					WHERE "COMLTD" = '01' AND "XPLANT" = :ls_xplant AND "DIV" = :ls_div AND "ITNO" = :ls_Itno	Using	lstr_ipis.t_sqlpis ;
					
					If lstr_ipis.t_sqlpis.sqlnrows <> 1 Then
						ag_message = "INV101 Update error"
						Return -1
					End If
					
					// 발주 Detail 상태코드 Update		
					SELECT "STCD"   INTO :ls_stcd
					  FROM "PBPUR"."PUR402"
					WHERE "COMLTD" = '01' AND "SRNO" = :ls_srno AND "SRNO1" = :ls_srno1 Using	lstr_ipis.t_sqlpis ;
					
					if ls_stcd = 'C' then
						
						UPDATE "PBPUR"."PUR402"  
							SET "STCD" = ' '
						WHERE  "COMLTD" = '01' AND "SRNO" = :ls_srno AND "SRNO1"  = :ls_srno1  using lstr_ipis.t_sqlpis;
						
						If lstr_ipis.t_sqlpis.sqlnrows <> 1 Then
							f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tpartin',&
					      lstr_ipis.t_sqlpis.sqlerrtext,'발주정보 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
							ag_message = "발주 Detail 상태코드 Update error"
							Return -1
						End If
					end if
					
					// trans 삭제
					DELETE FROM "PBINV"."INV401" 
					WHERE "COMLTD" = '01'       AND "SLIPTYPE" = 'RP' AND "SRNO" = :ls_srno AND 
						  "SRNO1"  = :ls_srno1   AND "SRNO2"    = :ls_srno2  using lstr_ipis.t_sqlpis;
						  
					If lstr_ipis.t_sqlpis.sqlcode <> 0 Then
						f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_tpartin',&
					   lstr_ipis.t_sqlpis.sqlerrtext,'수불정보 delete error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
						ag_message = "수불정보 삭제 에러"
						Return -1
					End If	  
						  
				Next	
				
				destroy ds_trans_01
				
			case else
			
			  ag_message = "데이타구분 CUD에 해당하지 않습니다."
			  return -1	
		end choose
		
	End if
next

return 0
end function

