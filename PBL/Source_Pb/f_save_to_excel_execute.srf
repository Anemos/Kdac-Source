$PBExportHeader$f_save_to_excel_execute.srf
$PBExportComments$DataWindow전체를 Excel File로 저장후 실행
global type f_save_to_excel_execute from function_object
end type

forward prototypes
global function integer f_save_to_excel_execute (datawindow dw_excel, string fs_gubun)
end prototypes

global function integer f_save_to_excel_execute (datawindow dw_excel, string fs_gubun);////////////////////////////////////////////////////////////////////////////
// * DataWindow를 엑셀파일로 저장 * ( Header(한글), Computed Field 포함 )
////////////////////////////////////////////////////////////////////////////

String	l_s_docname, l_s_named, ls_Chk 
Long 	l_n_value 
Integer li_Chk 

//
l_n_value = GetFileSaveName("저장 하기", l_s_docname, l_s_named, "xls", "Excel files (*.xls), *.xls")
if 	l_n_value = 1 then
	if 	fs_gubun = '1' then // HTML 로 저장
		li_Chk = dw_excel.saveas(l_s_docname, HtmlTable!, true) 
	elseif fs_gubun = '2' then // ASCII 로 저장
		li_Chk = dw_excel.saveasascii(l_s_docname)
	end if
	If 	li_Chk = -1 Then 
		messagebox("확 인", "파일저장 오류 입니다.",StopSign!) 
		Return -1
	End If 
else
	Return -1
end if

OleObject     myOleObject
int           i_Result
String        excel_title

myOleObject = Create OleObject //ole 오브젝트 생성

i_Result = myOleObject.ConnectToNewObject( "excel.application" )
If 	i_Result <> 0 Then
	Destroy myOleObject
	FileDelete( l_s_DocName )
	MessageBox("확인", "Excel Program이 설치되어있지 않습니다.", Exclamation!)
	Return -1
End If
// 엑셀에 연결
// excel_title = myOleObject.Application.Caption

myOleObject.WorkBooks.Open(l_s_docname)
myOleObject.Application.Visible = True
myOleObject.WindowState = 3 
// 엑셀윈도우의 상태 지정 1-normal, 2-min, 3-max

myoleobject.DisConnectObject() //연결종료
Destroy myoleobject //오브젝트 제거

return 0
//

end function

