$PBExportHeader$f_get_accslipcrt.srf
$PBExportComments$전표내역 생성
global type f_get_accslipcrt from function_object
end type

forward prototypes
global subroutine f_get_accslipcrt (string a_compy, string a_wkcd, string a_acdate, decimal a_slipno, decimal a_cdno, decimal a_pageno, decimal a_serno, string a_div, string a_deci, string a_accode, decimal a_amt, string a_opaccode, string a_dept, string a_cucodegb, string a_cucode, string a_user, string a_manage1, string a_manage2, string a_befdt, decimal a_befamt, string a_fromdt, string a_todt, decimal a_dtcnt, decimal a_origamt, decimal a_rate, decimal a_qty, string a_utcode, decimal a_utprice, decimal a_fornamt, string a_fornut, decimal a_exrate, string a_bankcode, string a_pdcd, string a_summary, string a_empno)
end prototypes

global subroutine f_get_accslipcrt (string a_compy, string a_wkcd, string a_acdate, decimal a_slipno, decimal a_cdno, decimal a_pageno, decimal a_serno, string a_div, string a_deci, string a_accode, decimal a_amt, string a_opaccode, string a_dept, string a_cucodegb, string a_cucode, string a_user, string a_manage1, string a_manage2, string a_befdt, decimal a_befamt, string a_fromdt, string a_todt, decimal a_dtcnt, decimal a_origamt, decimal a_rate, decimal a_qty, string a_utcode, decimal a_utprice, decimal a_fornamt, string a_fornut, decimal a_exrate, string a_bankcode, string a_pdcd, string a_summary, string a_empno);string l_s_drcr

if a_cdno > 50 then
	l_s_drcr ='2'
else
	l_s_drcr ='1'
end if 

INSERT INTO "PBACC"."ACC100"  
			( "COMLTD","SLAREA","SLACDATE","SLSLIPNO","SLCDNO","SLPAGENO","SLSERNO",   
	  		  "SLINPUTDT","SLDIV","SLSLIPTYPE","SLSLIPCM","SLDECISION","SLEMPNO",   
	        "SLACCODE","SLAMT","SLEXAMT","SLDRCR","SLOPACCODE","SLDEPT", "SLCUCODEGB",   
	        "SLCUCODE","SLUSER","SLMANAGE1","SLMANAGE2","SLBEFDT","SLBEFAMT",   
	        "SLFROMDT","SLTODT","SLDTCNT","SLORIGAMT","SLRATE","SLQTY","SLUTCODE",   
	        "SLUTPRICE","SLFORNAMT","SLFORNUT","SLEXRATE","SLBANKCODE","SLPDCD","SLSUMMARY",   
	        "SLOFFSET","SLOSACDT","SLOSSLIPNO","SLOSCDNO","SLOSPAGENO",   
	        "SLOSSERNO","SLOSSTS","SLOSREMK","SLOSREMF","EXTD","INPTDT","INPTID","UPDTDT","UPDTID","IPADDR","MACADDR")  
	 	VALUES ( :a_compy, :a_wkcd, :a_acdate, :a_slipno, :a_cdno, :a_pageno, :a_serno,   
	        :g_s_date, :a_div, ' ', '1',:a_deci, :a_empno,
	        :a_accode, :a_amt, 0, :l_s_drcr, :a_opaccode, :a_dept, :a_cucodegb,
	        :a_cucode, :a_user, :a_manage1,    :a_manage2,  :a_befdt, :a_befamt,   
	        :a_fromdt, :a_todt, :a_dtcnt,  :a_origamt, :a_rate , :a_qty, :a_utcode,   
	        :a_utprice, :a_fornamt, :a_fornut, :a_exrate, :a_bankcode, :a_pdcd, :a_summary, 
	        ' ', ' ', 0, 0, 0,   
	        0, ' ', 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ' ) using sqlca ;
if sqlca.sqlcode <> 0 then
	rollback using sqlca;
else
	commit using sqlca;	
end if
 
 
end subroutine

