$PBExportHeader$f_chk_bom_bpm.srf
$PBExportComments$BOM Looping Check ÇÔ¼ö
global type f_chk_bom_bpm from function_object
end type

forward prototypes
global function integer f_chk_bom_bpm (string a_year, string a_revno, string a_plant, string a_div, string a_pitno, string a_citno, string a_applydate)
end prototypes

global function integer f_chk_bom_bpm (string a_year, string a_revno, string a_plant, string a_div, string a_pitno, string a_citno, string a_applydate);string 	ls_pitno,ls_citno,ls_itno[50,300],ls_chkit
integer 	i = 0,j = 0,k = 0,p = 0,ln_chk = 0,ln_cnt

ls_chkit = trim(a_citno)
ls_pitno = trim(a_pitno)

select 	count(*) into :ln_cnt from "PBBPM"."BPM503"
	where "PBBPM"."BPM503"."XYEAR" 	= :a_year 	and
			"PBBPM"."BPM503"."REVNO" 	= :a_revno 	and
			"PBBPM"."BPM503"."XPLANT" 	= :a_plant 	and
         "PBBPM"."BPM503"."DIV" 		= :a_div 	and 
			"PBBPM"."BPM503"."ITNO" 	= :ls_chkit and
			"PBBPM"."BPM503"."CLS" 		IN ('10','20','40','50') 
using sqlca;

if ln_cnt 	= 0  then
	ln_chk 	= 1
   return 	ln_chk
end if


declare bomchk_cur cursor for 
	select 	"PBBPM"."BPM504"."PPITN" from "PBBPM"."BPM504"
     where 	"PBBPM"."BPM504"."XYEAR" = :a_year	and
	  			"PBBPM"."BPM504"."REVNO" = :a_revno	and
	  			"PBBPM"."BPM504"."PCITN" = :ls_pitno	and
           	"PBBPM"."BPM504"."PDVSN" = :a_div    	and  
			  	"PBBPM"."BPM504"."PLANT" = :a_plant 	and  
         ((	trim("PBBPM"."BPM504"."PEDTE") =  ''  	and "PBBPM"."BPM504"."PEDTM" <= :a_applydate ) or  
			(  trim("PBBPM"."BPM504"."PEDTE") <> ''  	and "PBBPM"."BPM504"."PEDTM" <= :a_applydate  and "PBBPM"."BPM504"."PEDTE" >= :a_applydate ))
  	using SQLCA ;

open bomchk_cur ;
  do while true
    fetch bomchk_cur into :ls_citno ;
    if sqlca.sqlcode <> 0 then
		exit
	 end if 
	 i = 1
    k = k + 1
    ls_itno[i,k] 		= trim(ls_citno)
	 if ls_itno[i,k] 	= ls_chkit then
		 close bomchk_cur ;
       ln_chk = 1
       return ln_chk
    end if
  loop
close bomchk_cur ;
if k < 1 then
	close bomchk_cur ;
	ln_chk = 0 
	return ln_chk
end if

for i = 1 to 50
  for j = 1 to k
      ls_pitno = ls_itno[i,j]
		open bomchk_cur ;
      do while true
        fetch bomchk_cur into: ls_citno;
		  if sqlca.sqlcode <> 0 then			  
           exit
        end if
        p = p + 1
        ls_itno[i+1,p]		= trim(ls_citno)
        if ls_itno[i+1,p] 	= ls_chkit then
           close bomchk_cur ;
			  ln_chk = 1
           return ln_chk
        end if
      loop
		close bomchk_cur;
  next 
  if p = 0 then
	  return ln_chk
  end if
  k	=	p
  p 	= 	0
next
return	ln_chk
 
end function

