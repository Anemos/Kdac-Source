$PBExportHeader$f_up_ipis_mis_yinv002temp.srf
$PBExportComments$여주인터페이스 기본정보
global type f_up_ipis_mis_yinv002temp from function_object
end type

forward prototypes
global function integer f_up_ipis_mis_yinv002temp (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[])
end prototypes

global function integer f_up_ipis_mis_yinv002temp (ref string ag_message, datawindow ag_dwo, any ag_str_ipis[]);string ls_chgcd, ls_itno, ls_id
string ls_itnm, ls_spec, ls_xunit, ls_xtype, ls_rvno, ls_rrogb
integer	li_cnt, li_index, li_Retcnt
str_ipis_server lstr_ipis

//***AS400 접속여부 체크, 저녁8-아침8 인터페이스 저장
li_index = f_ipis_server_get_transaction(ag_str_ipis, 'X', 'Z')

If li_index = -1 then
	ag_message = "A/S400, INT 서버 연결에 실패하였습니다."
	return -1
End if

lstr_ipis = ag_str_ipis[li_index]

//*** 업무로직 적용
for li_cnt = 1 to ag_dwo.rowcount()
	ls_chgcd  = trim(ag_dwo.getitemstring(li_cnt,"Chgcd"))
	ls_itno   = trim(ag_dwo.getitemstring(li_cnt,"Itno"))
	ls_itnm   = trim(ag_dwo.getitemstring(li_cnt,"Itnm"))
	ls_spec   = trim(ag_dwo.getitemstring(li_cnt,"Spec"))
	ls_xunit  = trim(ag_dwo.getitemstring(li_cnt,"Xunit"))
	ls_xtype  = trim(ag_dwo.getitemstring(li_cnt,"Xtype"))
	ls_rvno   = trim(ag_dwo.getitemstring(li_cnt,"Rvno"))
	ls_rrogb  = trim(ag_dwo.getitemstring(li_cnt,"Rrogb"))
	ls_id     = trim(ag_dwo.getitemstring(li_cnt,"Inptid"))	
	
	if f_yeo_spacechk(ls_itnm)  = -1  then
		ag_message = "품명 필수입력사항"
		return -1
	end if
	if f_yeo_spacechk(ls_spec)  = -1  then 
		ag_message = "스펙 필수입력사항"
		return -1
	end if
	if f_yeo_spacechk(ls_xunit) = -1  then 
		ag_message = "단위 필수입력사항"
		return -1
	end if
	if f_yeo_spacechk(ls_xtype) = -1  then 
		ag_message = "타입 필수입력사항"
		return -1
	end if
	if f_yeo_spacechk(ls_rvno)  = -1  then ls_rvno = ''
	if f_yeo_spacechk(ls_rrogb) = -1  then ls_rrogb = ''	
	
	choose case ls_chgcd
		case 'C'
			//*** item Master Check
			SELECT Count(itno)                                             
			  INTO :li_retcnt                                    
			FROM PBINV.INV002                                                             
			WHERE COMLTD = '01' AND ITNO   = :ls_itno Using lstr_ipis.t_sqlpis;
																												  
			If li_retcnt > 0 then                                                          
				ag_message = "품목기본정보 기 존재"
				return -1                                                           
			End if			  
				
			INSERT INTO "PBINV"."INV002" (                                                      
				"COMLTD", "ITNO",    "ITNM",  "SPEC",  "XUNIT",    "MAKER",    "GUBUN", "XPLAN",   "RVNO",  "XTYPE",
 				"ITNO1",  "LOLEVEL", "RROGB", "FIXGB", "BKDESN01", "BKDESN02", "XSTOP", "INL",     "FST",    "SND",
 				"THD",    "EXTD",    "INPTID","INPTDT","UPDTID",   "UPDTDT",   "IPADDR","MACADDR")                                                            
			 VALUES                                                                       
				('01',    :ls_itno, :ls_itnm, :ls_spec, :ls_xunit,  ' ',        '2',     ' ',       :ls_rvno, :ls_xtype,
				 ' ',     0,        :ls_rrogb, ' ',     ' ',        ' ',        ' ',     ' ',       ' ',      ' ',
				 ' ',     ' ',      :ls_id,  :g_s_date, :ls_id, :g_s_datetime,  ' ',     ' ' ) Using lstr_ipis.t_sqlpis;	
					  
			  if lstr_ipis.t_sqlpis.sqlcode <> 0 then
				  ag_message = "품목기본 데이터 생성에 실패하였습니다."
				  f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_yinv002temp',&
				  lstr_ipis.t_sqlpis.sqlerrtext,'품목기본 데이터 생성에 실패', g_s_empno, g_s_ipaddr, g_s_macaddr)
				  return -1
			  end if
			  
		case 'U'
			SELECT Count(itno)                                             
			  INTO :li_retcnt                                    
			FROM PBINV.INV002                                                             
			WHERE COMLTD = '01' AND ITNO   = :ls_itno Using lstr_ipis.t_sqlpis;
																												  
			If li_retcnt < 1 then                                                          
				ag_message = "수정할 품목기본정보 미 존재"
				return -1                                                           
			End if
			
			UPDATE PBINV.INV002                                                      
				SET ITNM   = :ls_itnm,
				    SPEC   = :ls_spec,
					 XUNIT  = :ls_xunit,
					 RVNO   = :ls_rvno,
					 XTYPE  = :ls_xtype,
					 RROGB  = :ls_rrogb,                                                
					 UPDTID = :ls_id,                                                       
					 UPDTDT = :g_s_date                                                      
			WHERE	COMLTD	= '01'      AND ITNO = :ls_itno
			using lstr_ipis.t_sqlpis;
			
			if lstr_ipis.t_sqlpis.sqlnrows < 1 then
				ag_message = "품목기본정보 DB 업데이트 error invoke"
				f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_yinv002temp',&
				lstr_ipis.t_sqlpis.sqlerrtext,'품목기본정보 DB 업데이트 error invoke', g_s_empno, g_s_ipaddr, g_s_macaddr)
				return -1
			end if			
			
		case 'D'
			SELECT Count(itno)                                             
			  INTO :li_retcnt                                    
			FROM PBINV.INV002                                                             
			WHERE COMLTD = '01' AND ITNO   = :ls_itno Using lstr_ipis.t_sqlpis;
																												  
			If li_retcnt < 1 then                                                          
				ag_message = "품목기본정보 미 존재"
				return -1                                                           
			End if
			
			DELETE FROM PBINV.INV002
			WHERE	COMLTD	= '01'      AND ITNO = :ls_itno
			using lstr_ipis.t_sqlpis; 
			
			if lstr_ipis.t_sqlpis.sqlcode <> 0 then
				ag_message = "품목기본정보 삭제에 실패하였습니다."
				f_ipis_transaction_errorlog(ls_chgcd,'','f_up_ipis_mis_yinv002temp',&
				lstr_ipis.t_sqlpis.sqlerrtext,'품목기본정보 삭제 에러', g_s_empno, g_s_ipaddr, g_s_macaddr)
				return -1
			end if

		case else
			  ag_message = "데이타구분 CUD에 해당하지 않습니다."
			  return -1
	end choose
next

return 0
end function

