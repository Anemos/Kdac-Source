$PBExportHeader$f_cmms_crud_logic.srf
$PBExportComments$[공무자재이월]자재-설비 데이타 인터페이스
global type f_cmms_crud_logic from function_object
end type

forward prototypes
global function integer f_cmms_crud_logic (ref string ag_message, string ag_check, string ag_gubun, string ag_todate, datawindow ag_dw, any ag_str_ipis[])
end prototypes

global function integer f_cmms_crud_logic (ref string ag_message, string ag_check, string ag_gubun, string ag_todate, datawindow ag_dw, any ag_str_ipis[]);//*********************************************************************
//* Function Description : 공무자재 이월후 인터페이스
//* ag_check      :  'C' = 에러체크, 'A' = 적용
//* ag_gubun 		:  'B' = 소급, 'F' = 이월, 'D' = 삭제
//* ag_todate 		: 소급적용일자
//* ag_dw 	      : INV401 데이타
//* ag_message	   : 에러메시지
//* Return '0' : 성공, '-1' : 실패
//*********************************************************************

string ls_cmcd, ls_sliptype, ls_slipgubun, ls_invstcd, ls_invstcd1
string ls_plant, ls_dvsn, ls_itno,ls_cls, ls_srce
string ls_slno, ls_tdte4, ls_chkslno
integer li_index, li_tqty

str_ipis_server lstr_ipis

if ag_dw.rowcount() <> 1 then
	ag_message = "처리해야될 데이타가 데이타윈도우에 존재하지 않습니다."
	return -1
end if
ls_cmcd = Trim(ag_dw.GetItemString(1,"comltd"))
ls_plant = Trim(ag_dw.GetItemString(1,"xplant"))
ls_dvsn = Trim(ag_dw.GetItemString(1,"div"))
ls_sliptype = Trim(ag_dw.GetItemString(1,"sliptype"))
ls_cls = Trim(ag_dw.GetItemString(1,"cls"))
ls_itno = Trim(ag_dw.GetItemString(1,"itno"))
ls_invstcd = Trim(ag_dw.GetItemString(1,"invstcd"))
//ls_invstcd1 = Trim(ag_dw.GetItemString(1,"invstcd1"))
ls_invstcd1 = ls_invstcd
ls_slno = Trim(ag_dw.GetItemString(1,"slno"))
li_tqty = ag_dw.GetItemDecimal(1, "tqty4")
ls_tdte4 = Trim(ag_dw.GetItemString(1,"tdte4"))

if (ls_cls <> '23' and ls_cls <> '43') then return 0

Choose case ls_sliptype
	case 'RP','RF','RW'
		ls_slipgubun = '1'
	case 'SS','IW'
		ls_slipgubun = '2'
	case 'EX'
		ls_slipgubun = '3'
		if f_spacechk(ls_invstcd) = -1 or f_spacechk(ls_invstcd1) = -1 then
			ag_message = "변경전표에 대한 자재상태변경코드가 없습니다."
			return -1
		end if
	case 'IS'
		ls_slipgubun = '4'
	case 'RS'
		ls_slipgubun = '5'
	case else
		return 0
End choose

if ag_check = 'C' then
	return 0
end if

if mid(ls_tdte4,1,6) <> mid(ag_todate,1,6) then
	if (ag_gubun = 'B' or ag_gubun = 'D') and (mid(ag_todate,1,6) = mid(g_s_date,1,6)) then
		ag_message = "설비 : 전표발생일자가 소급,삭제에 해당하지 않습니다."
		return -1
	end if
	
	if (ag_gubun = 'F') and (mid(ag_todate,1,6) <> mid(g_s_date,1,6)) then
		ag_message = "설비 : 전표발생일자가 이월에 해당하지 않습니다."
		return -1
	end if
end if

if ag_gubun = 'D' then 
	li_tqty = (-1) * li_tqty
else
	li_tqty = 0
end if

//***AS400 접속여부 체크, 저녁8-아침8 인터페이스 저장
li_index = f_ipis_server_get_transaction(ag_str_ipis, ls_plant, ls_dvsn)

If li_index = -1 then
	ag_message = "CMMS 서버 연결에 실패하였습니다."
	return -1
End if

lstr_ipis = ag_str_ipis[li_index]

//입고
if ls_SlipGubun = '1' then
	UPDATE PART_MASTER
	SET NORMAL_QTY = (CASE :ls_InvStcd WHEN 'U' THEN ISNULL(NORMAL_QTY, 0) + :li_TQty ELSE ISNULL(NORMAL_QTY, 0) END),
		REPAIR_QTY = (CASE :ls_InvStcd WHEN 'R' THEN ISNULL(REPAIR_QTY, 0) + :li_TQty ELSE ISNULL(REPAIR_QTY, 0) END),
		SCRAM_QTY = (CASE :ls_InvStcd WHEN 'S' THEN ISNULL(SCRAM_QTY, 0) + :li_TQty ELSE ISNULL(SCRAM_QTY, 0) END)
	WHERE PART_CODE = :ls_itno  and AREA_CODE = :ls_plant and FACTORY_CODE = :ls_dvsn
	USING lstr_ipis.t_sqlpis;
//이체
elseif ls_SlipGubun = '2' then
	UPDATE PART_MASTER
	SET NORMAL_QTY = (CASE :ls_InvStcd WHEN 'U' THEN ISNULL(NORMAL_QTY, 0) - :li_TQty ELSE ISNULL(NORMAL_QTY, 0) END),
		REPAIR_QTY = (CASE :ls_InvStcd WHEN 'R' THEN ISNULL(REPAIR_QTY, 0) - :li_TQty ELSE ISNULL(REPAIR_QTY, 0) END),
		SCRAM_QTY = (CASE :ls_InvStcd WHEN 'S' THEN ISNULL(SCRAM_QTY, 0) - :li_TQty ELSE ISNULL(SCRAM_QTY, 0) END)
	WHERE PART_CODE = :ls_itno  and AREA_CODE = :ls_plant and FACTORY_CODE = :ls_dvsn
	USING lstr_ipis.t_sqlpis;
//재고상태 변경(사용가 <-> 수리품)
elseif ls_SlipGubun = '3' then
	if ls_InvStcd = 'U' And ls_InvStcd1 = 'R' then
		UPDATE PART_MASTER
		SET NORMAL_QTY = (CASE :ls_InvStcd WHEN 'U' THEN ISNULL(NORMAL_QTY, 0) - :li_TQty ELSE ISNULL(NORMAL_QTY, 0) END),
			REPAIR_QTY = (CASE :ls_InvStcd WHEN 'R' THEN ISNULL(REPAIR_QTY, 0) + :li_TQty ELSE ISNULL(REPAIR_QTY, 0) END)
		WHERE PART_CODE = :ls_itno  and AREA_CODE = :ls_plant and FACTORY_CODE = :ls_dvsn
		USING lstr_ipis.t_sqlpis;
	elseif ls_InvStcd = 'R' And ls_InvStcd1 = 'U' then
		UPDATE PART_MASTER
		SET NORMAL_QTY = (CASE :ls_InvStcd WHEN 'U' THEN ISNULL(NORMAL_QTY, 0) + :li_TQty ELSE ISNULL(NORMAL_QTY, 0) END),
			REPAIR_QTY = (CASE :ls_InvStcd WHEN 'R' THEN ISNULL(REPAIR_QTY, 0) - :li_TQty ELSE ISNULL(REPAIR_QTY, 0) END)
		WHERE PART_CODE = :ls_itno  and AREA_CODE = :ls_plant and FACTORY_CODE = :ls_dvsn
		USING lstr_ipis.t_sqlpis;
	end if
// 불출
elseif ls_slipgubun = '4' then
	UPDATE PART_MASTER
	SET NORMAL_QTY = (CASE :ls_InvStcd WHEN 'U' THEN ISNULL(NORMAL_QTY, 0) - :li_TQty ELSE ISNULL(NORMAL_QTY, 0) END),
		REPAIR_QTY = (CASE :ls_InvStcd WHEN 'R' THEN ISNULL(REPAIR_QTY, 0) - :li_TQty ELSE ISNULL(REPAIR_QTY, 0) END),
		SCRAM_QTY = (CASE :ls_InvStcd WHEN 'S' THEN ISNULL(SCRAM_QTY, 0) - :li_TQty ELSE ISNULL(SCRAM_QTY, 0) END),
		ETC_QTY = (CASE :ls_InvStcd WHEN 'X' THEN ISNULL(ETC_QTY, 0) - :li_TQty ELSE ISNULL(ETC_QTY, 0) END)
	WHERE PART_CODE = :ls_itno  and AREA_CODE = :ls_plant and FACTORY_CODE = :ls_dvsn
	USING lstr_ipis.t_sqlpis;
	
	if ag_gubun = 'D' then
		DELETE PART_OUT
		WHERE AREA_CODE = :ls_plant AND FACTORY_CODE = :ls_dvsn AND
				PART_CODE = :ls_itno AND SUBSTRING(PART_TAG,1,12) = :ls_slno AND
				CONVERT(varchar(8),OUT_DATE,112) = :ls_tdte4
		using lstr_ipis.t_sqlpis;
	else		
		UPDATE PART_OUT
		SET OUT_DATE = CAST(:ag_todate AS datetime)
		WHERE AREA_CODE = :ls_plant AND FACTORY_CODE = :ls_dvsn AND
				PART_CODE = :ls_itno AND SUBSTRING(PART_TAG,1,12) = :ls_slno AND
				CONVERT(varchar(8),OUT_DATE,112) = :ls_tdte4
		using lstr_ipis.t_sqlpis;
	end if
// 반납
elseif ls_slipgubun = '5' then
	UPDATE PART_MASTER
	SET NORMAL_QTY = (CASE :ls_InvStcd WHEN 'U' THEN ISNULL(NORMAL_QTY, 0) + :li_TQty ELSE ISNULL(NORMAL_QTY, 0) END),
		REPAIR_QTY = (CASE :ls_InvStcd WHEN 'R' THEN ISNULL(REPAIR_QTY, 0) + :li_TQty ELSE ISNULL(REPAIR_QTY, 0) END),
		SCRAM_QTY = (CASE :ls_InvStcd WHEN 'S' THEN ISNULL(SCRAM_QTY, 0) + :li_TQty ELSE ISNULL(SCRAM_QTY, 0) END),
		ETC_QTY = (CASE :ls_InvStcd WHEN 'X' THEN ISNULL(ETC_QTY, 0) + :li_TQty ELSE ISNULL(ETC_QTY, 0) END)
	WHERE PART_CODE = :ls_itno  and AREA_CODE = :ls_plant and FACTORY_CODE = :ls_dvsn
	USING lstr_ipis.t_sqlpis;
	
	if ag_gubun = 'D' then
		DELETE PART_RETURN
		WHERE AREA_CODE = :ls_plant AND FACTORY_CODE = :ls_dvsn AND
				PART_CODE = :ls_itno AND SUBSTRING(PART_TAG,1,12) = :ls_slno AND
				CONVERT(varchar(8),RETURN_DATE,112) = :ls_tdte4
		using lstr_ipis.t_sqlpis;
	else
		UPDATE PART_RETURN
		SET RETURN_DATE = CAST(:ag_todate AS datetime)
		WHERE AREA_CODE = :ls_plant AND FACTORY_CODE = :ls_dvsn AND
				PART_CODE = :ls_itno AND SUBSTRING(PART_TAG,1,12) = :ls_slno AND
				CONVERT(varchar(8),RETURN_DATE,112) = :ls_tdte4
		using lstr_ipis.t_sqlpis;
	end if
else
	return 0
end if

if (lstr_ipis.t_sqlpis.sqlcode = -1) or ( lstr_ipis.t_sqlpis.sqlcode = 0 and lstr_ipis.t_sqlpis.sqlnrows < 1 ) then
	ag_message = "설비 마스타 및 불출,반납 수정시에 오류가 발생하였습니다. : " + lstr_ipis.t_sqlpis.sqlerrtext
	return -1
end if

return 0
end function

