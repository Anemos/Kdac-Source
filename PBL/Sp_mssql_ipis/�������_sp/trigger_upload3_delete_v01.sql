SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO



ALTER    TRIGGER [TRIGGER_UPLOAD3] ON [dbo].[equip_master]
FOR DELETE
AS

DECLARE @p_chkcnt int

SELECT @p_chkcnt = COUNT(*) FROM EQUIP_MASTER_UPLOAD AA INNER JOIN DELETED BB
  ON AA.AREA_CODE = BB.AREA_CODE AND AA.FACTORY_CODE = BB.FACTORY_CODE AND
    AA.EQUIP_CODE = BB.EQUIP_CODE AND AA.LAST_DTTM = getdate() AND AA.INPUT_DIV = 'D'
    
if @p_chkcnt = 0 
  BEGIN
    INSERT INTO EQUIP_MASTER_UPLOAD(AREA_CODE, FACTORY_CODE, EQUIP_CODE, EQUIP_NAME, ASSET_CODE, EQUIP_DIV_CODE, EQUIP_SPEC, EQUIP_USE, CC_CODE, LINE_CODE, EQUIP_SHORT_NAME, EQUIP_INSTALL_DATE, EQUIP_PROCESS_NUMBER, DEPT_CODE_OP, DEPT_CODE_USE, COMP_CODE_VENDER, COMP_CODE_AGENT, UP_DIV,LAST_DTTM, INPUT_DIV)
    SELECT AREA_CODE, FACTORY_CODE, EQUIP_CODE, EQUIP_NAME, ASSET_CODE, EQUIP_DIV_CODE, EQUIP_SPEC, EQUIP_USE, CC_CODE, LINE_CODE, EQUIP_SHORT_NAME, CONVERT(VARCHAR(8),EQUIP_INSTALL_DATE,2), EQUIP_PROCESS_NUMBER, DEPT_CODE_OP, DEPT_CODE_USE, COMP_CODE_VENDER, COMP_CODE_AGENT,'N', getdate(),'D'
    FROM DELETED
    WHERE FACTORY_CODE <> 'R'
  END



GO
SET QUOTED_IDENTIFIER OFF
GO
SET ANSI_NULLS ON
GO

